package reconRootData
version v3r0

use GlastPolicy v4r*
use digiRootData v3r*
use ROOT v3r2p*

apply_pattern package_include

apply_pattern package_headers

apply_pattern ld_library_path

apply_pattern package_linkopts

# add the ROOT Physics library to the list for linking
macro_append ROOT_linkopts "-L${ROOT_PATH}/lib -lPhysics " \
             VisualC       " ${ROOT_PATH}/lib/libPhysics.lib "

macro reconRootData_shlibflags "" \
      VisualC            " ${use_linkopts} "


#--------------------------------------------------------------
private

# For Windows, use a setup script to run rootcint automatically
# Still using document generator for UNIX
setup_script dorootcint

#define the list of header files to be used in rootcint
macro root_headers "CalCluster.h CalRecon.h CalRangeRecData.h CalXtalRecData.h ReconEvent.h TkrCandHit.h TkrCandTrack.h TkrCovMat.h TkrFitHit.h TkrHitPlane.h TkrParams.h TkrRecon.h TkrTrack.h TkrVertex.h ReconLinkDef.h"

# on unix use a document to make rootcint part of the build process
make_fragment recon_dorootcint_header
make_fragment recon_dorootcint -header=recon_dorootcint_header
document recon_dorootcint ReconRootDataCint CINTFILE=../reconRootData/reconRootDataCint.cxx

library  reconRootData \
      ReconEvent.cxx \
      TkrRecon.cxx TkrCandHit.cxx TkrCandTrack.cxx TkrFitHit.cxx \
      TkrCovMat.cxx TkrHitPlane.cxx \
      TkrParams.cxx TkrTrack.cxx TkrVertex.cxx \
      CalRecon.cxx CalRangeRecData.cxx CalCluster.cxx CalXtalRecData.cxx \
      ../reconRootData/*.cxx \
      ${reconRootData_headers}

macro test_reconRootDatalinkopts ${reconRootData_shlibflags}
application test_reconRootData test/testReconClasses.cxx
