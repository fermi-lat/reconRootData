//
// File generated by /local/home/clavalle/GLAST/SAS/GLAST_EXT/rh9_gcc32/ROOT/v5.10.00/root/bin/rootcint at Mon Oct 30 18:17:30 2006

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "reconRootData_rootcint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void AcdTkrIntersection_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrIntersection(void *p = 0);
   static void *newArray_AcdTkrIntersection(Long_t size, void *p);
   static void delete_AcdTkrIntersection(void *p);
   static void deleteArray_AcdTkrIntersection(void *p);
   static void destruct_AcdTkrIntersection(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrIntersection*)
   {
      ::AcdTkrIntersection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrIntersection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrIntersection", ::AcdTkrIntersection::Class_Version(), "../reconRootData/AcdTkrIntersection.h", 23,
                  typeid(::AcdTkrIntersection), DefineBehavior(ptr, ptr),
                  &::AcdTkrIntersection::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrIntersection) );
      instance.SetNew(&new_AcdTkrIntersection);
      instance.SetNewArray(&newArray_AcdTkrIntersection);
      instance.SetDelete(&delete_AcdTkrIntersection);
      instance.SetDeleteArray(&deleteArray_AcdTkrIntersection);
      instance.SetDestructor(&destruct_AcdTkrIntersection);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrIntersection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrTrackParams_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrTrackParams(void *p = 0);
   static void *newArray_TkrTrackParams(Long_t size, void *p);
   static void delete_TkrTrackParams(void *p);
   static void deleteArray_TkrTrackParams(void *p);
   static void destruct_TkrTrackParams(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrTrackParams*)
   {
      ::TkrTrackParams *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrTrackParams >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrTrackParams", ::TkrTrackParams::Class_Version(), "../reconRootData/TkrTrackParams.h", 17,
                  typeid(::TkrTrackParams), DefineBehavior(ptr, ptr),
                  &::TkrTrackParams::Dictionary, isa_proxy, 4,
                  sizeof(::TkrTrackParams) );
      instance.SetNew(&new_TkrTrackParams);
      instance.SetNewArray(&newArray_TkrTrackParams);
      instance.SetDelete(&delete_TkrTrackParams);
      instance.SetDeleteArray(&deleteArray_TkrTrackParams);
      instance.SetDestructor(&destruct_TkrTrackParams);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrTrackParams*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdTkrPoca_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrPoca(void *p = 0);
   static void *newArray_AcdTkrPoca(Long_t size, void *p);
   static void delete_AcdTkrPoca(void *p);
   static void deleteArray_AcdTkrPoca(void *p);
   static void destruct_AcdTkrPoca(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrPoca*)
   {
      ::AcdTkrPoca *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrPoca >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrPoca", ::AcdTkrPoca::Class_Version(), "../reconRootData/AcdTkrPoca.h", 22,
                  typeid(::AcdTkrPoca), DefineBehavior(ptr, ptr),
                  &::AcdTkrPoca::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrPoca) );
      instance.SetNew(&new_AcdTkrPoca);
      instance.SetNewArray(&newArray_AcdTkrPoca);
      instance.SetDelete(&delete_AcdTkrPoca);
      instance.SetDeleteArray(&deleteArray_AcdTkrPoca);
      instance.SetDestructor(&destruct_AcdTkrPoca);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrPoca*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdHit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdHit(void *p = 0);
   static void *newArray_AcdHit(Long_t size, void *p);
   static void delete_AcdHit(void *p);
   static void deleteArray_AcdHit(void *p);
   static void destruct_AcdHit(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdHit*)
   {
      ::AcdHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdHit", ::AcdHit::Class_Version(), "../reconRootData/AcdHit.h", 19,
                  typeid(::AcdHit), DefineBehavior(ptr, ptr),
                  &::AcdHit::Dictionary, isa_proxy, 4,
                  sizeof(::AcdHit) );
      instance.SetNew(&new_AcdHit);
      instance.SetNewArray(&newArray_AcdHit);
      instance.SetDelete(&delete_AcdHit);
      instance.SetDeleteArray(&deleteArray_AcdHit);
      instance.SetDestructor(&destruct_AcdHit);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdTkrLocalCoords_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrLocalCoords(void *p = 0);
   static void *newArray_AcdTkrLocalCoords(Long_t size, void *p);
   static void delete_AcdTkrLocalCoords(void *p);
   static void deleteArray_AcdTkrLocalCoords(void *p);
   static void destruct_AcdTkrLocalCoords(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrLocalCoords*)
   {
      ::AcdTkrLocalCoords *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrLocalCoords >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrLocalCoords", ::AcdTkrLocalCoords::Class_Version(), "../reconRootData/AcdTkrLocalCoords.h", 20,
                  typeid(::AcdTkrLocalCoords), DefineBehavior(ptr, ptr),
                  &::AcdTkrLocalCoords::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrLocalCoords) );
      instance.SetNew(&new_AcdTkrLocalCoords);
      instance.SetNewArray(&newArray_AcdTkrLocalCoords);
      instance.SetDelete(&delete_AcdTkrLocalCoords);
      instance.SetDeleteArray(&deleteArray_AcdTkrLocalCoords);
      instance.SetDestructor(&destruct_AcdTkrLocalCoords);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrLocalCoords*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdPocaData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdPocaData(void *p = 0);
   static void *newArray_AcdPocaData(Long_t size, void *p);
   static void delete_AcdPocaData(void *p);
   static void deleteArray_AcdPocaData(void *p);
   static void destruct_AcdPocaData(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdPocaData*)
   {
      ::AcdPocaData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdPocaData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdPocaData", ::AcdPocaData::Class_Version(), "../reconRootData/AcdPocaData.h", 21,
                  typeid(::AcdPocaData), DefineBehavior(ptr, ptr),
                  &::AcdPocaData::Dictionary, isa_proxy, 4,
                  sizeof(::AcdPocaData) );
      instance.SetNew(&new_AcdPocaData);
      instance.SetNewArray(&newArray_AcdPocaData);
      instance.SetDelete(&delete_AcdPocaData);
      instance.SetDeleteArray(&deleteArray_AcdPocaData);
      instance.SetDestructor(&destruct_AcdPocaData);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdPocaData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdTkrHitPoca_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrHitPoca(void *p = 0);
   static void *newArray_AcdTkrHitPoca(Long_t size, void *p);
   static void delete_AcdTkrHitPoca(void *p);
   static void deleteArray_AcdTkrHitPoca(void *p);
   static void destruct_AcdTkrHitPoca(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrHitPoca*)
   {
      ::AcdTkrHitPoca *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrHitPoca >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrHitPoca", ::AcdTkrHitPoca::Class_Version(), "../reconRootData/AcdTkrHitPoca.h", 25,
                  typeid(::AcdTkrHitPoca), DefineBehavior(ptr, ptr),
                  &::AcdTkrHitPoca::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrHitPoca) );
      instance.SetNew(&new_AcdTkrHitPoca);
      instance.SetNewArray(&newArray_AcdTkrHitPoca);
      instance.SetDelete(&delete_AcdTkrHitPoca);
      instance.SetDeleteArray(&deleteArray_AcdTkrHitPoca);
      instance.SetDestructor(&destruct_AcdTkrHitPoca);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrHitPoca*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdTkrGapPoca_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrGapPoca(void *p = 0);
   static void *newArray_AcdTkrGapPoca(Long_t size, void *p);
   static void delete_AcdTkrGapPoca(void *p);
   static void deleteArray_AcdTkrGapPoca(void *p);
   static void destruct_AcdTkrGapPoca(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrGapPoca*)
   {
      ::AcdTkrGapPoca *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrGapPoca >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrGapPoca", ::AcdTkrGapPoca::Class_Version(), "../reconRootData/AcdTkrGapPoca.h", 23,
                  typeid(::AcdTkrGapPoca), DefineBehavior(ptr, ptr),
                  &::AcdTkrGapPoca::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrGapPoca) );
      instance.SetNew(&new_AcdTkrGapPoca);
      instance.SetNewArray(&newArray_AcdTkrGapPoca);
      instance.SetDelete(&delete_AcdTkrGapPoca);
      instance.SetDeleteArray(&deleteArray_AcdTkrGapPoca);
      instance.SetDestructor(&destruct_AcdTkrGapPoca);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrGapPoca*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdTkrPoint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdTkrPoint(void *p = 0);
   static void *newArray_AcdTkrPoint(Long_t size, void *p);
   static void delete_AcdTkrPoint(void *p);
   static void deleteArray_AcdTkrPoint(void *p);
   static void destruct_AcdTkrPoint(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdTkrPoint*)
   {
      ::AcdTkrPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdTkrPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdTkrPoint", ::AcdTkrPoint::Class_Version(), "../reconRootData/AcdTkrPoint.h", 24,
                  typeid(::AcdTkrPoint), DefineBehavior(ptr, ptr),
                  &::AcdTkrPoint::Dictionary, isa_proxy, 4,
                  sizeof(::AcdTkrPoint) );
      instance.SetNew(&new_AcdTkrPoint);
      instance.SetNewArray(&newArray_AcdTkrPoint);
      instance.SetDelete(&delete_AcdTkrPoint);
      instance.SetDeleteArray(&deleteArray_AcdTkrPoint);
      instance.SetDestructor(&destruct_AcdTkrPoint);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdTkrPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdSplashVars_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdSplashVars(void *p = 0);
   static void *newArray_AcdSplashVars(Long_t size, void *p);
   static void delete_AcdSplashVars(void *p);
   static void deleteArray_AcdSplashVars(void *p);
   static void destruct_AcdSplashVars(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdSplashVars*)
   {
      ::AcdSplashVars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdSplashVars >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdSplashVars", ::AcdSplashVars::Class_Version(), "../reconRootData/AcdSplashVars.h", 22,
                  typeid(::AcdSplashVars), DefineBehavior(ptr, ptr),
                  &::AcdSplashVars::Dictionary, isa_proxy, 4,
                  sizeof(::AcdSplashVars) );
      instance.SetNew(&new_AcdSplashVars);
      instance.SetNewArray(&newArray_AcdSplashVars);
      instance.SetDelete(&delete_AcdSplashVars);
      instance.SetDeleteArray(&deleteArray_AcdSplashVars);
      instance.SetDestructor(&destruct_AcdSplashVars);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdSplashVars*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AcdRecon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_AcdRecon(void *p = 0);
   static void *newArray_AcdRecon(Long_t size, void *p);
   static void delete_AcdRecon(void *p);
   static void deleteArray_AcdRecon(void *p);
   static void destruct_AcdRecon(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::AcdRecon*)
   {
      ::AcdRecon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AcdRecon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AcdRecon", ::AcdRecon::Class_Version(), "../reconRootData/AcdRecon.h", 57,
                  typeid(::AcdRecon), DefineBehavior(ptr, ptr),
                  &::AcdRecon::Dictionary, isa_proxy, 4,
                  sizeof(::AcdRecon) );
      instance.SetNew(&new_AcdRecon);
      instance.SetNewArray(&newArray_AcdRecon);
      instance.SetDelete(&delete_AcdRecon);
      instance.SetDeleteArray(&deleteArray_AcdRecon);
      instance.SetDestructor(&destruct_AcdRecon);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::AcdRecon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalParams_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalParams(void *p = 0);
   static void *newArray_CalParams(Long_t size, void *p);
   static void delete_CalParams(void *p);
   static void deleteArray_CalParams(void *p);
   static void destruct_CalParams(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalParams*)
   {
      ::CalParams *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalParams >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalParams", ::CalParams::Class_Version(), "../reconRootData/CalParams.h", 18,
                  typeid(::CalParams), DefineBehavior(ptr, ptr),
                  &::CalParams::Dictionary, isa_proxy, 4,
                  sizeof(::CalParams) );
      instance.SetNew(&new_CalParams);
      instance.SetNewArray(&newArray_CalParams);
      instance.SetDelete(&delete_CalParams);
      instance.SetDeleteArray(&deleteArray_CalParams);
      instance.SetDestructor(&destruct_CalParams);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalParams*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalClusterLayerData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalClusterLayerData(void *p = 0);
   static void *newArray_CalClusterLayerData(Long_t size, void *p);
   static void delete_CalClusterLayerData(void *p);
   static void deleteArray_CalClusterLayerData(void *p);
   static void destruct_CalClusterLayerData(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalClusterLayerData*)
   {
      ::CalClusterLayerData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalClusterLayerData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalClusterLayerData", ::CalClusterLayerData::Class_Version(), "../reconRootData/CalClusterLayerData.h", 8,
                  typeid(::CalClusterLayerData), DefineBehavior(ptr, ptr),
                  &::CalClusterLayerData::Dictionary, isa_proxy, 4,
                  sizeof(::CalClusterLayerData) );
      instance.SetNew(&new_CalClusterLayerData);
      instance.SetNewArray(&newArray_CalClusterLayerData);
      instance.SetDelete(&delete_CalClusterLayerData);
      instance.SetDeleteArray(&deleteArray_CalClusterLayerData);
      instance.SetDestructor(&destruct_CalClusterLayerData);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalClusterLayerData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalCluster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalCluster(void *p = 0);
   static void *newArray_CalCluster(Long_t size, void *p);
   static void delete_CalCluster(void *p);
   static void deleteArray_CalCluster(void *p);
   static void destruct_CalCluster(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalCluster*)
   {
      ::CalCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalCluster", ::CalCluster::Class_Version(), "../reconRootData/CalCluster.h", 31,
                  typeid(::CalCluster), DefineBehavior(ptr, ptr),
                  &::CalCluster::Dictionary, isa_proxy, 4,
                  sizeof(::CalCluster) );
      instance.SetNew(&new_CalCluster);
      instance.SetNewArray(&newArray_CalCluster);
      instance.SetDelete(&delete_CalCluster);
      instance.SetDeleteArray(&deleteArray_CalCluster);
      instance.SetDestructor(&destruct_CalCluster);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalCorToolResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalCorToolResult(void *p = 0);
   static void *newArray_CalCorToolResult(Long_t size, void *p);
   static void delete_CalCorToolResult(void *p);
   static void deleteArray_CalCorToolResult(void *p);
   static void destruct_CalCorToolResult(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalCorToolResult*)
   {
      ::CalCorToolResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalCorToolResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalCorToolResult", ::CalCorToolResult::Class_Version(), "../reconRootData/CalCorToolResult.h", 10,
                  typeid(::CalCorToolResult), DefineBehavior(ptr, ptr),
                  &::CalCorToolResult::Dictionary, isa_proxy, 4,
                  sizeof(::CalCorToolResult) );
      instance.SetNew(&new_CalCorToolResult);
      instance.SetNewArray(&newArray_CalCorToolResult);
      instance.SetDelete(&delete_CalCorToolResult);
      instance.SetDeleteArray(&deleteArray_CalCorToolResult);
      instance.SetDestructor(&destruct_CalCorToolResult);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalCorToolResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalEventEnergy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalEventEnergy(void *p = 0);
   static void *newArray_CalEventEnergy(Long_t size, void *p);
   static void delete_CalEventEnergy(void *p);
   static void deleteArray_CalEventEnergy(void *p);
   static void destruct_CalEventEnergy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalEventEnergy*)
   {
      ::CalEventEnergy *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalEventEnergy >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalEventEnergy", ::CalEventEnergy::Class_Version(), "../reconRootData/CalEventEnergy.h", 10,
                  typeid(::CalEventEnergy), DefineBehavior(ptr, ptr),
                  &::CalEventEnergy::Dictionary, isa_proxy, 4,
                  sizeof(::CalEventEnergy) );
      instance.SetNew(&new_CalEventEnergy);
      instance.SetNewArray(&newArray_CalEventEnergy);
      instance.SetDelete(&delete_CalEventEnergy);
      instance.SetDeleteArray(&deleteArray_CalEventEnergy);
      instance.SetDestructor(&destruct_CalEventEnergy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalEventEnergy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalRangeRecData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalRangeRecData(void *p = 0);
   static void *newArray_CalRangeRecData(Long_t size, void *p);
   static void delete_CalRangeRecData(void *p);
   static void deleteArray_CalRangeRecData(void *p);
   static void destruct_CalRangeRecData(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalRangeRecData*)
   {
      ::CalRangeRecData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalRangeRecData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalRangeRecData", ::CalRangeRecData::Class_Version(), "../reconRootData/CalRangeRecData.h", 16,
                  typeid(::CalRangeRecData), DefineBehavior(ptr, ptr),
                  &::CalRangeRecData::Dictionary, isa_proxy, 4,
                  sizeof(::CalRangeRecData) );
      instance.SetNew(&new_CalRangeRecData);
      instance.SetNewArray(&newArray_CalRangeRecData);
      instance.SetDelete(&delete_CalRangeRecData);
      instance.SetDeleteArray(&deleteArray_CalRangeRecData);
      instance.SetDestructor(&destruct_CalRangeRecData);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalRangeRecData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalXtalRecData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalXtalRecData(void *p = 0);
   static void *newArray_CalXtalRecData(Long_t size, void *p);
   static void delete_CalXtalRecData(void *p);
   static void deleteArray_CalXtalRecData(void *p);
   static void destruct_CalXtalRecData(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalXtalRecData*)
   {
      ::CalXtalRecData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalXtalRecData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalXtalRecData", ::CalXtalRecData::Class_Version(), "../reconRootData/CalXtalRecData.h", 29,
                  typeid(::CalXtalRecData), DefineBehavior(ptr, ptr),
                  &::CalXtalRecData::Dictionary, isa_proxy, 4,
                  sizeof(::CalXtalRecData) );
      instance.SetNew(&new_CalXtalRecData);
      instance.SetNewArray(&newArray_CalXtalRecData);
      instance.SetDelete(&delete_CalXtalRecData);
      instance.SetDeleteArray(&deleteArray_CalXtalRecData);
      instance.SetDestructor(&destruct_CalXtalRecData);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalXtalRecData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalMipTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalMipTrack(void *p = 0);
   static void *newArray_CalMipTrack(Long_t size, void *p);
   static void delete_CalMipTrack(void *p);
   static void deleteArray_CalMipTrack(void *p);
   static void destruct_CalMipTrack(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalMipTrack*)
   {
      ::CalMipTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalMipTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalMipTrack", ::CalMipTrack::Class_Version(), "../reconRootData/CalMipTrack.h", 22,
                  typeid(::CalMipTrack), DefineBehavior(ptr, ptr),
                  &::CalMipTrack::Dictionary, isa_proxy, 4,
                  sizeof(::CalMipTrack) );
      instance.SetNew(&new_CalMipTrack);
      instance.SetNewArray(&newArray_CalMipTrack);
      instance.SetDelete(&delete_CalMipTrack);
      instance.SetDeleteArray(&deleteArray_CalMipTrack);
      instance.SetDestructor(&destruct_CalMipTrack);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalMipTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GcrXtal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GcrXtal(void *p = 0);
   static void *newArray_GcrXtal(Long_t size, void *p);
   static void delete_GcrXtal(void *p);
   static void deleteArray_GcrXtal(void *p);
   static void destruct_GcrXtal(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::GcrXtal*)
   {
      ::GcrXtal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GcrXtal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GcrXtal", ::GcrXtal::Class_Version(), "../reconRootData/GcrXtal.h", 25,
                  typeid(::GcrXtal), DefineBehavior(ptr, ptr),
                  &::GcrXtal::Dictionary, isa_proxy, 4,
                  sizeof(::GcrXtal) );
      instance.SetNew(&new_GcrXtal);
      instance.SetNewArray(&newArray_GcrXtal);
      instance.SetDelete(&delete_GcrXtal);
      instance.SetDeleteArray(&deleteArray_GcrXtal);
      instance.SetDestructor(&destruct_GcrXtal);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::GcrXtal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GcrTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_GcrTrack(void *p = 0);
   static void *newArray_GcrTrack(Long_t size, void *p);
   static void delete_GcrTrack(void *p);
   static void deleteArray_GcrTrack(void *p);
   static void destruct_GcrTrack(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::GcrTrack*)
   {
      ::GcrTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GcrTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GcrTrack", ::GcrTrack::Class_Version(), "../reconRootData/GcrTrack.h", 27,
                  typeid(::GcrTrack), DefineBehavior(ptr, ptr),
                  &::GcrTrack::Dictionary, isa_proxy, 4,
                  sizeof(::GcrTrack) );
      instance.SetNew(&new_GcrTrack);
      instance.SetNewArray(&newArray_GcrTrack);
      instance.SetDelete(&delete_GcrTrack);
      instance.SetDeleteArray(&deleteArray_GcrTrack);
      instance.SetDestructor(&destruct_GcrTrack);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::GcrTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CalRecon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_CalRecon(void *p = 0);
   static void *newArray_CalRecon(Long_t size, void *p);
   static void delete_CalRecon(void *p);
   static void deleteArray_CalRecon(void *p);
   static void destruct_CalRecon(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::CalRecon*)
   {
      ::CalRecon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalRecon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalRecon", ::CalRecon::Class_Version(), "../reconRootData/CalRecon.h", 31,
                  typeid(::CalRecon), DefineBehavior(ptr, ptr),
                  &::CalRecon::Dictionary, isa_proxy, 4,
                  sizeof(::CalRecon) );
      instance.SetNew(&new_CalRecon);
      instance.SetNewArray(&newArray_CalRecon);
      instance.SetDelete(&delete_CalRecon);
      instance.SetDeleteArray(&deleteArray_CalRecon);
      instance.SetDestructor(&destruct_CalRecon);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::CalRecon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrCluster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrCluster(void *p = 0);
   static void *newArray_TkrCluster(Long_t size, void *p);
   static void delete_TkrCluster(void *p);
   static void deleteArray_TkrCluster(void *p);
   static void destruct_TkrCluster(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrCluster*)
   {
      ::TkrCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrCluster", ::TkrCluster::Class_Version(), "../reconRootData/TkrCluster.h", 24,
                  typeid(::TkrCluster), DefineBehavior(ptr, ptr),
                  &::TkrCluster::Dictionary, isa_proxy, 4,
                  sizeof(::TkrCluster) );
      instance.SetNew(&new_TkrCluster);
      instance.SetNewArray(&newArray_TkrCluster);
      instance.SetDelete(&delete_TkrCluster);
      instance.SetDeleteArray(&deleteArray_TkrCluster);
      instance.SetDestructor(&destruct_TkrCluster);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrTrackHit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrTrackHit(void *p = 0);
   static void *newArray_TkrTrackHit(Long_t size, void *p);
   static void delete_TkrTrackHit(void *p);
   static void deleteArray_TkrTrackHit(void *p);
   static void destruct_TkrTrackHit(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrTrackHit*)
   {
      ::TkrTrackHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrTrackHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrTrackHit", ::TkrTrackHit::Class_Version(), "../reconRootData/TkrTrackHit.h", 31,
                  typeid(::TkrTrackHit), DefineBehavior(ptr, ptr),
                  &::TkrTrackHit::Dictionary, isa_proxy, 4,
                  sizeof(::TkrTrackHit) );
      instance.SetNew(&new_TkrTrackHit);
      instance.SetNewArray(&newArray_TkrTrackHit);
      instance.SetDelete(&delete_TkrTrackHit);
      instance.SetDeleteArray(&deleteArray_TkrTrackHit);
      instance.SetDestructor(&destruct_TkrTrackHit);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrTrackHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrTrack(void *p = 0);
   static void *newArray_TkrTrack(Long_t size, void *p);
   static void delete_TkrTrack(void *p);
   static void deleteArray_TkrTrack(void *p);
   static void destruct_TkrTrack(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrTrack*)
   {
      ::TkrTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrTrack", ::TkrTrack::Class_Version(), "../reconRootData/TkrTrack.h", 40,
                  typeid(::TkrTrack), DefineBehavior(ptr, ptr),
                  &::TkrTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TkrTrack) );
      instance.SetNew(&new_TkrTrack);
      instance.SetNewArray(&newArray_TkrTrack);
      instance.SetDelete(&delete_TkrTrack);
      instance.SetDeleteArray(&deleteArray_TkrTrack);
      instance.SetDestructor(&destruct_TkrTrack);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrVertex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrVertex(void *p = 0);
   static void *newArray_TkrVertex(Long_t size, void *p);
   static void delete_TkrVertex(void *p);
   static void deleteArray_TkrVertex(void *p);
   static void destruct_TkrVertex(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrVertex*)
   {
      ::TkrVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrVertex", ::TkrVertex::Class_Version(), "../reconRootData/TkrVertex.h", 32,
                  typeid(::TkrVertex), DefineBehavior(ptr, ptr),
                  &::TkrVertex::Dictionary, isa_proxy, 4,
                  sizeof(::TkrVertex) );
      instance.SetNew(&new_TkrVertex);
      instance.SetNewArray(&newArray_TkrVertex);
      instance.SetDelete(&delete_TkrVertex);
      instance.SetDeleteArray(&deleteArray_TkrVertex);
      instance.SetDestructor(&destruct_TkrVertex);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrDiagnostics_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrDiagnostics(void *p = 0);
   static void *newArray_TkrDiagnostics(Long_t size, void *p);
   static void delete_TkrDiagnostics(void *p);
   static void deleteArray_TkrDiagnostics(void *p);
   static void destruct_TkrDiagnostics(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrDiagnostics*)
   {
      ::TkrDiagnostics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrDiagnostics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrDiagnostics", ::TkrDiagnostics::Class_Version(), "../reconRootData/TkrDiagnostics.h", 16,
                  typeid(::TkrDiagnostics), DefineBehavior(ptr, ptr),
                  &::TkrDiagnostics::Dictionary, isa_proxy, 4,
                  sizeof(::TkrDiagnostics) );
      instance.SetNew(&new_TkrDiagnostics);
      instance.SetNewArray(&newArray_TkrDiagnostics);
      instance.SetDelete(&delete_TkrDiagnostics);
      instance.SetDeleteArray(&deleteArray_TkrDiagnostics);
      instance.SetDestructor(&destruct_TkrDiagnostics);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrDiagnostics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TkrRecon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TkrRecon(void *p = 0);
   static void *newArray_TkrRecon(Long_t size, void *p);
   static void delete_TkrRecon(void *p);
   static void deleteArray_TkrRecon(void *p);
   static void destruct_TkrRecon(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TkrRecon*)
   {
      ::TkrRecon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TkrRecon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TkrRecon", ::TkrRecon::Class_Version(), "../reconRootData/TkrRecon.h", 27,
                  typeid(::TkrRecon), DefineBehavior(ptr, ptr),
                  &::TkrRecon::Dictionary, isa_proxy, 4,
                  sizeof(::TkrRecon) );
      instance.SetNew(&new_TkrRecon);
      instance.SetNewArray(&newArray_TkrRecon);
      instance.SetDelete(&delete_TkrRecon);
      instance.SetDeleteArray(&deleteArray_TkrRecon);
      instance.SetDestructor(&destruct_TkrRecon);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TkrRecon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace reconRootData {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void reconRootData_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("reconRootData", 0 /*version*/, "../reconRootData/AdfRecon.h", 19,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &reconRootData_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void reconRootData_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void reconRootDatacLcLTaggerCluster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_reconRootDatacLcLTaggerCluster(void *p = 0);
   static void *newArray_reconRootDatacLcLTaggerCluster(Long_t size, void *p);
   static void delete_reconRootDatacLcLTaggerCluster(void *p);
   static void deleteArray_reconRootDatacLcLTaggerCluster(void *p);
   static void destruct_reconRootDatacLcLTaggerCluster(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::reconRootData::TaggerCluster*)
   {
      ::reconRootData::TaggerCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::reconRootData::TaggerCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("reconRootData::TaggerCluster", ::reconRootData::TaggerCluster::Class_Version(), "../reconRootData/TaggerCluster.h", 17,
                  typeid(::reconRootData::TaggerCluster), DefineBehavior(ptr, ptr),
                  &::reconRootData::TaggerCluster::Dictionary, isa_proxy, 4,
                  sizeof(::reconRootData::TaggerCluster) );
      instance.SetNew(&new_reconRootDatacLcLTaggerCluster);
      instance.SetNewArray(&newArray_reconRootDatacLcLTaggerCluster);
      instance.SetDelete(&delete_reconRootDatacLcLTaggerCluster);
      instance.SetDeleteArray(&deleteArray_reconRootDatacLcLTaggerCluster);
      instance.SetDestructor(&destruct_reconRootDatacLcLTaggerCluster);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::reconRootData::TaggerCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void reconRootDatacLcLAdfRecon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_reconRootDatacLcLAdfRecon(void *p = 0);
   static void *newArray_reconRootDatacLcLAdfRecon(Long_t size, void *p);
   static void delete_reconRootDatacLcLAdfRecon(void *p);
   static void deleteArray_reconRootDatacLcLAdfRecon(void *p);
   static void destruct_reconRootDatacLcLAdfRecon(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::reconRootData::AdfRecon*)
   {
      ::reconRootData::AdfRecon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::reconRootData::AdfRecon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("reconRootData::AdfRecon", ::reconRootData::AdfRecon::Class_Version(), "../reconRootData/AdfRecon.h", 21,
                  typeid(::reconRootData::AdfRecon), DefineBehavior(ptr, ptr),
                  &::reconRootData::AdfRecon::Dictionary, isa_proxy, 4,
                  sizeof(::reconRootData::AdfRecon) );
      instance.SetNew(&new_reconRootDatacLcLAdfRecon);
      instance.SetNewArray(&newArray_reconRootDatacLcLAdfRecon);
      instance.SetDelete(&delete_reconRootDatacLcLAdfRecon);
      instance.SetDeleteArray(&deleteArray_reconRootDatacLcLAdfRecon);
      instance.SetDestructor(&destruct_reconRootDatacLcLAdfRecon);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::reconRootData::AdfRecon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ReconEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_ReconEvent(void *p = 0);
   static void *newArray_ReconEvent(Long_t size, void *p);
   static void delete_ReconEvent(void *p);
   static void deleteArray_ReconEvent(void *p);
   static void destruct_ReconEvent(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::ReconEvent*)
   {
      ::ReconEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ReconEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ReconEvent", ::ReconEvent::Class_Version(), "../reconRootData/ReconEvent.h", 26,
                  typeid(::ReconEvent), DefineBehavior(ptr, ptr),
                  &::ReconEvent::Dictionary, isa_proxy, 4,
                  sizeof(::ReconEvent) );
      instance.SetNew(&new_ReconEvent);
      instance.SetNewArray(&newArray_ReconEvent);
      instance.SetDelete(&delete_ReconEvent);
      instance.SetDeleteArray(&deleteArray_ReconEvent);
      instance.SetDestructor(&destruct_ReconEvent);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::ReconEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *AcdTkrIntersection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrIntersection::Class_Name()
{
   return "AcdTkrIntersection";
}

//______________________________________________________________________________
const char *AcdTkrIntersection::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrIntersection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrIntersection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrIntersection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrIntersection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrIntersection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrIntersection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrIntersection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrTrackParams::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrTrackParams::Class_Name()
{
   return "TkrTrackParams";
}

//______________________________________________________________________________
const char *TkrTrackParams::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrackParams*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrTrackParams::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrackParams*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrTrackParams::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrackParams*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrTrackParams::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrackParams*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdTkrPoca::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrPoca::Class_Name()
{
   return "AcdTkrPoca";
}

//______________________________________________________________________________
const char *AcdTkrPoca::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrPoca*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrPoca::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrPoca*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrPoca::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrPoca*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrPoca::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrPoca*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdHit::Class_Name()
{
   return "AcdHit";
}

//______________________________________________________________________________
const char *AcdHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdTkrLocalCoords::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrLocalCoords::Class_Name()
{
   return "AcdTkrLocalCoords";
}

//______________________________________________________________________________
const char *AcdTkrLocalCoords::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrLocalCoords*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrLocalCoords::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrLocalCoords*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrLocalCoords::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrLocalCoords*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrLocalCoords::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrLocalCoords*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdPocaData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdPocaData::Class_Name()
{
   return "AcdPocaData";
}

//______________________________________________________________________________
const char *AcdPocaData::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdPocaData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdPocaData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdPocaData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdPocaData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdPocaData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdPocaData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdPocaData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdTkrHitPoca::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrHitPoca::Class_Name()
{
   return "AcdTkrHitPoca";
}

//______________________________________________________________________________
const char *AcdTkrHitPoca::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrHitPoca*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrHitPoca::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrHitPoca*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrHitPoca::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrHitPoca*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrHitPoca::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrHitPoca*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdTkrGapPoca::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrGapPoca::Class_Name()
{
   return "AcdTkrGapPoca";
}

//______________________________________________________________________________
const char *AcdTkrGapPoca::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrGapPoca*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrGapPoca::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrGapPoca*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrGapPoca::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrGapPoca*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrGapPoca::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrGapPoca*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdTkrPoint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdTkrPoint::Class_Name()
{
   return "AcdTkrPoint";
}

//______________________________________________________________________________
const char *AcdTkrPoint::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdTkrPoint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdTkrPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdTkrPoint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdTkrPoint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdTkrPoint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdSplashVars::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdSplashVars::Class_Name()
{
   return "AcdSplashVars";
}

//______________________________________________________________________________
const char *AcdSplashVars::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdSplashVars*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdSplashVars::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdSplashVars*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdSplashVars::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdSplashVars*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdSplashVars::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdSplashVars*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AcdRecon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AcdRecon::Class_Name()
{
   return "AcdRecon";
}

//______________________________________________________________________________
const char *AcdRecon::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::AcdRecon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AcdRecon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::AcdRecon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AcdRecon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::AcdRecon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AcdRecon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::AcdRecon*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalParams::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalParams::Class_Name()
{
   return "CalParams";
}

//______________________________________________________________________________
const char *CalParams::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalParams*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalParams::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalParams*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalParams::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalParams*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalParams::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalParams*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalClusterLayerData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalClusterLayerData::Class_Name()
{
   return "CalClusterLayerData";
}

//______________________________________________________________________________
const char *CalClusterLayerData::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalClusterLayerData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalClusterLayerData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalClusterLayerData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalClusterLayerData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalClusterLayerData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalClusterLayerData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalClusterLayerData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalCluster::Class_Name()
{
   return "CalCluster";
}

//______________________________________________________________________________
const char *CalCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalCorToolResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalCorToolResult::Class_Name()
{
   return "CalCorToolResult";
}

//______________________________________________________________________________
const char *CalCorToolResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalCorToolResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalCorToolResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalCorToolResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalCorToolResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalCorToolResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalCorToolResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalCorToolResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalEventEnergy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalEventEnergy::Class_Name()
{
   return "CalEventEnergy";
}

//______________________________________________________________________________
const char *CalEventEnergy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalEventEnergy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalEventEnergy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalEventEnergy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalEventEnergy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalEventEnergy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalEventEnergy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalEventEnergy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalRangeRecData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalRangeRecData::Class_Name()
{
   return "CalRangeRecData";
}

//______________________________________________________________________________
const char *CalRangeRecData::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalRangeRecData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalRangeRecData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalRangeRecData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalRangeRecData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalRangeRecData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalRangeRecData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalRangeRecData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalXtalRecData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalXtalRecData::Class_Name()
{
   return "CalXtalRecData";
}

//______________________________________________________________________________
const char *CalXtalRecData::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalXtalRecData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalXtalRecData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalXtalRecData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalXtalRecData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalXtalRecData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalXtalRecData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalXtalRecData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalMipTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalMipTrack::Class_Name()
{
   return "CalMipTrack";
}

//______________________________________________________________________________
const char *CalMipTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalMipTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalMipTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalMipTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalMipTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalMipTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalMipTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalMipTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GcrXtal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GcrXtal::Class_Name()
{
   return "GcrXtal";
}

//______________________________________________________________________________
const char *GcrXtal::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::GcrXtal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GcrXtal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::GcrXtal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GcrXtal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::GcrXtal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GcrXtal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::GcrXtal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GcrTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GcrTrack::Class_Name()
{
   return "GcrTrack";
}

//______________________________________________________________________________
const char *GcrTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::GcrTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GcrTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::GcrTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GcrTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::GcrTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GcrTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::GcrTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CalRecon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalRecon::Class_Name()
{
   return "CalRecon";
}

//______________________________________________________________________________
const char *CalRecon::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::CalRecon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalRecon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::CalRecon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalRecon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::CalRecon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalRecon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::CalRecon*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrCluster::Class_Name()
{
   return "TkrCluster";
}

//______________________________________________________________________________
const char *TkrCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrTrackHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrTrackHit::Class_Name()
{
   return "TkrTrackHit";
}

//______________________________________________________________________________
const char *TkrTrackHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrackHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrTrackHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrackHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrTrackHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrackHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrTrackHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrackHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrTrack::Class_Name()
{
   return "TkrTrack";
}

//______________________________________________________________________________
const char *TkrTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrVertex::Class_Name()
{
   return "TkrVertex";
}

//______________________________________________________________________________
const char *TkrVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrVertex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrDiagnostics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrDiagnostics::Class_Name()
{
   return "TkrDiagnostics";
}

//______________________________________________________________________________
const char *TkrDiagnostics::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrDiagnostics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrDiagnostics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrDiagnostics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrDiagnostics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrDiagnostics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrDiagnostics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrDiagnostics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TkrRecon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TkrRecon::Class_Name()
{
   return "TkrRecon";
}

//______________________________________________________________________________
const char *TkrRecon::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TkrRecon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TkrRecon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TkrRecon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TkrRecon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TkrRecon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TkrRecon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TkrRecon*)0x0)->GetClass();
   return fgIsA;
}

      namespace reconRootData {
//______________________________________________________________________________
TClass *TaggerCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaggerCluster::Class_Name()
{
   return "reconRootData::TaggerCluster";
}

//______________________________________________________________________________
const char *TaggerCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::reconRootData::TaggerCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaggerCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::reconRootData::TaggerCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaggerCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::reconRootData::TaggerCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaggerCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::reconRootData::TaggerCluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace reconRootData
      namespace reconRootData {
//______________________________________________________________________________
TClass *AdfRecon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AdfRecon::Class_Name()
{
   return "reconRootData::AdfRecon";
}

//______________________________________________________________________________
const char *AdfRecon::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::reconRootData::AdfRecon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AdfRecon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::reconRootData::AdfRecon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AdfRecon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::reconRootData::AdfRecon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AdfRecon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::reconRootData::AdfRecon*)0x0)->GetClass();
   return fgIsA;
}

} // namespace reconRootData
//______________________________________________________________________________
TClass *ReconEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ReconEvent::Class_Name()
{
   return "ReconEvent";
}

//______________________________________________________________________________
const char *ReconEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::ReconEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ReconEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::ReconEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ReconEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::ReconEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ReconEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::ReconEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ReconEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ReconEvent.

   if (R__b.IsReading()) {
      ReconEvent::Class()->ReadBuffer(R__b, this);
   } else {
      ReconEvent::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void ReconEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class ReconEvent.
      TClass *R__cl = ::ReconEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_eventId", &m_eventId);
      R__insp.Inspect(R__cl, R__parent, "m_runId", &m_runId);
      R__insp.Inspect(R__cl, R__parent, "*m_acd", &m_acd);
      R__insp.Inspect(R__cl, R__parent, "*m_cal", &m_cal);
      R__insp.Inspect(R__cl, R__parent, "*m_tkr", &m_tkr);
      R__insp.Inspect(R__cl, R__parent, "m_eventFlags", &m_eventFlags);
      R__insp.Inspect(R__cl, R__parent, "*m_adfRecon", &m_adfRecon);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ReconEvent(void *p) {
      return  p ? new(p) ::ReconEvent : new ::ReconEvent;
   }
   static void *newArray_ReconEvent(Long_t nElements, void *p) {
      return p ? new(p) ::ReconEvent[nElements] : new ::ReconEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_ReconEvent(void *p) {
      delete ((::ReconEvent*)p);
   }
   static void deleteArray_ReconEvent(void *p) {
      delete [] ((::ReconEvent*)p);
   }
   static void destruct_ReconEvent(void *p) {
      typedef ::ReconEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ReconEvent

//______________________________________________________________________________
void AcdTkrIntersection::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrIntersection.

   if (R__b.IsReading()) {
      AcdTkrIntersection::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrIntersection::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrIntersection::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrIntersection.
      TClass *R__cl = ::AcdTkrIntersection::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_tileId", &m_tileId);
      m_tileId.ShowMembers(R__insp, strcat(R__parent,"m_tileId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_trackIndex", &m_trackIndex);
      R__insp.Inspect(R__cl, R__parent, "m_location", &m_location);
      m_location.ShowMembers(R__insp, strcat(R__parent,"m_location.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_localX", &m_localX);
      R__insp.Inspect(R__cl, R__parent, "m_localY", &m_localY);
      R__insp.Inspect(R__cl, R__parent, "m_localXXCov", &m_localXXCov);
      R__insp.Inspect(R__cl, R__parent, "m_localYYCov", &m_localYYCov);
      R__insp.Inspect(R__cl, R__parent, "m_localXYCov", &m_localXYCov);
      R__insp.Inspect(R__cl, R__parent, "m_arcLengthToIntersection", &m_arcLengthToIntersection);
      R__insp.Inspect(R__cl, R__parent, "m_pathlengthInTile", &m_pathlengthInTile);
      R__insp.Inspect(R__cl, R__parent, "m_tileHit", &m_tileHit);
      R__insp.Inspect(R__cl, R__parent, "m_cosTheta", &m_cosTheta);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrIntersection(void *p) {
      return  p ? new(p) ::AcdTkrIntersection : new ::AcdTkrIntersection;
   }
   static void *newArray_AcdTkrIntersection(Long_t nElements, void *p) {
      return p ? new(p) ::AcdTkrIntersection[nElements] : new ::AcdTkrIntersection[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrIntersection(void *p) {
      delete ((::AcdTkrIntersection*)p);
   }
   static void deleteArray_AcdTkrIntersection(void *p) {
      delete [] ((::AcdTkrIntersection*)p);
   }
   static void destruct_AcdTkrIntersection(void *p) {
      typedef ::AcdTkrIntersection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrIntersection

//______________________________________________________________________________
void AcdTkrPoca::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrPoca.

   if (R__b.IsReading()) {
      AcdTkrPoca::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrPoca::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrPoca::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrPoca.
      TClass *R__cl = ::AcdTkrPoca::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_id", &m_id);
      m_id.ShowMembers(R__insp, strcat(R__parent,"m_id.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_tkIndex", &m_tkIndex);
      R__insp.Inspect(R__cl, R__parent, "m_doca", &m_doca);
      R__insp.Inspect(R__cl, R__parent, "m_docaErr", &m_docaErr);
      R__insp.Inspect(R__cl, R__parent, "m_docaRegion", &m_docaRegion);
      R__insp.Inspect(R__cl, R__parent, "m_poca", &m_poca);
      m_poca.ShowMembers(R__insp, strcat(R__parent,"m_poca.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_paramsAtPoca", &m_paramsAtPoca);
      m_paramsAtPoca.ShowMembers(R__insp, strcat(R__parent,"m_paramsAtPoca.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrPoca(void *p) {
      return  p ? new(p) ::AcdTkrPoca : new ::AcdTkrPoca;
   }
   static void *newArray_AcdTkrPoca(Long_t nElements, void *p) {
      return p ? new(p) ::AcdTkrPoca[nElements] : new ::AcdTkrPoca[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrPoca(void *p) {
      delete ((::AcdTkrPoca*)p);
   }
   static void deleteArray_AcdTkrPoca(void *p) {
      delete [] ((::AcdTkrPoca*)p);
   }
   static void destruct_AcdTkrPoca(void *p) {
      typedef ::AcdTkrPoca current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrPoca

//______________________________________________________________________________
void AcdHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdHit.

   if (R__b.IsReading()) {
      AcdHit::Class()->ReadBuffer(R__b, this);
   } else {
      AcdHit::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdHit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdHit.
      TClass *R__cl = ::AcdHit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_acdId", &m_acdId);
      m_acdId.ShowMembers(R__insp, strcat(R__parent,"m_acdId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_flags[2]", m_flags);
      R__insp.Inspect(R__cl, R__parent, "m_pha[2]", m_pha);
      R__insp.Inspect(R__cl, R__parent, "m_mipsPmt[2]", m_mipsPmt);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdHit(void *p) {
      return  p ? new(p) ::AcdHit : new ::AcdHit;
   }
   static void *newArray_AcdHit(Long_t nElements, void *p) {
      return p ? new(p) ::AcdHit[nElements] : new ::AcdHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdHit(void *p) {
      delete ((::AcdHit*)p);
   }
   static void deleteArray_AcdHit(void *p) {
      delete [] ((::AcdHit*)p);
   }
   static void destruct_AcdHit(void *p) {
      typedef ::AcdHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdHit

//______________________________________________________________________________
void AcdPocaData::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdPocaData.

   if (R__b.IsReading()) {
      AcdPocaData::Class()->ReadBuffer(R__b, this);
   } else {
      AcdPocaData::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdPocaData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdPocaData.
      TClass *R__cl = ::AcdPocaData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_arcLength", &m_arcLength);
      R__insp.Inspect(R__cl, R__parent, "m_doca", &m_doca);
      R__insp.Inspect(R__cl, R__parent, "m_docaErr", &m_docaErr);
      R__insp.Inspect(R__cl, R__parent, "m_poca", &m_poca);
      m_poca.ShowMembers(R__insp, strcat(R__parent,"m_poca.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_pocaVector", &m_pocaVector);
      m_pocaVector.ShowMembers(R__insp, strcat(R__parent,"m_pocaVector.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdPocaData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AcdPocaData : new ::AcdPocaData;
   }
   static void *newArray_AcdPocaData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AcdPocaData[nElements] : new ::AcdPocaData[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdPocaData(void *p) {
      delete ((::AcdPocaData*)p);
   }
   static void deleteArray_AcdPocaData(void *p) {
      delete [] ((::AcdPocaData*)p);
   }
   static void destruct_AcdPocaData(void *p) {
      typedef ::AcdPocaData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdPocaData

//______________________________________________________________________________
void AcdTkrPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrPoint.

   if (R__b.IsReading()) {
      AcdTkrPoint::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrPoint::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrPoint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrPoint.
      TClass *R__cl = ::AcdTkrPoint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_arcLength", &m_arcLength);
      R__insp.Inspect(R__cl, R__parent, "m_face", &m_face);
      R__insp.Inspect(R__cl, R__parent, "m_point", &m_point);
      m_point.ShowMembers(R__insp, strcat(R__parent,"m_point.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_paramsAtPoint", &m_paramsAtPoint);
      m_paramsAtPoint.ShowMembers(R__insp, strcat(R__parent,"m_paramsAtPoint.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrPoint(void *p) {
      return  p ? new(p) ::AcdTkrPoint : new ::AcdTkrPoint;
   }
   static void *newArray_AcdTkrPoint(Long_t nElements, void *p) {
      return p ? new(p) ::AcdTkrPoint[nElements] : new ::AcdTkrPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrPoint(void *p) {
      delete ((::AcdTkrPoint*)p);
   }
   static void deleteArray_AcdTkrPoint(void *p) {
      delete [] ((::AcdTkrPoint*)p);
   }
   static void destruct_AcdTkrPoint(void *p) {
      typedef ::AcdTkrPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrPoint

//______________________________________________________________________________
void AcdTkrLocalCoords::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrLocalCoords.

   if (R__b.IsReading()) {
      AcdTkrLocalCoords::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrLocalCoords::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrLocalCoords::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrLocalCoords.
      TClass *R__cl = ::AcdTkrLocalCoords::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_activeX", &m_activeX);
      R__insp.Inspect(R__cl, R__parent, "m_activeY", &m_activeY);
      R__insp.Inspect(R__cl, R__parent, "m_pathLength", &m_pathLength);
      R__insp.Inspect(R__cl, R__parent, "m_cosTheta", &m_cosTheta);
      R__insp.Inspect(R__cl, R__parent, "m_XXCov", &m_XXCov);
      R__insp.Inspect(R__cl, R__parent, "m_YYCov", &m_YYCov);
      R__insp.Inspect(R__cl, R__parent, "m_XYCov", &m_XYCov);
      R__insp.Inspect(R__cl, R__parent, "m_region", &m_region);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrLocalCoords(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AcdTkrLocalCoords : new ::AcdTkrLocalCoords;
   }
   static void *newArray_AcdTkrLocalCoords(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AcdTkrLocalCoords[nElements] : new ::AcdTkrLocalCoords[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrLocalCoords(void *p) {
      delete ((::AcdTkrLocalCoords*)p);
   }
   static void deleteArray_AcdTkrLocalCoords(void *p) {
      delete [] ((::AcdTkrLocalCoords*)p);
   }
   static void destruct_AcdTkrLocalCoords(void *p) {
      typedef ::AcdTkrLocalCoords current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrLocalCoords

//______________________________________________________________________________
void AcdTkrHitPoca::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrHitPoca.

   if (R__b.IsReading()) {
      AcdTkrHitPoca::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrHitPoca::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrHitPoca::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrHitPoca.
      TClass *R__cl = ::AcdTkrHitPoca::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_id", &m_id);
      m_id.ShowMembers(R__insp, strcat(R__parent,"m_id.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_trackIndex", &m_trackIndex);
      TObject::ShowMembers(R__insp, R__parent);
      AcdTkrLocalCoords::ShowMembers(R__insp, R__parent);
      AcdPocaData::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrHitPoca(void *p) {
      return  p ? new(p) ::AcdTkrHitPoca : new ::AcdTkrHitPoca;
   }
   static void *newArray_AcdTkrHitPoca(Long_t nElements, void *p) {
      return p ? new(p) ::AcdTkrHitPoca[nElements] : new ::AcdTkrHitPoca[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrHitPoca(void *p) {
      delete ((::AcdTkrHitPoca*)p);
   }
   static void deleteArray_AcdTkrHitPoca(void *p) {
      delete [] ((::AcdTkrHitPoca*)p);
   }
   static void destruct_AcdTkrHitPoca(void *p) {
      typedef ::AcdTkrHitPoca current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrHitPoca

//______________________________________________________________________________
void AcdTkrGapPoca::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTkrGapPoca.

   if (R__b.IsReading()) {
      AcdTkrGapPoca::Class()->ReadBuffer(R__b, this);
   } else {
      AcdTkrGapPoca::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdTkrGapPoca::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdTkrGapPoca.
      TClass *R__cl = ::AcdTkrGapPoca::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_id", &m_id);
      m_id.ShowMembers(R__insp, strcat(R__parent,"m_id.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_trackIndex", &m_trackIndex);
      TObject::ShowMembers(R__insp, R__parent);
      AcdTkrLocalCoords::ShowMembers(R__insp, R__parent);
      AcdPocaData::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdTkrGapPoca(void *p) {
      return  p ? new(p) ::AcdTkrGapPoca : new ::AcdTkrGapPoca;
   }
   static void *newArray_AcdTkrGapPoca(Long_t nElements, void *p) {
      return p ? new(p) ::AcdTkrGapPoca[nElements] : new ::AcdTkrGapPoca[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdTkrGapPoca(void *p) {
      delete ((::AcdTkrGapPoca*)p);
   }
   static void deleteArray_AcdTkrGapPoca(void *p) {
      delete [] ((::AcdTkrGapPoca*)p);
   }
   static void destruct_AcdTkrGapPoca(void *p) {
      typedef ::AcdTkrGapPoca current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdTkrGapPoca

//______________________________________________________________________________
void AcdSplashVars::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdSplashVars.

   if (R__b.IsReading()) {
      AcdSplashVars::Class()->ReadBuffer(R__b, this);
   } else {
      AcdSplashVars::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdSplashVars::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdSplashVars.
      TClass *R__cl = ::AcdSplashVars::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_id", &m_id);
      m_id.ShowMembers(R__insp, strcat(R__parent,"m_id.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_trackIndex", &m_trackIndex);
      R__insp.Inspect(R__cl, R__parent, "m_calEntryPoint", &m_calEntryPoint);
      m_calEntryPoint.ShowMembers(R__insp, strcat(R__parent,"m_calEntryPoint.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_calEntryVector", &m_calEntryVector);
      m_calEntryVector.ShowMembers(R__insp, strcat(R__parent,"m_calEntryVector.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_tileSolidAngle", &m_tileSolidAngle);
      R__insp.Inspect(R__cl, R__parent, "m_weightedTrackAngle", &m_weightedTrackAngle);
      R__insp.Inspect(R__cl, R__parent, "m_weightedPathlength", &m_weightedPathlength);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdSplashVars(void *p) {
      return  p ? new(p) ::AcdSplashVars : new ::AcdSplashVars;
   }
   static void *newArray_AcdSplashVars(Long_t nElements, void *p) {
      return p ? new(p) ::AcdSplashVars[nElements] : new ::AcdSplashVars[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdSplashVars(void *p) {
      delete ((::AcdSplashVars*)p);
   }
   static void deleteArray_AcdSplashVars(void *p) {
      delete [] ((::AcdSplashVars*)p);
   }
   static void destruct_AcdSplashVars(void *p) {
      typedef ::AcdSplashVars current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdSplashVars

//______________________________________________________________________________
void AcdRecon::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdRecon.

   if (R__b.IsReading()) {
      AcdRecon::Class()->ReadBuffer(R__b, this);
   } else {
      AcdRecon::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void AcdRecon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class AcdRecon.
      TClass *R__cl = ::AcdRecon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_totEnergy", &m_totEnergy);
      R__insp.Inspect(R__cl, R__parent, "m_gammaDoca", &m_gammaDoca);
      R__insp.Inspect(R__cl, R__parent, "m_doca", &m_doca);
      R__insp.Inspect(R__cl, R__parent, "m_actDist", &m_actDist);
      R__insp.Inspect(R__cl, R__parent, "m_tileCount", &m_tileCount);
      R__insp.Inspect(R__cl, R__parent, "m_rowDocaCol", (void*)&m_rowDocaCol);
      ::ROOT::GenericShowMembers("vector<Double32_t>", (void*)&m_rowDocaCol, R__insp, strcat(R__parent,"m_rowDocaCol."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_rowActDistCol", (void*)&m_rowActDistCol);
      ::ROOT::GenericShowMembers("vector<Double32_t>", (void*)&m_rowActDistCol, R__insp, strcat(R__parent,"m_rowActDistCol."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_minDocaId", &m_minDocaId);
      m_minDocaId.ShowMembers(R__insp, strcat(R__parent,"m_minDocaId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_idCol", (void*)&m_idCol);
      ::ROOT::GenericShowMembers("vector<AcdId>", (void*)&m_idCol, R__insp, strcat(R__parent,"m_idCol."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_energyCol", (void*)&m_energyCol);
      ::ROOT::GenericShowMembers("vector<Double32_t>", (void*)&m_energyCol, R__insp, strcat(R__parent,"m_energyCol."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_maxActDistId", &m_maxActDistId);
      m_maxActDistId.ShowMembers(R__insp, strcat(R__parent,"m_maxActDistId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_totRibbonEnergy", &m_totRibbonEnergy);
      R__insp.Inspect(R__cl, R__parent, "m_ribbonCount", &m_ribbonCount);
      R__insp.Inspect(R__cl, R__parent, "m_ribbonActDist", &m_ribbonActDist);
      R__insp.Inspect(R__cl, R__parent, "m_ribbonActDistId", &m_ribbonActDistId);
      m_ribbonActDistId.ShowMembers(R__insp, strcat(R__parent,"m_ribbonActDistId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*m_acdTkrIntersectionCol", &m_acdTkrIntersectionCol);
      R__insp.Inspect(R__cl, R__parent, "m_cornerDoca", &m_cornerDoca);
      R__insp.Inspect(R__cl, R__parent, "*m_acdTkrPocaCol", &m_acdTkrPocaCol);
      R__insp.Inspect(R__cl, R__parent, "*m_acdHitCol", &m_acdHitCol);
      R__insp.Inspect(R__cl, R__parent, "*m_acdTkrHitPocaCol", &m_acdTkrHitPocaCol);
      R__insp.Inspect(R__cl, R__parent, "*m_acdTkrGapPocaCol", &m_acdTkrGapPocaCol);
      R__insp.Inspect(R__cl, R__parent, "*m_acdTkrPointCol", &m_acdTkrPointCol);
      R__insp.Inspect(R__cl, R__parent, "*m_acdSplashVarCol", &m_acdSplashVarCol);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AcdRecon(void *p) {
      return  p ? new(p) ::AcdRecon : new ::AcdRecon;
   }
   static void *newArray_AcdRecon(Long_t nElements, void *p) {
      return p ? new(p) ::AcdRecon[nElements] : new ::AcdRecon[nElements];
   }
   // Wrapper around operator delete
   static void delete_AcdRecon(void *p) {
      delete ((::AcdRecon*)p);
   }
   static void deleteArray_AcdRecon(void *p) {
      delete [] ((::AcdRecon*)p);
   }
   static void destruct_AcdRecon(void *p) {
      typedef ::AcdRecon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AcdRecon

//______________________________________________________________________________
void CalRecon::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalRecon.

   if (R__b.IsReading()) {
      CalRecon::Class()->ReadBuffer(R__b, this);
   } else {
      CalRecon::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalRecon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalRecon.
      TClass *R__cl = ::CalRecon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_xtalRecCol", &m_xtalRecCol);
      R__insp.Inspect(R__cl, R__parent, "*m_clusterCol", &m_clusterCol);
      R__insp.Inspect(R__cl, R__parent, "*m_mipTrackCol", &m_mipTrackCol);
      R__insp.Inspect(R__cl, R__parent, "*m_eventEnergyCol", &m_eventEnergyCol);
      R__insp.Inspect(R__cl, R__parent, "*m_gcrXtalCol", &m_gcrXtalCol);
      R__insp.Inspect(R__cl, R__parent, "*m_gcrTrack", &m_gcrTrack);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalRecon(void *p) {
      return  p ? new(p) ::CalRecon : new ::CalRecon;
   }
   static void *newArray_CalRecon(Long_t nElements, void *p) {
      return p ? new(p) ::CalRecon[nElements] : new ::CalRecon[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalRecon(void *p) {
      delete ((::CalRecon*)p);
   }
   static void deleteArray_CalRecon(void *p) {
      delete [] ((::CalRecon*)p);
   }
   static void destruct_CalRecon(void *p) {
      typedef ::CalRecon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalRecon

//______________________________________________________________________________
void CalParams::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalParams.

   if (R__b.IsReading()) {
      CalParams::Class()->ReadBuffer(R__b, this);
   } else {
      CalParams::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalParams::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalParams.
      TClass *R__cl = ::CalParams::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_energy", &m_energy);
      R__insp.Inspect(R__cl, R__parent, "m_eneError", &m_eneError);
      R__insp.Inspect(R__cl, R__parent, "m_clusterCentroid", &m_clusterCentroid);
      m_clusterCentroid.ShowMembers(R__insp, strcat(R__parent,"m_clusterCentroid.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_cenxx", &m_cenxx);
      R__insp.Inspect(R__cl, R__parent, "m_cenxy", &m_cenxy);
      R__insp.Inspect(R__cl, R__parent, "m_cenxz", &m_cenxz);
      R__insp.Inspect(R__cl, R__parent, "m_cenyy", &m_cenyy);
      R__insp.Inspect(R__cl, R__parent, "m_cenyz", &m_cenyz);
      R__insp.Inspect(R__cl, R__parent, "m_cenzz", &m_cenzz);
      R__insp.Inspect(R__cl, R__parent, "m_clusterAxis", &m_clusterAxis);
      m_clusterAxis.ShowMembers(R__insp, strcat(R__parent,"m_clusterAxis.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_axisxx", &m_axisxx);
      R__insp.Inspect(R__cl, R__parent, "m_axisxy", &m_axisxy);
      R__insp.Inspect(R__cl, R__parent, "m_axisxz", &m_axisxz);
      R__insp.Inspect(R__cl, R__parent, "m_axisyy", &m_axisyy);
      R__insp.Inspect(R__cl, R__parent, "m_axisyz", &m_axisyz);
      R__insp.Inspect(R__cl, R__parent, "m_axiszz", &m_axiszz);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalParams(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalParams : new ::CalParams;
   }
   static void *newArray_CalParams(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalParams[nElements] : new ::CalParams[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalParams(void *p) {
      delete ((::CalParams*)p);
   }
   static void deleteArray_CalParams(void *p) {
      delete [] ((::CalParams*)p);
   }
   static void destruct_CalParams(void *p) {
      typedef ::CalParams current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalParams

//______________________________________________________________________________
void CalClusterLayerData::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalClusterLayerData.

   if (R__b.IsReading()) {
      CalClusterLayerData::Class()->ReadBuffer(R__b, this);
   } else {
      CalClusterLayerData::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalClusterLayerData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalClusterLayerData.
      TClass *R__cl = ::CalClusterLayerData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_energy", &m_energy);
      R__insp.Inspect(R__cl, R__parent, "m_position", &m_position);
      m_position.ShowMembers(R__insp, strcat(R__parent,"m_position.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_rmsSpread", &m_rmsSpread);
      m_rmsSpread.ShowMembers(R__insp, strcat(R__parent,"m_rmsSpread.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalClusterLayerData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalClusterLayerData : new ::CalClusterLayerData;
   }
   static void *newArray_CalClusterLayerData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalClusterLayerData[nElements] : new ::CalClusterLayerData[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalClusterLayerData(void *p) {
      delete ((::CalClusterLayerData*)p);
   }
   static void deleteArray_CalClusterLayerData(void *p) {
      delete [] ((::CalClusterLayerData*)p);
   }
   static void destruct_CalClusterLayerData(void *p) {
      typedef ::CalClusterLayerData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalClusterLayerData

//______________________________________________________________________________
void CalCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalCluster.

   if (R__b.IsReading()) {
      CalCluster::Class()->ReadBuffer(R__b, this);
   } else {
      CalCluster::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalCluster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalCluster.
      TClass *R__cl = ::CalCluster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_layers[8]", m_layers);
      R__insp.Inspect(R__cl, R__parent, "m_params", &m_params);
      m_params.ShowMembers(R__insp, strcat(R__parent,"m_params.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_rmsLong", &m_rmsLong);
      R__insp.Inspect(R__cl, R__parent, "m_rmsLongAsym", &m_rmsLongAsym);
      R__insp.Inspect(R__cl, R__parent, "m_rmsTrans", &m_rmsTrans);
      R__insp.Inspect(R__cl, R__parent, "m_numTruncXtals", &m_numTruncXtals);
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalCluster(void *p) {
      return  p ? new(p) ::CalCluster : new ::CalCluster;
   }
   static void *newArray_CalCluster(Long_t nElements, void *p) {
      return p ? new(p) ::CalCluster[nElements] : new ::CalCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalCluster(void *p) {
      delete ((::CalCluster*)p);
   }
   static void deleteArray_CalCluster(void *p) {
      delete [] ((::CalCluster*)p);
   }
   static void destruct_CalCluster(void *p) {
      typedef ::CalCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalCluster

//______________________________________________________________________________
void CalCorToolResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalCorToolResult.

   if (R__b.IsReading()) {
      CalCorToolResult::Class()->ReadBuffer(R__b, this);
   } else {
      CalCorToolResult::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalCorToolResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalCorToolResult.
      TClass *R__cl = ::CalCorToolResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_correctionName", &m_correctionName);
      m_correctionName.ShowMembers(R__insp, strcat(R__parent,"m_correctionName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      R__insp.Inspect(R__cl, R__parent, "m_chiSquare", &m_chiSquare);
      R__insp.Inspect(R__cl, R__parent, "m_params", &m_params);
      m_params.ShowMembers(R__insp, strcat(R__parent,"m_params.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_freeAttributes", &m_freeAttributes);
      m_freeAttributes.ShowMembers(R__insp, strcat(R__parent,"m_freeAttributes.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalCorToolResult(void *p) {
      return  p ? new(p) ::CalCorToolResult : new ::CalCorToolResult;
   }
   static void *newArray_CalCorToolResult(Long_t nElements, void *p) {
      return p ? new(p) ::CalCorToolResult[nElements] : new ::CalCorToolResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalCorToolResult(void *p) {
      delete ((::CalCorToolResult*)p);
   }
   static void deleteArray_CalCorToolResult(void *p) {
      delete [] ((::CalCorToolResult*)p);
   }
   static void destruct_CalCorToolResult(void *p) {
      typedef ::CalCorToolResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalCorToolResult

//______________________________________________________________________________
void CalEventEnergy::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalEventEnergy.

   if (R__b.IsReading()) {
      CalEventEnergy::Class()->ReadBuffer(R__b, this);
   } else {
      CalEventEnergy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalEventEnergy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalEventEnergy.
      TClass *R__cl = ::CalEventEnergy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_params", &m_params);
      m_params.ShowMembers(R__insp, strcat(R__parent,"m_params.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      R__insp.Inspect(R__cl, R__parent, "m_toolsResults", &m_toolsResults);
      m_toolsResults.ShowMembers(R__insp, strcat(R__parent,"m_toolsResults.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalEventEnergy(void *p) {
      return  p ? new(p) ::CalEventEnergy : new ::CalEventEnergy;
   }
   static void *newArray_CalEventEnergy(Long_t nElements, void *p) {
      return p ? new(p) ::CalEventEnergy[nElements] : new ::CalEventEnergy[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalEventEnergy(void *p) {
      delete ((::CalEventEnergy*)p);
   }
   static void deleteArray_CalEventEnergy(void *p) {
      delete [] ((::CalEventEnergy*)p);
   }
   static void destruct_CalEventEnergy(void *p) {
      typedef ::CalEventEnergy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalEventEnergy

//______________________________________________________________________________
void CalRangeRecData::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalRangeRecData.

   if (R__b.IsReading()) {
      CalRangeRecData::Class()->ReadBuffer(R__b, this);
   } else {
      CalRangeRecData::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalRangeRecData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalRangeRecData.
      TClass *R__cl = ::CalRangeRecData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_eneP", &m_eneP);
      R__insp.Inspect(R__cl, R__parent, "m_eneM", &m_eneM);
      R__insp.Inspect(R__cl, R__parent, "m_pos", &m_pos);
      m_pos.ShowMembers(R__insp, strcat(R__parent,"m_pos.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_rangeP", &m_rangeP);
      R__insp.Inspect(R__cl, R__parent, "m_rangeM", &m_rangeM);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalRangeRecData(void *p) {
      return  p ? new(p) ::CalRangeRecData : new ::CalRangeRecData;
   }
   static void *newArray_CalRangeRecData(Long_t nElements, void *p) {
      return p ? new(p) ::CalRangeRecData[nElements] : new ::CalRangeRecData[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalRangeRecData(void *p) {
      delete ((::CalRangeRecData*)p);
   }
   static void deleteArray_CalRangeRecData(void *p) {
      delete [] ((::CalRangeRecData*)p);
   }
   static void destruct_CalRangeRecData(void *p) {
      typedef ::CalRangeRecData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalRangeRecData

//______________________________________________________________________________
void CalXtalRecData::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalXtalRecData.

   if (R__b.IsReading()) {
      CalXtalRecData::Class()->ReadBuffer(R__b, this);
   } else {
      CalXtalRecData::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalXtalRecData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalXtalRecData.
      TClass *R__cl = ::CalXtalRecData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_mode", &m_mode);
      R__insp.Inspect(R__cl, R__parent, "m_xtalId", &m_xtalId);
      m_xtalId.ShowMembers(R__insp, strcat(R__parent,"m_xtalId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_recData", (void*)&m_recData);
      ::ROOT::GenericShowMembers("vector<CalRangeRecData>", (void*)&m_recData, R__insp, strcat(R__parent,"m_recData."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalXtalRecData(void *p) {
      return  p ? new(p) ::CalXtalRecData : new ::CalXtalRecData;
   }
   static void *newArray_CalXtalRecData(Long_t nElements, void *p) {
      return p ? new(p) ::CalXtalRecData[nElements] : new ::CalXtalRecData[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalXtalRecData(void *p) {
      delete ((::CalXtalRecData*)p);
   }
   static void deleteArray_CalXtalRecData(void *p) {
      delete [] ((::CalXtalRecData*)p);
   }
   static void destruct_CalXtalRecData(void *p) {
      typedef ::CalXtalRecData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalXtalRecData

//______________________________________________________________________________
void CalMipTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalMipTrack.

   if (R__b.IsReading()) {
      CalMipTrack::Class()->ReadBuffer(R__b, this);
   } else {
      CalMipTrack::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void CalMipTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CalMipTrack.
      TClass *R__cl = ::CalMipTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_point", &m_point);
      m_point.ShowMembers(R__insp, strcat(R__parent,"m_point.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_dir", &m_dir);
      m_dir.ShowMembers(R__insp, strcat(R__parent,"m_dir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_d2C", &m_d2C);
      R__insp.Inspect(R__cl, R__parent, "m_d2Edge", &m_d2Edge);
      R__insp.Inspect(R__cl, R__parent, "m_calEdge", &m_calEdge);
      R__insp.Inspect(R__cl, R__parent, "m_arcLen", &m_arcLen);
      R__insp.Inspect(R__cl, R__parent, "m_ecor", &m_ecor);
      R__insp.Inspect(R__cl, R__parent, "m_ecorRms", &m_ecorRms);
      R__insp.Inspect(R__cl, R__parent, "m_chi2", &m_chi2);
      R__insp.Inspect(R__cl, R__parent, "m_erm", &m_erm);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalMipTrack(void *p) {
      return  p ? new(p) ::CalMipTrack : new ::CalMipTrack;
   }
   static void *newArray_CalMipTrack(Long_t nElements, void *p) {
      return p ? new(p) ::CalMipTrack[nElements] : new ::CalMipTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalMipTrack(void *p) {
      delete ((::CalMipTrack*)p);
   }
   static void deleteArray_CalMipTrack(void *p) {
      delete [] ((::CalMipTrack*)p);
   }
   static void destruct_CalMipTrack(void *p) {
      typedef ::CalMipTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalMipTrack

//______________________________________________________________________________
void GcrXtal::Streamer(TBuffer &R__b)
{
   // Stream an object of class GcrXtal.

   if (R__b.IsReading()) {
      GcrXtal::Class()->ReadBuffer(R__b, this);
   } else {
      GcrXtal::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void GcrXtal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GcrXtal.
      TClass *R__cl = ::GcrXtal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_xtalId", &m_xtalId);
      m_xtalId.ShowMembers(R__insp, strcat(R__parent,"m_xtalId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_pathLength", &m_pathLength);
      R__insp.Inspect(R__cl, R__parent, "m_closestFaceDist", &m_closestFaceDist);
      R__insp.Inspect(R__cl, R__parent, "m_crossedFaces", &m_crossedFaces);
      R__insp.Inspect(R__cl, R__parent, "m_entryPoint", &m_entryPoint);
      m_entryPoint.ShowMembers(R__insp, strcat(R__parent,"m_entryPoint.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_exitPoint", &m_exitPoint);
      m_exitPoint.ShowMembers(R__insp, strcat(R__parent,"m_exitPoint.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GcrXtal(void *p) {
      return  p ? new(p) ::GcrXtal : new ::GcrXtal;
   }
   static void *newArray_GcrXtal(Long_t nElements, void *p) {
      return p ? new(p) ::GcrXtal[nElements] : new ::GcrXtal[nElements];
   }
   // Wrapper around operator delete
   static void delete_GcrXtal(void *p) {
      delete ((::GcrXtal*)p);
   }
   static void deleteArray_GcrXtal(void *p) {
      delete [] ((::GcrXtal*)p);
   }
   static void destruct_GcrXtal(void *p) {
      typedef ::GcrXtal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GcrXtal

//______________________________________________________________________________
void GcrTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class GcrTrack.

   if (R__b.IsReading()) {
      GcrTrack::Class()->ReadBuffer(R__b, this);
   } else {
      GcrTrack::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void GcrTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class GcrTrack.
      TClass *R__cl = ::GcrTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_direction", &m_direction);
      m_direction.ShowMembers(R__insp, strcat(R__parent,"m_direction.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_dirError", &m_dirError);
      m_dirError.ShowMembers(R__insp, strcat(R__parent,"m_dirError.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_calEntryPoint", &m_calEntryPoint);
      m_calEntryPoint.ShowMembers(R__insp, strcat(R__parent,"m_calEntryPoint.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_calExitPoint", &m_calExitPoint);
      m_calExitPoint.ShowMembers(R__insp, strcat(R__parent,"m_calExitPoint.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GcrTrack(void *p) {
      return  p ? new(p) ::GcrTrack : new ::GcrTrack;
   }
   static void *newArray_GcrTrack(Long_t nElements, void *p) {
      return p ? new(p) ::GcrTrack[nElements] : new ::GcrTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_GcrTrack(void *p) {
      delete ((::GcrTrack*)p);
   }
   static void deleteArray_GcrTrack(void *p) {
      delete [] ((::GcrTrack*)p);
   }
   static void destruct_GcrTrack(void *p) {
      typedef ::GcrTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GcrTrack

//______________________________________________________________________________
void TkrRecon::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrRecon.

   if (R__b.IsReading()) {
      TkrRecon::Class()->ReadBuffer(R__b, this);
   } else {
      TkrRecon::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrRecon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrRecon.
      TClass *R__cl = ::TkrRecon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_clusterCol", &m_clusterCol);
      R__insp.Inspect(R__cl, R__parent, "*m_trackCol", &m_trackCol);
      R__insp.Inspect(R__cl, R__parent, "*m_vertexCol", &m_vertexCol);
      R__insp.Inspect(R__cl, R__parent, "*m_diagnostics", &m_diagnostics);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrRecon(void *p) {
      return  p ? new(p) ::TkrRecon : new ::TkrRecon;
   }
   static void *newArray_TkrRecon(Long_t nElements, void *p) {
      return p ? new(p) ::TkrRecon[nElements] : new ::TkrRecon[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrRecon(void *p) {
      delete ((::TkrRecon*)p);
   }
   static void deleteArray_TkrRecon(void *p) {
      delete [] ((::TkrRecon*)p);
   }
   static void destruct_TkrRecon(void *p) {
      typedef ::TkrRecon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrRecon

//______________________________________________________________________________
void TkrCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrCluster.

   if (R__b.IsReading()) {
      TkrCluster::Class()->ReadBuffer(R__b, this);
   } else {
      TkrCluster::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrCluster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrCluster.
      TClass *R__cl = ::TkrCluster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_tkrId", &m_tkrId);
      m_tkrId.ShowMembers(R__insp, strcat(R__parent,"m_tkrId.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_strip0", &m_strip0);
      R__insp.Inspect(R__cl, R__parent, "m_stripf", &m_stripf);
      R__insp.Inspect(R__cl, R__parent, "m_nBad", &m_nBad);
      R__insp.Inspect(R__cl, R__parent, "m_position", &m_position);
      m_position.ShowMembers(R__insp, strcat(R__parent,"m_position.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_rawToT", &m_rawToT);
      R__insp.Inspect(R__cl, R__parent, "m_ToT", &m_ToT);
      R__insp.Inspect(R__cl, R__parent, "m_status", &m_status);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrCluster(void *p) {
      return  p ? new(p) ::TkrCluster : new ::TkrCluster;
   }
   static void *newArray_TkrCluster(Long_t nElements, void *p) {
      return p ? new(p) ::TkrCluster[nElements] : new ::TkrCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrCluster(void *p) {
      delete ((::TkrCluster*)p);
   }
   static void deleteArray_TkrCluster(void *p) {
      delete [] ((::TkrCluster*)p);
   }
   static void destruct_TkrCluster(void *p) {
      typedef ::TkrCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrCluster

//______________________________________________________________________________
void TkrTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrTrack.

   if (R__b.IsReading()) {
      TkrTrack::Class()->ReadBuffer(R__b, this);
   } else {
      TkrTrack::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrTrack.
      TClass *R__cl = ::TkrTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      R__insp.Inspect(R__cl, R__parent, "m_initialEnergy", &m_initialEnergy);
      R__insp.Inspect(R__cl, R__parent, "m_initialPosition", &m_initialPosition);
      m_initialPosition.ShowMembers(R__insp, strcat(R__parent,"m_initialPosition.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_initialDirection", &m_initialDirection);
      m_initialDirection.ShowMembers(R__insp, strcat(R__parent,"m_initialDirection.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_chiSquareFilter", &m_chiSquareFilter);
      R__insp.Inspect(R__cl, R__parent, "m_chiSquareSmooth", &m_chiSquareSmooth);
      R__insp.Inspect(R__cl, R__parent, "m_nDegreesOfFreedom", &m_nDegreesOfFreedom);
      R__insp.Inspect(R__cl, R__parent, "m_rmsResid", &m_rmsResid);
      R__insp.Inspect(R__cl, R__parent, "m_Quality", &m_Quality);
      R__insp.Inspect(R__cl, R__parent, "m_KalmanEnergy", &m_KalmanEnergy);
      R__insp.Inspect(R__cl, R__parent, "m_KalmanThetaMS", &m_KalmanThetaMS);
      R__insp.Inspect(R__cl, R__parent, "m_Xgaps", &m_Xgaps);
      R__insp.Inspect(R__cl, R__parent, "m_Ygaps", &m_Ygaps);
      R__insp.Inspect(R__cl, R__parent, "m_XistGaps", &m_XistGaps);
      R__insp.Inspect(R__cl, R__parent, "m_YistGaps", &m_YistGaps);
      R__insp.Inspect(R__cl, R__parent, "m_numSegmentPoints", &m_numSegmentPoints);
      R__insp.Inspect(R__cl, R__parent, "m_chisqSegment", &m_chisqSegment);
      R__insp.Inspect(R__cl, R__parent, "m_nxHits", &m_nxHits);
      R__insp.Inspect(R__cl, R__parent, "m_nyHits", &m_nyHits);
      R__insp.Inspect(R__cl, R__parent, "m_KalmanEnergyErr", &m_KalmanEnergyErr);
      R__insp.Inspect(R__cl, R__parent, "m_TkrCal_radlen", &m_TkrCal_radlen);
      TObjArray::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrTrack(void *p) {
      return  p ? new(p) ::TkrTrack : new ::TkrTrack;
   }
   static void *newArray_TkrTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TkrTrack[nElements] : new ::TkrTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrTrack(void *p) {
      delete ((::TkrTrack*)p);
   }
   static void deleteArray_TkrTrack(void *p) {
      delete [] ((::TkrTrack*)p);
   }
   static void destruct_TkrTrack(void *p) {
      typedef ::TkrTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrTrack

//______________________________________________________________________________
void TkrTrackHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrTrackHit.

   if (R__b.IsReading()) {
      TkrTrackHit::Class()->ReadBuffer(R__b, this);
   } else {
      TkrTrackHit::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrTrackHit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrTrackHit.
      TClass *R__cl = ::TkrTrackHit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      R__insp.Inspect(R__cl, R__parent, "*m_cluster", &m_cluster);
      R__insp.Inspect(R__cl, R__parent, "m_hitID", &m_hitID);
      m_hitID.ShowMembers(R__insp, strcat(R__parent,"m_hitID.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_zPlane", &m_zPlane);
      R__insp.Inspect(R__cl, R__parent, "m_energy", &m_energy);
      R__insp.Inspect(R__cl, R__parent, "m_radLen", &m_radLen);
      R__insp.Inspect(R__cl, R__parent, "m_activeDist", &m_activeDist);
      R__insp.Inspect(R__cl, R__parent, "m_chiSquareFilter", &m_chiSquareFilter);
      R__insp.Inspect(R__cl, R__parent, "m_chiSquareRevFit", &m_chiSquareRevFit);
      R__insp.Inspect(R__cl, R__parent, "m_chiSquareSmooth", &m_chiSquareSmooth);
      R__insp.Inspect(R__cl, R__parent, "m_hitMeas", &m_hitMeas);
      m_hitMeas.ShowMembers(R__insp, strcat(R__parent,"m_hitMeas.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_hitPred", &m_hitPred);
      m_hitPred.ShowMembers(R__insp, strcat(R__parent,"m_hitPred.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_hitFit", &m_hitFit);
      m_hitFit.ShowMembers(R__insp, strcat(R__parent,"m_hitFit.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_hitRevFit", &m_hitRevFit);
      m_hitRevFit.ShowMembers(R__insp, strcat(R__parent,"m_hitRevFit.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_hitSmooth", &m_hitSmooth);
      m_hitSmooth.ShowMembers(R__insp, strcat(R__parent,"m_hitSmooth.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_Qmaterial", &m_Qmaterial);
      m_Qmaterial.ShowMembers(R__insp, strcat(R__parent,"m_Qmaterial.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrTrackHit(void *p) {
      return  p ? new(p) ::TkrTrackHit : new ::TkrTrackHit;
   }
   static void *newArray_TkrTrackHit(Long_t nElements, void *p) {
      return p ? new(p) ::TkrTrackHit[nElements] : new ::TkrTrackHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrTrackHit(void *p) {
      delete ((::TkrTrackHit*)p);
   }
   static void deleteArray_TkrTrackHit(void *p) {
      delete [] ((::TkrTrackHit*)p);
   }
   static void destruct_TkrTrackHit(void *p) {
      typedef ::TkrTrackHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrTrackHit

//______________________________________________________________________________
void TkrTrackParams::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrTrackParams.

   if (R__b.IsReading()) {
      TkrTrackParams::Class()->ReadBuffer(R__b, this);
   } else {
      TkrTrackParams::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrTrackParams::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrTrackParams.
      TClass *R__cl = ::TkrTrackParams::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_xPosition", &m_xPosition);
      R__insp.Inspect(R__cl, R__parent, "m_xSlope", &m_xSlope);
      R__insp.Inspect(R__cl, R__parent, "m_yPosition", &m_yPosition);
      R__insp.Inspect(R__cl, R__parent, "m_ySlope", &m_ySlope);
      R__insp.Inspect(R__cl, R__parent, "m_xPos_xPos", &m_xPos_xPos);
      R__insp.Inspect(R__cl, R__parent, "m_xPos_xSlp", &m_xPos_xSlp);
      R__insp.Inspect(R__cl, R__parent, "m_xPos_yPos", &m_xPos_yPos);
      R__insp.Inspect(R__cl, R__parent, "m_xPos_ySlp", &m_xPos_ySlp);
      R__insp.Inspect(R__cl, R__parent, "m_xSlp_xSlp", &m_xSlp_xSlp);
      R__insp.Inspect(R__cl, R__parent, "m_xSlp_yPos", &m_xSlp_yPos);
      R__insp.Inspect(R__cl, R__parent, "m_xSlp_ySlp", &m_xSlp_ySlp);
      R__insp.Inspect(R__cl, R__parent, "m_yPos_yPos", &m_yPos_yPos);
      R__insp.Inspect(R__cl, R__parent, "m_yPos_ySlp", &m_yPos_ySlp);
      R__insp.Inspect(R__cl, R__parent, "m_ySlp_ySlp", &m_ySlp_ySlp);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrTrackParams(void *p) {
      return  p ? new(p) ::TkrTrackParams : new ::TkrTrackParams;
   }
   static void *newArray_TkrTrackParams(Long_t nElements, void *p) {
      return p ? new(p) ::TkrTrackParams[nElements] : new ::TkrTrackParams[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrTrackParams(void *p) {
      delete ((::TkrTrackParams*)p);
   }
   static void deleteArray_TkrTrackParams(void *p) {
      delete [] ((::TkrTrackParams*)p);
   }
   static void destruct_TkrTrackParams(void *p) {
      typedef ::TkrTrackParams current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrTrackParams

//______________________________________________________________________________
void TkrVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrVertex.

   if (R__b.IsReading()) {
      TkrVertex::Class()->ReadBuffer(R__b, this);
   } else {
      TkrVertex::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrVertex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrVertex.
      TClass *R__cl = ::TkrVertex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_statusBits", &m_statusBits);
      R__insp.Inspect(R__cl, R__parent, "m_energy", &m_energy);
      R__insp.Inspect(R__cl, R__parent, "m_position", &m_position);
      m_position.ShowMembers(R__insp, strcat(R__parent,"m_position.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_direction", &m_direction);
      m_direction.ShowMembers(R__insp, strcat(R__parent,"m_direction.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_chiSquare", &m_chiSquare);
      R__insp.Inspect(R__cl, R__parent, "m_quality", &m_quality);
      R__insp.Inspect(R__cl, R__parent, "m_arcLen1", &m_arcLen1);
      R__insp.Inspect(R__cl, R__parent, "m_arcLen2", &m_arcLen2);
      R__insp.Inspect(R__cl, R__parent, "m_doca", &m_doca);
      R__insp.Inspect(R__cl, R__parent, "m_radlen", &m_radlen);
      R__insp.Inspect(R__cl, R__parent, "m_vtxID", &m_vtxID);
      m_vtxID.ShowMembers(R__insp, strcat(R__parent,"m_vtxID.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_params", &m_params);
      m_params.ShowMembers(R__insp, strcat(R__parent,"m_params.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_tracks", &m_tracks);
      m_tracks.ShowMembers(R__insp, strcat(R__parent,"m_tracks.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrVertex(void *p) {
      return  p ? new(p) ::TkrVertex : new ::TkrVertex;
   }
   static void *newArray_TkrVertex(Long_t nElements, void *p) {
      return p ? new(p) ::TkrVertex[nElements] : new ::TkrVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrVertex(void *p) {
      delete ((::TkrVertex*)p);
   }
   static void deleteArray_TkrVertex(void *p) {
      delete [] ((::TkrVertex*)p);
   }
   static void destruct_TkrVertex(void *p) {
      typedef ::TkrVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrVertex

//______________________________________________________________________________
void TkrDiagnostics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrDiagnostics.

   if (R__b.IsReading()) {
      TkrDiagnostics::Class()->ReadBuffer(R__b, this);
   } else {
      TkrDiagnostics::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TkrDiagnostics::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TkrDiagnostics.
      TClass *R__cl = ::TkrDiagnostics::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_numClusters", &m_numClusters);
      R__insp.Inspect(R__cl, R__parent, "m_numVecPoints", &m_numVecPoints);
      R__insp.Inspect(R__cl, R__parent, "m_numVecLinks", &m_numVecLinks);
      R__insp.Inspect(R__cl, R__parent, "m_nLinksNonZeroLayers", &m_nLinksNonZeroLayers);
      R__insp.Inspect(R__cl, R__parent, "m_aveNumLinksLayer", &m_aveNumLinksLayer);
      R__insp.Inspect(R__cl, R__parent, "m_numLinkCombinations", &m_numLinkCombinations);
      R__insp.Inspect(R__cl, R__parent, "m_numTrackElements", &m_numTrackElements);
      R__insp.Inspect(R__cl, R__parent, "m_numTkrTracks", &m_numTkrTracks);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TkrDiagnostics(void *p) {
      return  p ? new(p) ::TkrDiagnostics : new ::TkrDiagnostics;
   }
   static void *newArray_TkrDiagnostics(Long_t nElements, void *p) {
      return p ? new(p) ::TkrDiagnostics[nElements] : new ::TkrDiagnostics[nElements];
   }
   // Wrapper around operator delete
   static void delete_TkrDiagnostics(void *p) {
      delete ((::TkrDiagnostics*)p);
   }
   static void deleteArray_TkrDiagnostics(void *p) {
      delete [] ((::TkrDiagnostics*)p);
   }
   static void destruct_TkrDiagnostics(void *p) {
      typedef ::TkrDiagnostics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TkrDiagnostics

      namespace reconRootData {
//______________________________________________________________________________
void TaggerCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class reconRootData::TaggerCluster.

   if (R__b.IsReading()) {
      reconRootData::TaggerCluster::Class()->ReadBuffer(R__b, this);
   } else {
      reconRootData::TaggerCluster::Class()->WriteBuffer(R__b, this);
   }
}

} // namespace reconRootData
//______________________________________________________________________________
      namespace reconRootData {
void TaggerCluster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class reconRootData::TaggerCluster.
      TClass *R__cl = ::reconRootData::TaggerCluster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_baricenterPosition", &m_baricenterPosition);
      R__insp.Inspect(R__cl, R__parent, "m_totalPulseHeight", &m_totalPulseHeight);
      R__insp.Inspect(R__cl, R__parent, "m_eta", &m_eta);
      R__insp.Inspect(R__cl, R__parent, "m_x", &m_x);
      R__insp.Inspect(R__cl, R__parent, "m_y", &m_y);
      R__insp.Inspect(R__cl, R__parent, "m_z", &m_z);
      R__insp.Inspect(R__cl, R__parent, "m_numTaggerHit", &m_numTaggerHit);
      R__insp.Inspect(R__cl, R__parent, "m_highestHit", &m_highestHit);
      m_highestHit.ShowMembers(R__insp, strcat(R__parent,"m_highestHit.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*m_taggerHitCol", &m_taggerHitCol);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace reconRootData
namespace ROOT {
   // Wrappers around operator new
   static void *new_reconRootDatacLcLTaggerCluster(void *p) {
      return  p ? new(p) ::reconRootData::TaggerCluster : new ::reconRootData::TaggerCluster;
   }
   static void *newArray_reconRootDatacLcLTaggerCluster(Long_t nElements, void *p) {
      return p ? new(p) ::reconRootData::TaggerCluster[nElements] : new ::reconRootData::TaggerCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_reconRootDatacLcLTaggerCluster(void *p) {
      delete ((::reconRootData::TaggerCluster*)p);
   }
   static void deleteArray_reconRootDatacLcLTaggerCluster(void *p) {
      delete [] ((::reconRootData::TaggerCluster*)p);
   }
   static void destruct_reconRootDatacLcLTaggerCluster(void *p) {
      typedef ::reconRootData::TaggerCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::reconRootData::TaggerCluster

      namespace reconRootData {
//______________________________________________________________________________
void AdfRecon::Streamer(TBuffer &R__b)
{
   // Stream an object of class reconRootData::AdfRecon.

   if (R__b.IsReading()) {
      reconRootData::AdfRecon::Class()->ReadBuffer(R__b, this);
   } else {
      reconRootData::AdfRecon::Class()->WriteBuffer(R__b, this);
   }
}

} // namespace reconRootData
//______________________________________________________________________________
      namespace reconRootData {
void AdfRecon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class reconRootData::AdfRecon.
      TClass *R__cl = ::reconRootData::AdfRecon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_eventNumber", &m_eventNumber);
      R__insp.Inspect(R__cl, R__parent, "m_spillNumber", &m_spillNumber);
      R__insp.Inspect(R__cl, R__parent, "m_numHighestCluster", &m_numHighestCluster);
      R__insp.Inspect(R__cl, R__parent, "m_numCluster[2][4]", m_numCluster);
      R__insp.Inspect(R__cl, R__parent, "m_numQdcHit", &m_numQdcHit);
      R__insp.Inspect(R__cl, R__parent, "m_numScalerHit", &m_numScalerHit);
      R__insp.Inspect(R__cl, R__parent, "m_nModule", &m_nModule);
      R__insp.Inspect(R__cl, R__parent, "*m_x", &m_x);
      R__insp.Inspect(R__cl, R__parent, "*m_y", &m_y);
      R__insp.Inspect(R__cl, R__parent, "*m_z", &m_z);
      R__insp.Inspect(R__cl, R__parent, "m_px", &m_px);
      R__insp.Inspect(R__cl, R__parent, "m_py", &m_py);
      R__insp.Inspect(R__cl, R__parent, "m_pz", &m_pz);
      R__insp.Inspect(R__cl, R__parent, "m_eRec", &m_eRec);
      R__insp.Inspect(R__cl, R__parent, "m_eCorr", &m_eCorr);
      R__insp.Inspect(R__cl, R__parent, "m_phiIn", &m_phiIn);
      R__insp.Inspect(R__cl, R__parent, "m_phiOut", &m_phiOut);
      R__insp.Inspect(R__cl, R__parent, "m_theta", &m_theta);
      R__insp.Inspect(R__cl, R__parent, "m_dphi", &m_dphi);
      R__insp.Inspect(R__cl, R__parent, "m_errorErec", &m_errorErec);
      R__insp.Inspect(R__cl, R__parent, "m_errorEcorr", &m_errorEcorr);
      R__insp.Inspect(R__cl, R__parent, "*m_taggerClusterCol", &m_taggerClusterCol);
      R__insp.Inspect(R__cl, R__parent, "*m_qdcHitCol", &m_qdcHitCol);
      R__insp.Inspect(R__cl, R__parent, "*m_scalerHitCol", &m_scalerHitCol);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace reconRootData
namespace ROOT {
   // Wrappers around operator new
   static void *new_reconRootDatacLcLAdfRecon(void *p) {
      return  p ? new(p) ::reconRootData::AdfRecon : new ::reconRootData::AdfRecon;
   }
   static void *newArray_reconRootDatacLcLAdfRecon(Long_t nElements, void *p) {
      return p ? new(p) ::reconRootData::AdfRecon[nElements] : new ::reconRootData::AdfRecon[nElements];
   }
   // Wrapper around operator delete
   static void delete_reconRootDatacLcLAdfRecon(void *p) {
      delete ((::reconRootData::AdfRecon*)p);
   }
   static void deleteArray_reconRootDatacLcLAdfRecon(void *p) {
      delete [] ((::reconRootData::AdfRecon*)p);
   }
   static void destruct_reconRootDatacLcLAdfRecon(void *p) {
      typedef ::reconRootData::AdfRecon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::reconRootData::AdfRecon

namespace ROOT {
   void vectorlEAcdIdgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEAcdIdgR_Dictionary();
   static void *new_vectorlEAcdIdgR(void *p = 0);
   static void *newArray_vectorlEAcdIdgR(Long_t size, void *p);
   static void delete_vectorlEAcdIdgR(void *p);
   static void deleteArray_vectorlEAcdIdgR(void *p);
   static void destruct_vectorlEAcdIdgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<AcdId>*)
   {
      vector<AcdId> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AcdId>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AcdId>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<AcdId>), DefineBehavior(ptr, ptr),
                  0, &vectorlEAcdIdgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AcdId>) );
      instance.SetNew(&new_vectorlEAcdIdgR);
      instance.SetNewArray(&newArray_vectorlEAcdIdgR);
      instance.SetDelete(&delete_vectorlEAcdIdgR);
      instance.SetDeleteArray(&deleteArray_vectorlEAcdIdgR);
      instance.SetDestructor(&destruct_vectorlEAcdIdgR);
      instance.AdoptStreamer(TCollectionProxy::GenClassStreamer(TCollectionProxy::Pushback< vector<AcdId> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::GenProxy(TCollectionProxy::Pushback< vector<AcdId> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<AcdId>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAcdIdgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<AcdId>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEAcdIdgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AcdId> : new vector<AcdId>;
   }
   static void *newArray_vectorlEAcdIdgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AcdId>[nElements] : new vector<AcdId>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAcdIdgR(void *p) {
      delete ((vector<AcdId>*)p);
   }
   static void deleteArray_vectorlEAcdIdgR(void *p) {
      delete [] ((vector<AcdId>*)p);
   }
   static void destruct_vectorlEAcdIdgR(void *p) {
      typedef vector<AcdId> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<AcdId>

namespace ROOT {
   void vectorlECalRangeRecDatagR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlECalRangeRecDatagR_Dictionary();
   static void *new_vectorlECalRangeRecDatagR(void *p = 0);
   static void *newArray_vectorlECalRangeRecDatagR(Long_t size, void *p);
   static void delete_vectorlECalRangeRecDatagR(void *p);
   static void deleteArray_vectorlECalRangeRecDatagR(void *p);
   static void destruct_vectorlECalRangeRecDatagR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<CalRangeRecData>*)
   {
      vector<CalRangeRecData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CalRangeRecData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CalRangeRecData>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<CalRangeRecData>), DefineBehavior(ptr, ptr),
                  0, &vectorlECalRangeRecDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CalRangeRecData>) );
      instance.SetNew(&new_vectorlECalRangeRecDatagR);
      instance.SetNewArray(&newArray_vectorlECalRangeRecDatagR);
      instance.SetDelete(&delete_vectorlECalRangeRecDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlECalRangeRecDatagR);
      instance.SetDestructor(&destruct_vectorlECalRangeRecDatagR);
      instance.AdoptStreamer(TCollectionProxy::GenClassStreamer(TCollectionProxy::Pushback< vector<CalRangeRecData> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::GenProxy(TCollectionProxy::Pushback< vector<CalRangeRecData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<CalRangeRecData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECalRangeRecDatagR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<CalRangeRecData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECalRangeRecDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CalRangeRecData> : new vector<CalRangeRecData>;
   }
   static void *newArray_vectorlECalRangeRecDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CalRangeRecData>[nElements] : new vector<CalRangeRecData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECalRangeRecDatagR(void *p) {
      delete ((vector<CalRangeRecData>*)p);
   }
   static void deleteArray_vectorlECalRangeRecDatagR(void *p) {
      delete [] ((vector<CalRangeRecData>*)p);
   }
   static void destruct_vectorlECalRangeRecDatagR(void *p) {
      typedef vector<CalRangeRecData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CalRangeRecData>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", ::TStreamerInfo::Class_Version(), "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptStreamer(TCollectionProxy::GenClassStreamer(TCollectionProxy::Pushback< vector<double> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::GenProxy(TCollectionProxy::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* ../reconRootData/reconRootData_rootcint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablereconRootData_rootcint();

extern "C" void G__set_cpp_environmentreconRootData_rootcint() {
  G__add_macro("G__CINTVERSION=50160007");
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../reconRootData/AcdRecon.h");
  G__add_compiledheader("../reconRootData/CalParams.h");
  G__add_compiledheader("../reconRootData/CalClusterLayerData.h");
  G__add_compiledheader("../reconRootData/CalCluster.h");
  G__add_compiledheader("../reconRootData/CalCorToolResult.h");
  G__add_compiledheader("../reconRootData/CalEventEnergy.h");
  G__add_compiledheader("../reconRootData/CalRecon.h");
  G__add_compiledheader("../reconRootData/CalRangeRecData.h");
  G__add_compiledheader("../reconRootData/CalXtalRecData.h");
  G__add_compiledheader("../reconRootData/ReconEvent.h");
  G__add_compiledheader("../reconRootData/AcdTkrIntersection.h");
  G__add_compiledheader("../reconRootData/AcdTkrPoca.h");
  G__add_compiledheader("../reconRootData/AcdHit.h");
  G__add_compiledheader("../reconRootData/AcdPocaData.h");
  G__add_compiledheader("../reconRootData/AcdTkrLocalCoords.h");
  G__add_compiledheader("../reconRootData/AcdTkrPoint.h");
  G__add_compiledheader("../reconRootData/AcdTkrHitPoca.h");
  G__add_compiledheader("../reconRootData/AcdTkrGapPoca.h");
  G__add_compiledheader("../reconRootData/AcdSplashVars.h");
  G__add_compiledheader("../reconRootData/TkrCluster.h");
  G__add_compiledheader("../reconRootData/TkrTrack.h");
  G__add_compiledheader("../reconRootData/TkrTrackHit.h");
  G__add_compiledheader("../reconRootData/TkrTrackParams.h");
  G__add_compiledheader("../reconRootData/TkrRecon.h");
  G__add_compiledheader("../reconRootData/TkrVertex.h");
  G__add_compiledheader("../reconRootData/TkrDiagnostics.h");
  G__add_compiledheader("../reconRootData/TaggerCluster.h");
  G__add_compiledheader("../reconRootData/AdfRecon.h");
  G__add_compiledheader("../reconRootData/GcrXtal.h");
  G__add_compiledheader("../reconRootData/GcrTrack.h");
  G__cpp_reset_tagtablereconRootData_rootcint();
}
#include <new>
extern "C" int G__cpp_dllrevreconRootData_rootcint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AcdTkrIntersection */
static int G__reconRootData_rootcint_506_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrIntersection* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrIntersection[n];
     } else {
       p = new((void*) gvp) AcdTkrIntersection[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrIntersection;
     } else {
       p = new((void*) gvp) AcdTkrIntersection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrIntersection* p = NULL;
   long gvp = G__getgvp();
   //m: 9
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrIntersection(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (const Double_t*) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref, (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) AcdTkrIntersection(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (const Double_t*) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref, (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrIntersection* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrIntersection(*(AcdTkrIntersection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrIntersection(*(AcdTkrIntersection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((AcdTkrIntersection*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((AcdTkrIntersection*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdTkrIntersection*) G__getstructoffset())->CompareInRange(*(AcdTkrIntersection*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdTkrIntersection*) G__getstructoffset())->CompareInRange(*(AcdTkrIntersection*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const AcdTkrIntersection*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const AcdTkrIntersection*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrIntersection& obj = ((AcdTkrIntersection*) G__getstructoffset())->operator=(*(AcdTkrIntersection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->initialize(
*(AcdId*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, (const Double_t*) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref, (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (UChar_t) G__int(libp->para[7])
, (Double_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->initialize(*(AcdTkrIntersection*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdTkrIntersection*) G__getstructoffset())->getTileId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrIntersection*) G__getstructoffset())->getTrackIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdTkrIntersection*) G__getstructoffset())->getGlobalPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((AcdTkrIntersection*) G__getstructoffset())->getGlobalPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getLocalX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getLocalY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getLocalXXCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getLocalYYCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getLocalXYCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getArcLengthToIntersection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getPathLengthInTile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const AcdTkrIntersection*) G__getstructoffset())->tileHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdTkrIntersection*) G__getstructoffset())->getCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrIntersection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrIntersection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrIntersection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrIntersection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrIntersection*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrIntersection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrIntersection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrIntersection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrIntersection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_506_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrIntersection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrIntersection G__TAcdTkrIntersection;
static int G__reconRootData_rootcint_506_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrIntersection*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrIntersection*) (soff+(sizeof(AcdTkrIntersection)*i)))->~G__TAcdTkrIntersection();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrIntersection*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrIntersection*) (soff))->~G__TAcdTkrIntersection();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrTrackParams */
static int G__reconRootData_rootcint_508_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackParams* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrackParams[n];
     } else {
       p = new((void*) gvp) TkrTrackParams[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrackParams;
     } else {
       p = new((void*) gvp) TkrTrackParams;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackParams* p = NULL;
   long gvp = G__getgvp();
   //m: 14
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TkrTrackParams(
(Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]), (Double32_t) G__double(libp->para[7])
, (Double32_t) G__double(libp->para[8]), (Double32_t) G__double(libp->para[9])
, (Double32_t) G__double(libp->para[10]), (Double32_t) G__double(libp->para[11])
, (Double32_t) G__double(libp->para[12]), (Double32_t) G__double(libp->para[13]));
   } else {
     p = new((void*) gvp) TkrTrackParams(
(Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]), (Double32_t) G__double(libp->para[7])
, (Double32_t) G__double(libp->para[8]), (Double32_t) G__double(libp->para[9])
, (Double32_t) G__double(libp->para[10]), (Double32_t) G__double(libp->para[11])
, (Double32_t) G__double(libp->para[12]), (Double32_t) G__double(libp->para[13]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackParams* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TkrTrackParams(*(TkrTrackParams*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TkrTrackParams(*(TkrTrackParams*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrTrackParams*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrTrackParams*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrTrackParams*) G__getstructoffset())->CompareInRange(*(TkrTrackParams*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrTrackParams*) G__getstructoffset())->CompareInRange(*(TkrTrackParams*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrTrackParams*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrTrackParams*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((TkrTrackParams*) G__getstructoffset())->operator=(*(TkrTrackParams*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->initialize(
(Double32_t) G__double(libp->para[0]), (Double32_t) G__double(libp->para[1])
, (Double32_t) G__double(libp->para[2]), (Double32_t) G__double(libp->para[3])
, (Double32_t) G__double(libp->para[4]), (Double32_t) G__double(libp->para[5])
, (Double32_t) G__double(libp->para[6]), (Double32_t) G__double(libp->para[7])
, (Double32_t) G__double(libp->para[8]), (Double32_t) G__double(libp->para[9])
, (Double32_t) G__double(libp->para[10]), (Double32_t) G__double(libp->para[11])
, (Double32_t) G__double(libp->para[12]), (Double32_t) G__double(libp->para[13]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->initialize(*(TkrTrackParams*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getyPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getySlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxPosxPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxPosxSlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxPosyPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxPosySlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxSlpxSlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxSlpyPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getxSlpySlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getyPosyPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getyPosySlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackParams*) G__getstructoffset())->getySlpySlp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((TkrTrackParams*) G__getstructoffset())->operator()(*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const TkrTrackParams*) G__getstructoffset())->operator()(*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((TkrTrackParams*) G__getstructoffset())->operator()(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double32_t& obj = ((const TkrTrackParams*) G__getstructoffset())->operator()(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrTrackParams::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackParams::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrTrackParams::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrTrackParams::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrackParams*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackParams*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackParams::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrackParams::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackParams::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrackParams::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrTrackParams G__TTkrTrackParams;
static int G__reconRootData_rootcint_508_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrTrackParams*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrTrackParams*) (soff+(sizeof(TkrTrackParams)*i)))->~G__TTkrTrackParams();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrTrackParams*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrTrackParams*) (soff))->~G__TTkrTrackParams();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTkrPoca */
static int G__reconRootData_rootcint_511_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoca* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrPoca[n];
     } else {
       p = new((void*) gvp) AcdTkrPoca[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrPoca;
     } else {
       p = new((void*) gvp) AcdTkrPoca;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 7
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrPoca(
*(AcdId*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (UInt_t) G__int(libp->para[4]), *(TVector3*) libp->para[5].ref
, *(TkrTrackParams*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) AcdTkrPoca(
*(AcdId*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (UInt_t) G__int(libp->para[4]), *(TVector3*) libp->para[5].ref
, *(TkrTrackParams*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrPoca(*(AcdTkrPoca*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrPoca(*(AcdTkrPoca*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrPoca& obj = ((AcdTkrPoca*) G__getstructoffset())->operator=(*(AcdTkrPoca*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdTkrPoca*) G__getstructoffset())->getId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrPoca*) G__getstructoffset())->getTkrIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrPoca*) G__getstructoffset())->getDoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrPoca*) G__getstructoffset())->getDocaErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdTkrPoca*) G__getstructoffset())->getDocaRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdTkrPoca*) G__getstructoffset())->getPoca();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((const AcdTkrPoca*) G__getstructoffset())->getParamsAtPoca();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoca*) G__getstructoffset())->initialize(
*(AcdId*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (UInt_t) G__int(libp->para[4]), *(TVector3*) libp->para[5].ref
, *(TkrTrackParams*) libp->para[6].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoca*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdTkrPoca*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrPoca::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoca::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrPoca::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrPoca::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrPoca*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoca*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoca*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoca*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoca::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrPoca::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoca::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_511_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrPoca::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrPoca G__TAcdTkrPoca;
static int G__reconRootData_rootcint_511_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrPoca*) (soff+(sizeof(AcdTkrPoca)*i)))->~G__TAcdTkrPoca();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrPoca*) (soff))->~G__TAcdTkrPoca();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdHit */
static int G__reconRootData_rootcint_514_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdHit* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdHit[n];
     } else {
       p = new((void*) gvp) AcdHit[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdHit;
     } else {
       p = new((void*) gvp) AcdHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdHit* p = NULL;
   long gvp = G__getgvp();
   //m: 7
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdHit(
*(AcdId*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) AcdHit(
*(AcdId*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdHit*) G__getstructoffset())->set(
*(AcdId*) libp->para[0].ref, (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdHit*) G__getstructoffset())->getId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdHit*) G__getstructoffset())->getMips((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdHit*) G__getstructoffset())->getMips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const AcdHit*) G__getstructoffset())->getPha((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const AcdHit*) G__getstructoffset())->getFlags((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdHit*) G__getstructoffset())->getAcceptMapBit((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdHit*) G__getstructoffset())->getHitMapBit((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdHit*) G__getstructoffset())->getOddParityError((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdHit*) G__getstructoffset())->getHeaderParityError((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdHit*) G__getstructoffset())->getPmtDead((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdHit*) G__getstructoffset())->getPmtHot((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdHit*) G__getstructoffset())->getPmtError((AcdHit::PmtId) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdHit*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_514_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AcdHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AcdHit(*(AcdHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdHit G__TAcdHit;
static int G__reconRootData_rootcint_514_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdHit*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdHit*) (soff+(sizeof(AcdHit)*i)))->~G__TAcdHit();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdHit*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdHit*) (soff))->~G__TAcdHit();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_514_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdHit* dest = (AcdHit*) G__getstructoffset();
   *dest = *(AcdHit*) libp->para[0].ref;
   const AcdHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTkrLocalCoords */
static int G__reconRootData_rootcint_519_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrLocalCoords* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrLocalCoords[n];
     } else {
       p = new((void*) gvp) AcdTkrLocalCoords[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrLocalCoords;
     } else {
       p = new((void*) gvp) AcdTkrLocalCoords;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrLocalCoords* p = NULL;
   long gvp = G__getgvp();
   //m: 5
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrLocalCoords(
(const float*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) AcdTkrLocalCoords(
(const float*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrLocalCoords* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrLocalCoords(*(AcdTkrLocalCoords*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrLocalCoords(*(AcdTkrLocalCoords*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrLocalCoords& obj = ((AcdTkrLocalCoords*) G__getstructoffset())->operator=(*(AcdTkrLocalCoords*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getActiveX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getActiveY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getLocalXXCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getLocalYYCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getLocalXYCov());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getPathLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrLocalCoords*) G__getstructoffset())->getCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrLocalCoords*) G__getstructoffset())->getRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->set((const float*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, *(TMatrixD*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->copy(*(AcdTkrLocalCoords*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->setCovTerms((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdTkrLocalCoords*) G__getstructoffset())->CompareInRange(*(AcdTkrLocalCoords*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdTkrLocalCoords*) G__getstructoffset())->CompareInRange(*(AcdTkrLocalCoords*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const AcdTkrLocalCoords*) G__getstructoffset())->print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const AcdTkrLocalCoords*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrLocalCoords::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrLocalCoords::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrLocalCoords::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrLocalCoords::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrLocalCoords*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrLocalCoords*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrLocalCoords::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrLocalCoords::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrLocalCoords::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_519_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrLocalCoords::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrLocalCoords G__TAcdTkrLocalCoords;
static int G__reconRootData_rootcint_519_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrLocalCoords*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrLocalCoords*) (soff+(sizeof(AcdTkrLocalCoords)*i)))->~G__TAcdTkrLocalCoords();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrLocalCoords*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrLocalCoords*) (soff))->~G__TAcdTkrLocalCoords();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdPocaData */
static int G__reconRootData_rootcint_520_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdPocaData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdPocaData[n];
     } else {
       p = new((void*) gvp) AcdPocaData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdPocaData;
     } else {
       p = new((void*) gvp) AcdPocaData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdPocaData* p = NULL;
   long gvp = G__getgvp();
   //m: 5
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdPocaData(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, *(TVector3*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) AcdPocaData(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, *(TVector3*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdPocaData* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdPocaData(*(AcdPocaData*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdPocaData(*(AcdPocaData*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdPocaData& obj = ((AcdPocaData*) G__getstructoffset())->operator=(*(AcdPocaData*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdPocaData*) G__getstructoffset())->getArcLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdPocaData*) G__getstructoffset())->getDoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdPocaData*) G__getstructoffset())->getDocaErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdPocaData*) G__getstructoffset())->getPoca();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdPocaData*) G__getstructoffset())->getPocaVector();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->set((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, *(TVector3*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->copy(*(AcdPocaData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->setArcLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->setDoca((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->setDocaErr((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->setPoca(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->setPocaVector(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((AcdPocaData*) G__getstructoffset())->accessPoca();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((AcdPocaData*) G__getstructoffset())->accessPocaVector();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdPocaData*) G__getstructoffset())->CompareInRange(*(AcdPocaData*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdPocaData*) G__getstructoffset())->CompareInRange(*(AcdPocaData*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdPocaData*) G__getstructoffset())->print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdPocaData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdPocaData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdPocaData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdPocaData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdPocaData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdPocaData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdPocaData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdPocaData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdPocaData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_520_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdPocaData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdPocaData G__TAcdPocaData;
static int G__reconRootData_rootcint_520_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdPocaData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdPocaData*) (soff+(sizeof(AcdPocaData)*i)))->~G__TAcdPocaData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdPocaData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdPocaData*) (soff))->~G__TAcdPocaData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTkrHitPoca */
static int G__reconRootData_rootcint_521_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrHitPoca* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrHitPoca[n];
     } else {
       p = new((void*) gvp) AcdTkrHitPoca[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrHitPoca;
     } else {
       p = new((void*) gvp) AcdTkrHitPoca;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrHitPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 4
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrHitPoca(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) AcdTkrHitPoca(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrHitPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrHitPoca(*(AcdTkrHitPoca*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrHitPoca(*(AcdTkrHitPoca*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrHitPoca& obj = ((AcdTkrHitPoca*) G__getstructoffset())->operator=(*(AcdTkrHitPoca*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdTkrHitPoca*) G__getstructoffset())->getId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrHitPoca*) G__getstructoffset())->getTrackIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->set(*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdTkrHitPoca*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdTkrHitPoca*) G__getstructoffset())->CompareInRange(*(AcdTkrHitPoca*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdTkrHitPoca*) G__getstructoffset())->CompareInRange(*(AcdTkrHitPoca*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrHitPoca::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrHitPoca::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrHitPoca::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrHitPoca::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrHitPoca*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrHitPoca*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrHitPoca::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrHitPoca::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrHitPoca::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_521_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrHitPoca::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrHitPoca G__TAcdTkrHitPoca;
static int G__reconRootData_rootcint_521_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrHitPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrHitPoca*) (soff+(sizeof(AcdTkrHitPoca)*i)))->~G__TAcdTkrHitPoca();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrHitPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrHitPoca*) (soff))->~G__TAcdTkrHitPoca();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTkrGapPoca */
static int G__reconRootData_rootcint_524_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrGapPoca* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrGapPoca[n];
     } else {
       p = new((void*) gvp) AcdTkrGapPoca[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrGapPoca;
     } else {
       p = new((void*) gvp) AcdTkrGapPoca;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrGapPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 4
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrGapPoca(
*(AcdGapId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) AcdTkrGapPoca(
*(AcdGapId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrGapPoca* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrGapPoca(*(AcdTkrGapPoca*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrGapPoca(*(AcdTkrGapPoca*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrGapPoca& obj = ((AcdTkrGapPoca*) G__getstructoffset())->operator=(*(AcdTkrGapPoca*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdGapId& obj = ((const AcdTkrGapPoca*) G__getstructoffset())->getGapId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrGapPoca*) G__getstructoffset())->getTrackIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->initialize(*(AcdGapId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(AcdTkrLocalCoords*) libp->para[2].ref, *(AcdPocaData*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdTkrGapPoca*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdTkrGapPoca*) G__getstructoffset())->CompareInRange(*(AcdTkrGapPoca*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdTkrGapPoca*) G__getstructoffset())->CompareInRange(*(AcdTkrGapPoca*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrGapPoca::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrGapPoca::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrGapPoca::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrGapPoca::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrGapPoca*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrGapPoca*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrGapPoca::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrGapPoca::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrGapPoca::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_524_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrGapPoca::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrGapPoca G__TAcdTkrGapPoca;
static int G__reconRootData_rootcint_524_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrGapPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrGapPoca*) (soff+(sizeof(AcdTkrGapPoca)*i)))->~G__TAcdTkrGapPoca();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrGapPoca*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrGapPoca*) (soff))->~G__TAcdTkrGapPoca();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTkrPoint */
static int G__reconRootData_rootcint_525_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoint* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrPoint[n];
     } else {
       p = new((void*) gvp) AcdTkrPoint[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdTkrPoint;
     } else {
       p = new((void*) gvp) AcdTkrPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoint* p = NULL;
   long gvp = G__getgvp();
   //m: 4
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrPoint(
(double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TkrTrackParams*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) AcdTkrPoint(
(double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TkrTrackParams*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdTkrPoint* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdTkrPoint(*(AcdTkrPoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdTkrPoint(*(AcdTkrPoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdTkrPoint& obj = ((AcdTkrPoint*) G__getstructoffset())->operator=(*(AcdTkrPoint*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const AcdTkrPoint*) G__getstructoffset())->getArcLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdTkrPoint*) G__getstructoffset())->getFace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdTkrPoint*) G__getstructoffset())->getPoint();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((const AcdTkrPoint*) G__getstructoffset())->getParamsAtPoint();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->set((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TkrTrackParams*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->setArcLength((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->setFace((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->setPoint(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->setParams(*(TkrTrackParams*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdTkrPoint*) G__getstructoffset())->CompareInRange(*(AcdTkrPoint*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdTkrPoint*) G__getstructoffset())->CompareInRange(*(AcdTkrPoint*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdTkrPoint*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdTkrPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdTkrPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdTkrPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdTkrPoint*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdTkrPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdTkrPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_525_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdTkrPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTkrPoint G__TAcdTkrPoint;
static int G__reconRootData_rootcint_525_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdTkrPoint*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdTkrPoint*) (soff+(sizeof(AcdTkrPoint)*i)))->~G__TAcdTkrPoint();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdTkrPoint*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdTkrPoint*) (soff))->~G__TAcdTkrPoint();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdSplashVars */
static int G__reconRootData_rootcint_526_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdSplashVars* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdSplashVars[n];
     } else {
       p = new((void*) gvp) AcdSplashVars[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdSplashVars;
     } else {
       p = new((void*) gvp) AcdSplashVars;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdSplashVars* p = NULL;
   long gvp = G__getgvp();
   //m: 7
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdSplashVars(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]));
   } else {
     p = new((void*) gvp) AcdSplashVars(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdSplashVars* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdSplashVars(*(AcdSplashVars*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) AcdSplashVars(*(AcdSplashVars*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdSplashVars& obj = ((AcdSplashVars*) G__getstructoffset())->operator=(*(AcdSplashVars*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdSplashVars*) G__getstructoffset())->getId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdSplashVars*) G__getstructoffset())->getTrackIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdSplashVars*) G__getstructoffset())->calEntryPoint();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const AcdSplashVars*) G__getstructoffset())->calEntryVector();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((const AcdSplashVars*) G__getstructoffset())->tileSolidAngle();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((const AcdSplashVars*) G__getstructoffset())->weightedTrackAngle();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((const AcdSplashVars*) G__getstructoffset())->weightedPathlength();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->set(
*(AcdId*) libp->para[0].ref, (int) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const AcdSplashVars*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdSplashVars*) G__getstructoffset())->CompareInRange(*(AcdSplashVars*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdSplashVars*) G__getstructoffset())->CompareInRange(*(AcdSplashVars*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdSplashVars::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdSplashVars::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdSplashVars::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdSplashVars::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdSplashVars*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdSplashVars*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdSplashVars::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdSplashVars::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdSplashVars::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_526_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdSplashVars::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdSplashVars G__TAcdSplashVars;
static int G__reconRootData_rootcint_526_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdSplashVars*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdSplashVars*) (soff+(sizeof(AcdSplashVars)*i)))->~G__TAcdSplashVars();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdSplashVars*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdSplashVars*) (soff))->~G__TAcdSplashVars();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdRecon */
static int G__reconRootData_rootcint_527_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdRecon* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdRecon[n];
     } else {
       p = new((void*) gvp) AcdRecon[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new AcdRecon;
     } else {
       p = new((void*) gvp) AcdRecon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdRecon* p = NULL;
   long gvp = G__getgvp();
   //m: 14
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new AcdRecon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(AcdId*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, *(AcdId*) libp->para[8].ref, *(vector<Double_t>*) libp->para[9].ref
, *(vector<Double_t>*) libp->para[10].ref, *(vector<AcdId>*) libp->para[11].ref
, *(vector<Double_t>*) libp->para[12].ref, (Double_t) G__double(libp->para[13]));
   } else {
     p = new((void*) gvp) AcdRecon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(AcdId*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, *(AcdId*) libp->para[8].ref, *(vector<Double_t>*) libp->para[9].ref
, *(vector<Double_t>*) libp->para[10].ref, *(vector<AcdId>*) libp->para[11].ref
, *(vector<Double_t>*) libp->para[12].ref, (Double_t) G__double(libp->para[13]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->initialize(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(AcdId*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, *(AcdId*) libp->para[8].ref, (Double_t) G__double(libp->para[9])
, *(AcdId*) libp->para[10].ref, *(vector<Double_t>*) libp->para[11].ref
, *(vector<Double_t>*) libp->para[12].ref, *(vector<AcdId>*) libp->para[13].ref
, *(vector<Double_t>*) libp->para[14].ref, (Double_t) G__double(libp->para[15]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->initialize(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(AcdId*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, *(AcdId*) libp->para[8].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((AcdRecon*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((AcdRecon*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const AcdRecon*) G__getstructoffset())->CompareInRange(*(AcdRecon*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const AcdRecon*) G__getstructoffset())->CompareInRange(*(AcdRecon*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const AcdRecon*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const AcdRecon*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getRibbonEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdRecon*) G__getstructoffset())->getTileCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AcdRecon*) G__getstructoffset())->getRibbonCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getGammaDoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getDoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getActiveDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getRibbonActiveDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdRecon*) G__getstructoffset())->getMinDocaId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdRecon*) G__getstructoffset())->getMaxActDistId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const AcdId& obj = ((const AcdRecon*) G__getstructoffset())->getRibbonActDistId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const AcdRecon*) G__getstructoffset())->getRowDocaCol();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getRowDoca((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->addRowDoca((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const AcdRecon*) G__getstructoffset())->getRowActDistCol();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getRowActDist((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->addRowActDist((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const AcdRecon*) G__getstructoffset())->getEnergyCol();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getEnergy((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->addEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<AcdId>& obj = ((const AcdRecon*) G__getstructoffset())->getIdCol();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getId((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->addId(*(AcdId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getEnergy(*(AcdId*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AcdRecon*) G__getstructoffset())->hasHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((AcdRecon*) G__getstructoffset())->nId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdTkrIntersection(*(AcdTkrIntersection*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdIntersections());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdTkrIntersection((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AcdRecon*) G__getstructoffset())->getCornerDoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdTkrPoca(*(AcdTkrPoca*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdTkrPoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdTkrPoca((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdHit(*(AcdHit*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdTkrHitPoca(*(AcdTkrHitPoca*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdTkrHitPoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdTkrHitPoca((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdTkrGapPoca(*(AcdTkrGapPoca*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdTkrGapPoca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdTkrGapPoca((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdTkrPoint(*(AcdTkrPoint*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdTkrPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdTkrPoint((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AcdRecon*) G__getstructoffset())->addAcdSplashVar(*(AcdSplashVars*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const AcdRecon*) G__getstructoffset())->nAcdSplash());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->getAcdSplashVars((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AcdRecon*) G__getstructoffset())->checkAcdRecon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AcdRecon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdRecon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AcdRecon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_1_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AcdRecon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_2_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AcdRecon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_3_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_4_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_5_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AcdRecon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_6_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdRecon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_7_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdRecon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_8_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AcdRecon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_527_9_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AcdRecon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_527_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AcdRecon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AcdRecon(*(AcdRecon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdRecon G__TAcdRecon;
static int G__reconRootData_rootcint_527_1_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (AcdRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AcdRecon*) (soff+(sizeof(AcdRecon)*i)))->~G__TAcdRecon();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (AcdRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((AcdRecon*) (soff))->~G__TAcdRecon();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_527_2_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AcdRecon* dest = (AcdRecon*) G__getstructoffset();
   *dest = *(AcdRecon*) libp->para[0].ref;
   const AcdRecon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalParams */
static int G__reconRootData_rootcint_532_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalParams* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalParams[n];
     } else {
       p = new((void*) gvp) CalParams[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalParams;
     } else {
       p = new((void*) gvp) CalParams;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalParams* p = NULL;
   long gvp = G__getgvp();
   //m: 16
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalParams(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *((TVector3*) G__int(libp->para[9]))
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) CalParams(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *((TVector3*) G__int(libp->para[9]))
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalParams*) G__getstructoffset())->init(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *((TVector3*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), *((TVector3*) G__int(libp->para[9]))
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getEnergyErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalParams*) G__getstructoffset())->getCentroid();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxPosxPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxPosyPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxPoszPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getyPosyPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getyPoszPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getzPoszPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalParams*) G__getstructoffset())->getAxis();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxDirxDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxDiryDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getxDirzDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getyDiryDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getyDirzDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalParams*) G__getstructoffset())->getzDirzDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalParams*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalParams*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalParams*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalParams*) G__getstructoffset())->CompareInRange(*(CalParams*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalParams*) G__getstructoffset())->CompareInRange(*(CalParams*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalParams*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalParams*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalParams::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalParams::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalParams::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalParams::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalParams*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalParams*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalParams*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalParams*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalParams::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalParams::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalParams::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_532_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalParams::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_532_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalParams* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalParams(*(CalParams*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalParams G__TCalParams;
static int G__reconRootData_rootcint_532_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalParams*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalParams*) (soff+(sizeof(CalParams)*i)))->~G__TCalParams();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalParams*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalParams*) (soff))->~G__TCalParams();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_532_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalParams* dest = (CalParams*) G__getstructoffset();
   *dest = *(CalParams*) libp->para[0].ref;
   const CalParams& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalClusterLayerData */
static int G__reconRootData_rootcint_533_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalClusterLayerData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalClusterLayerData[n];
     } else {
       p = new((void*) gvp) CalClusterLayerData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalClusterLayerData;
     } else {
       p = new((void*) gvp) CalClusterLayerData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalClusterLayerData* p = NULL;
   long gvp = G__getgvp();
   //m: 3
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalClusterLayerData(
(Double_t) G__double(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) CalClusterLayerData(
(Double_t) G__double(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalClusterLayerData*) G__getstructoffset())->init((Double_t) G__double(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalClusterLayerData*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalClusterLayerData*) G__getstructoffset())->getPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalClusterLayerData*) G__getstructoffset())->getRmsSpread();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalClusterLayerData*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalClusterLayerData*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalClusterLayerData*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalClusterLayerData*) G__getstructoffset())->CompareInRange(*(CalClusterLayerData*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalClusterLayerData*) G__getstructoffset())->CompareInRange(*(CalClusterLayerData*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalClusterLayerData*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalClusterLayerData*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalClusterLayerData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalClusterLayerData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalClusterLayerData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalClusterLayerData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalClusterLayerData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalClusterLayerData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalClusterLayerData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalClusterLayerData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalClusterLayerData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalClusterLayerData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalClusterLayerData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_533_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalClusterLayerData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_533_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalClusterLayerData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalClusterLayerData(*(CalClusterLayerData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalClusterLayerData G__TCalClusterLayerData;
static int G__reconRootData_rootcint_533_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalClusterLayerData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalClusterLayerData*) (soff+(sizeof(CalClusterLayerData)*i)))->~G__TCalClusterLayerData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalClusterLayerData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalClusterLayerData*) (soff))->~G__TCalClusterLayerData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_533_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalClusterLayerData* dest = (CalClusterLayerData*) G__getstructoffset();
   *dest = *(CalClusterLayerData*) libp->para[0].ref;
   const CalClusterLayerData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalCluster */
static int G__reconRootData_rootcint_534_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalCluster* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalCluster[n];
     } else {
       p = new((void*) gvp) CalCluster[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalCluster;
     } else {
       p = new((void*) gvp) CalCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalCluster* p = NULL;
   long gvp = G__getgvp();
   //m: 7
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalCluster(
*(vector<CalClusterLayerData>*) libp->para[0].ref, *(CalParams*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) CalCluster(
*(vector<CalClusterLayerData>*) libp->para[0].ref, *(CalParams*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCluster*) G__getstructoffset())->init(
*(vector<CalClusterLayerData>*) libp->para[0].ref, *(CalParams*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalClusterLayerData& obj = ((const CalCluster*) G__getstructoffset())->getLayer((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalParams& obj = ((const CalCluster*) G__getstructoffset())->getParams();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalCluster*) G__getstructoffset())->getRmsLong());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalCluster*) G__getstructoffset())->getRmsLongAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalCluster*) G__getstructoffset())->getRmsTrans());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CalCluster*) G__getstructoffset())->getNumTruncXtals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const CalCluster*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalCluster*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalCluster*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCluster*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalCluster*) G__getstructoffset())->CompareInRange(*(CalCluster*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalCluster*) G__getstructoffset())->CompareInRange(*(CalCluster*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalCluster*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_534_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_534_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalCluster(*(CalCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalCluster G__TCalCluster;
static int G__reconRootData_rootcint_534_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalCluster*) (soff+(sizeof(CalCluster)*i)))->~G__TCalCluster();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalCluster*) (soff))->~G__TCalCluster();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_534_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalCluster* dest = (CalCluster*) G__getstructoffset();
   *dest = *(CalCluster*) libp->para[0].ref;
   const CalCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalCorToolResult */
static int G__reconRootData_rootcint_539_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalCorToolResult* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalCorToolResult[n];
     } else {
       p = new((void*) gvp) CalCorToolResult[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalCorToolResult;
     } else {
       p = new((void*) gvp) CalCorToolResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalCorToolResult* p = NULL;
   long gvp = G__getgvp();
   //m: 5
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalCorToolResult(
*(TString*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(CalParams*) libp->para[3].ref
, *(TObjArray*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) CalCorToolResult(
*(TString*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(CalParams*) libp->para[3].ref
, *(TObjArray*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCorToolResult*) G__getstructoffset())->init(*(TString*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(CalParams*) libp->para[3].ref
, *(TObjArray*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const CalCorToolResult*) G__getstructoffset())->getCorrectionName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const CalCorToolResult*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalCorToolResult*) G__getstructoffset())->getChiSquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalParams& obj = ((const CalCorToolResult*) G__getstructoffset())->getParams();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObjArray& obj = ((const CalCorToolResult*) G__getstructoffset())->getFreeAttributes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalCorToolResult*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalCorToolResult*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCorToolResult*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalCorToolResult*) G__getstructoffset())->CompareInRange(*(CalCorToolResult*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalCorToolResult*) G__getstructoffset())->CompareInRange(*(CalCorToolResult*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalCorToolResult*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalCorToolResult*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalCorToolResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCorToolResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalCorToolResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalCorToolResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalCorToolResult*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCorToolResult*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCorToolResult*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalCorToolResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCorToolResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalCorToolResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalCorToolResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_539_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalCorToolResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalCorToolResult G__TCalCorToolResult;
static int G__reconRootData_rootcint_539_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalCorToolResult*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalCorToolResult*) (soff+(sizeof(CalCorToolResult)*i)))->~G__TCalCorToolResult();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalCorToolResult*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalCorToolResult*) (soff))->~G__TCalCorToolResult();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalEventEnergy */
static int G__reconRootData_rootcint_540_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalEventEnergy* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalEventEnergy[n];
     } else {
       p = new((void*) gvp) CalEventEnergy[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalEventEnergy;
     } else {
       p = new((void*) gvp) CalEventEnergy;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalEventEnergy* p = NULL;
   long gvp = G__getgvp();
   //m: 3
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalEventEnergy(
*(CalParams*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) CalEventEnergy(
*(CalParams*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalEventEnergy*) G__getstructoffset())->init(*(CalParams*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, *(TObjArray*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalParams& obj = ((const CalEventEnergy*) G__getstructoffset())->getParams();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const CalEventEnergy*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObjArray& obj = ((const CalEventEnergy*) G__getstructoffset())->getToolsResults();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalEventEnergy*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalEventEnergy*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalEventEnergy*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalEventEnergy*) G__getstructoffset())->CompareInRange(*(CalEventEnergy*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalEventEnergy*) G__getstructoffset())->CompareInRange(*(CalEventEnergy*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalEventEnergy*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalEventEnergy*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalEventEnergy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalEventEnergy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalEventEnergy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalEventEnergy::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalEventEnergy*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalEventEnergy*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalEventEnergy*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalEventEnergy*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalEventEnergy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalEventEnergy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalEventEnergy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_540_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalEventEnergy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalEventEnergy G__TCalEventEnergy;
static int G__reconRootData_rootcint_540_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalEventEnergy*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalEventEnergy*) (soff+(sizeof(CalEventEnergy)*i)))->~G__TCalEventEnergy();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalEventEnergy*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalEventEnergy*) (soff))->~G__TCalEventEnergy();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalRangeRecData */
static int G__reconRootData_rootcint_546_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalRangeRecData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalRangeRecData[n];
     } else {
       p = new((void*) gvp) CalRangeRecData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalRangeRecData;
     } else {
       p = new((void*) gvp) CalRangeRecData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalRangeRecData* p = NULL;
   long gvp = G__getgvp();
   //m: 4
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalRangeRecData(
(Char_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Char_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) CalRangeRecData(
(Char_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Char_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalRangeRecData*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalRangeRecData*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRangeRecData*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalRangeRecData*) G__getstructoffset())->CompareInRange(*(CalRangeRecData*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalRangeRecData*) G__getstructoffset())->CompareInRange(*(CalRangeRecData*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalRangeRecData*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalRangeRecData*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRangeRecData*) G__getstructoffset())->initialize(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const CalRangeRecData*) G__getstructoffset())->getPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalRangeRecData*) G__getstructoffset())->getEnergy((CalXtalId::XtalFace) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const CalRangeRecData*) G__getstructoffset())->getRange((CalXtalId::XtalFace) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalRangeRecData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRangeRecData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalRangeRecData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalRangeRecData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalRangeRecData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRangeRecData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRangeRecData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRangeRecData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRangeRecData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalRangeRecData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRangeRecData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_546_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalRangeRecData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_546_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalRangeRecData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalRangeRecData(*(CalRangeRecData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalRangeRecData G__TCalRangeRecData;
static int G__reconRootData_rootcint_546_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalRangeRecData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalRangeRecData*) (soff+(sizeof(CalRangeRecData)*i)))->~G__TCalRangeRecData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalRangeRecData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalRangeRecData*) (soff))->~G__TCalRangeRecData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_546_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalRangeRecData* dest = (CalRangeRecData*) G__getstructoffset();
   *dest = *(CalRangeRecData*) libp->para[0].ref;
   const CalRangeRecData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalXtalRecData */
static int G__reconRootData_rootcint_547_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalXtalRecData* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalXtalRecData[n];
     } else {
       p = new((void*) gvp) CalXtalRecData[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalXtalRecData;
     } else {
       p = new((void*) gvp) CalXtalRecData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->initialize((CalXtalId::CalTrigMode) G__int(libp->para[0]), *((CalXtalId*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalXtalRecData*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalXtalRecData*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalXtalRecData*) G__getstructoffset())->CompareInRange(*(CalXtalRecData*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalXtalRecData*) G__getstructoffset())->CompareInRange(*(CalXtalRecData*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalXtalRecData*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalXtalRecData*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CalXtalRecData*) G__getstructoffset())->getMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalXtalId* pobj;
         const CalXtalId xobj = ((const CalXtalRecData*) G__getstructoffset())->getPackedId();
         pobj = new CalXtalId(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->addRangeRecData(*((CalRangeRecData*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const CalXtalRecData*) G__getstructoffset())->getRange((UShort_t) G__int(libp->para[0]), (CalXtalId::XtalFace) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalXtalRecData*) G__getstructoffset())->getEnergy((UShort_t) G__int(libp->para[0]), (CalXtalId::XtalFace) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalXtalRecData*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const CalXtalRecData*) G__getstructoffset())->getPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalXtalRecData*) G__getstructoffset())->getRangeRecData((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalXtalRecData*) G__getstructoffset())->getEnergySelectedRange((CalXtalId::AdcRange) G__int(libp->para[0]), (CalXtalId::XtalFace) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalXtalRecData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalXtalRecData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalXtalRecData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalXtalRecData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalXtalRecData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalXtalRecData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalXtalRecData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalXtalRecData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalXtalRecData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_547_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalXtalRecData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_547_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalXtalRecData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalXtalRecData(*(CalXtalRecData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalXtalRecData G__TCalXtalRecData;
static int G__reconRootData_rootcint_547_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalXtalRecData*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalXtalRecData*) (soff+(sizeof(CalXtalRecData)*i)))->~G__TCalXtalRecData();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalXtalRecData*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalXtalRecData*) (soff))->~G__TCalXtalRecData();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_547_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalXtalRecData* dest = (CalXtalRecData*) G__getstructoffset();
   *dest = *(CalXtalRecData*) libp->para[0].ref;
   const CalXtalRecData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalMipTrack */
static int G__reconRootData_rootcint_552_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalMipTrack* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalMipTrack[n];
     } else {
       p = new((void*) gvp) CalMipTrack[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalMipTrack;
     } else {
       p = new((void*) gvp) CalMipTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalMipTrack* p = NULL;
   long gvp = G__getgvp();
   //m: 10
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CalMipTrack(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   } else {
     p = new((void*) gvp) CalMipTrack(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setDir(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setD2C((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setD2Edge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setCalEdge((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setArcLen((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setEcor((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setEcorRms((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->setErm((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalMipTrack*) G__getstructoffset())->getPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const CalMipTrack*) G__getstructoffset())->getDir();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getD2C());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getD2Edge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const CalMipTrack*) G__getstructoffset())->getCalEdge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getArcLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getEcor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getEcorRms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const CalMipTrack*) G__getstructoffset())->getErm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const CalMipTrack*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const CalMipTrack*) G__getstructoffset())->CompareInRange(*(CalMipTrack*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const CalMipTrack*) G__getstructoffset())->CompareInRange(*(CalMipTrack*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalMipTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalMipTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalMipTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalMipTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalMipTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalMipTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalMipTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalMipTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalMipTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_552_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalMipTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_552_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalMipTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalMipTrack(*(CalMipTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalMipTrack G__TCalMipTrack;
static int G__reconRootData_rootcint_552_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalMipTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalMipTrack*) (soff+(sizeof(CalMipTrack)*i)))->~G__TCalMipTrack();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalMipTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalMipTrack*) (soff))->~G__TCalMipTrack();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalMipTrack* dest = (CalMipTrack*) G__getstructoffset();
   *dest = *(CalMipTrack*) libp->para[0].ref;
   const CalMipTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GcrXtal */
static int G__reconRootData_rootcint_553_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrXtal* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new GcrXtal[n];
     } else {
       p = new((void*) gvp) GcrXtal[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new GcrXtal;
     } else {
       p = new((void*) gvp) GcrXtal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrXtal* p = NULL;
   long gvp = G__getgvp();
   //m: 6
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new GcrXtal(
*((CalXtalId*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TVector3*) G__int(libp->para[4])), *((TVector3*) G__int(libp->para[5])));
   } else {
     p = new((void*) gvp) GcrXtal(
*((CalXtalId*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TVector3*) G__int(libp->para[4])), *((TVector3*) G__int(libp->para[5])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setXtalId(*((CalXtalId*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setPathLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setClosestFaceDist((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setCrossedFaces((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setEntryPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->setExitPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CalXtalId* pobj;
         const CalXtalId xobj = ((const GcrXtal*) G__getstructoffset())->getXtalId();
         pobj = new CalXtalId(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GcrXtal*) G__getstructoffset())->getPathLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GcrXtal*) G__getstructoffset())->getClosestFaceDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GcrXtal*) G__getstructoffset())->getCrossedFaces());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrXtal*) G__getstructoffset())->getEntryPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrXtal*) G__getstructoffset())->getExitPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const GcrXtal*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GcrXtal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrXtal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GcrXtal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GcrXtal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const GcrXtal*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrXtal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrXtal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GcrXtal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrXtal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_553_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GcrXtal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_553_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GcrXtal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GcrXtal(*(GcrXtal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GcrXtal G__TGcrXtal;
static int G__reconRootData_rootcint_553_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (GcrXtal*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GcrXtal*) (soff+(sizeof(GcrXtal)*i)))->~G__TGcrXtal();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (GcrXtal*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((GcrXtal*) (soff))->~G__TGcrXtal();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_553_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrXtal* dest = (GcrXtal*) G__getstructoffset();
   *dest = *(GcrXtal*) libp->para[0].ref;
   const GcrXtal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GcrTrack */
static int G__reconRootData_rootcint_554_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrTrack* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new GcrTrack[n];
     } else {
       p = new((void*) gvp) GcrTrack[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new GcrTrack;
     } else {
       p = new((void*) gvp) GcrTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrTrack* p = NULL;
   long gvp = G__getgvp();
   //m: 4
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new GcrTrack(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) GcrTrack(
*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->setDirection(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->setDirError(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->setCalEntryPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->setCalExitPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrTrack*) G__getstructoffset())->getDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrTrack*) G__getstructoffset())->getDirError();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrTrack*) G__getstructoffset())->getCalEntryPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const GcrTrack*) G__getstructoffset())->getCalExitPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GcrTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GcrTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GcrTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const GcrTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GcrTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GcrTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GcrTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_554_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GcrTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_554_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GcrTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GcrTrack(*(GcrTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GcrTrack G__TGcrTrack;
static int G__reconRootData_rootcint_554_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (GcrTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GcrTrack*) (soff+(sizeof(GcrTrack)*i)))->~G__TGcrTrack();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (GcrTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((GcrTrack*) (soff))->~G__TGcrTrack();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_554_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GcrTrack* dest = (GcrTrack*) G__getstructoffset();
   *dest = *(GcrTrack*) libp->para[0].ref;
   const GcrTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalRecon */
static int G__reconRootData_rootcint_555_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalRecon* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalRecon[n];
     } else {
       p = new((void*) gvp) CalRecon[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new CalRecon;
     } else {
       p = new((void*) gvp) CalRecon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((CalRecon*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((CalRecon*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((CalRecon*) G__getstructoffset())->CompareInRange(*(CalRecon*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((CalRecon*) G__getstructoffset())->CompareInRange(*(CalRecon*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const CalRecon*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const CalRecon*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getCalEventEnergyCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getCalClusterCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getCalXtalRecCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getCalMipTrackCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getGcrXtalCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CalRecon*) G__getstructoffset())->getGcrTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addCalEventEnergy((CalEventEnergy*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addCalCluster((CalCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addXtalRecData((CalXtalRecData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addCalMipTrack((CalMipTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addGcrXtal((GcrXtal*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->addGcrTrack((GcrTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalRecon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRecon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalRecon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalRecon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CalRecon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalRecon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRecon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalRecon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalRecon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_555_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalRecon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_555_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalRecon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalRecon(*(CalRecon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalRecon G__TCalRecon;
static int G__reconRootData_rootcint_555_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CalRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalRecon*) (soff+(sizeof(CalRecon)*i)))->~G__TCalRecon();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CalRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CalRecon*) (soff))->~G__TCalRecon();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_555_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalRecon* dest = (CalRecon*) G__getstructoffset();
   *dest = *(CalRecon*) libp->para[0].ref;
   const CalRecon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrCluster */
static int G__reconRootData_rootcint_571_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrCluster* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrCluster[n];
     } else {
       p = new((void*) gvp) TkrCluster[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrCluster;
     } else {
       p = new((void*) gvp) TkrCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrCluster* p = NULL;
   long gvp = G__getgvp();
   //m: 8
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TkrCluster(
*((commonRootData::TkrId*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (UInt_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) TkrCluster(
*((commonRootData::TkrId*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (UInt_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrCluster*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrCluster*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrCluster*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrCluster*) G__getstructoffset())->CompareInRange(*(TkrCluster*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrCluster*) G__getstructoffset())->CompareInRange(*(TkrCluster*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrCluster*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const commonRootData::TkrId* pobj;
         const commonRootData::TkrId xobj = ((const TkrCluster*) G__getstructoffset())->getTkrId();
         pobj = new commonRootData::TkrId(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrCluster*) G__getstructoffset())->getFirstStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrCluster*) G__getstructoffset())->getLastStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TkrCluster*) G__getstructoffset())->getToT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrCluster*) G__getstructoffset())->getNBad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TkrCluster*) G__getstructoffset())->getStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TkrCluster*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TkrCluster*) G__getstructoffset())->getPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrCluster*) G__getstructoffset())->getStatusWord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrCluster*) G__getstructoffset())->getPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrCluster*) G__getstructoffset())->getLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrCluster*) G__getstructoffset())->hitFlagged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TkrCluster*) G__getstructoffset())->getRawToT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TkrCluster*) G__getstructoffset())->getMips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrCluster*) G__getstructoffset())->getEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_571_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_571_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TkrCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TkrCluster(*(TkrCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrCluster G__TTkrCluster;
static int G__reconRootData_rootcint_571_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrCluster*) (soff+(sizeof(TkrCluster)*i)))->~G__TTkrCluster();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrCluster*) (soff))->~G__TTkrCluster();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_571_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrCluster* dest = (TkrCluster*) G__getstructoffset();
   *dest = *(TkrCluster*) libp->para[0].ref;
   const TkrCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrTrackHit */
static int G__reconRootData_rootcint_573_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackHit* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrackHit[n];
     } else {
       p = new((void*) gvp) TkrTrackHit[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrackHit;
     } else {
       p = new((void*) gvp) TkrTrackHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackHit* p = NULL;
   long gvp = G__getgvp();
   //m: 8
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TkrTrackHit(
(TkrCluster*) G__int(libp->para[0]), *((commonRootData::TkrId*) G__int(libp->para[1]))
, (const Double32_t) G__double(libp->para[2]), (const Double32_t) G__double(libp->para[3])
, (const Double32_t) G__double(libp->para[4]), (const Double32_t) G__double(libp->para[5])
, (const Double32_t) G__double(libp->para[6]), (const Double32_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) TkrTrackHit(
(TkrCluster*) G__int(libp->para[0]), *((commonRootData::TkrId*) G__int(libp->para[1]))
, (const Double32_t) G__double(libp->para[2]), (const Double32_t) G__double(libp->para[3])
, (const Double32_t) G__double(libp->para[4]), (const Double32_t) G__double(libp->para[5])
, (const Double32_t) G__double(libp->para[6]), (const Double32_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrTrackHit*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrTrackHit*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->CompareInRange(*(TkrTrackHit*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->CompareInRange(*(TkrTrackHit*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrTrackHit*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrTrackHit*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->initializeInfo(
(TkrCluster*) G__int(libp->para[0]), *((commonRootData::TkrId*) G__int(libp->para[1]))
, (const Double32_t) G__double(libp->para[2]), (const Double32_t) G__double(libp->para[3])
, (const Double32_t) G__double(libp->para[4]), (const Double32_t) G__double(libp->para[5])
, (const Double32_t) G__double(libp->para[6]), (const Double32_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->initializeHits(*(TkrTrackParams*) libp->para[0].ref, *(TkrTrackParams*) libp->para[1].ref
, *(TkrTrackParams*) libp->para[2].ref, *(TkrTrackParams*) libp->para[3].ref
, *(TkrTrackParams*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrackHit*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->hitUsedOnFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validMeasuredHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validPredictedHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validFilteredHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validSmoothedHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->validMaterial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TkrTrackHit*) G__getstructoffset())->upwards());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrackHit*) G__getstructoffset())->getClusterPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getZPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getRadLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getActiveDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getChiSquareFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getChiSquareRevFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getChiSquareSmooth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const commonRootData::TkrId* pobj;
         const commonRootData::TkrId xobj = ((const TkrTrackHit*) G__getstructoffset())->getTkrId();
         pobj = new commonRootData::TkrId(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrTrackHit*) G__getstructoffset())->getParamIndex((TkrTrackHit::SSDDirection) G__int(libp->para[0]), (TkrTrackParams::ParamType) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TkrTrackHit*) G__getstructoffset())->getParamIndex((TkrTrackHit::SSDDirection) G__int(libp->para[0]), (TkrTrackParams::ParamType) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrTrackHit*) G__getstructoffset())->getPoint((TkrTrackHit::ParamType) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TkrTrackHit*) G__getstructoffset())->getPoint((TkrTrackHit::ParamType) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrTrackHit*) G__getstructoffset())->getDirection((TkrTrackHit::ParamType) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TkrTrackHit*) G__getstructoffset())->getDirection((TkrTrackHit::ParamType) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getMeasuredPosition((TkrTrackHit::ParamType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getMeasuredSlope((TkrTrackHit::ParamType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getNonMeasuredPosition((TkrTrackHit::ParamType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrackHit*) G__getstructoffset())->getNonMeasuredSlope((TkrTrackHit::ParamType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((const TkrTrackHit*) G__getstructoffset())->getTrackParams((TkrTrackHit::ParamType) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((TkrTrackHit*) G__getstructoffset())->getTrackParams((TkrTrackHit::ParamType) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setClusterPtr((TkrCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setTkrID(*(commonRootData::TkrId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setEnergy((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setZPlane((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setRadLen((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setActiveDist((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setChiSquareFilter((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setChiSquareRevFit((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setChiSquareSmooth((const Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->setStatusBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->clearStatusBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrTrackHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_4_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrTrackHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_5_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrTrackHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_6_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrackHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_7_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_8_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_9_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrackHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_1_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrackHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_2_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrackHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_573_3_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrackHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_573_4_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TkrTrackHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TkrTrackHit(*(TkrTrackHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrTrackHit G__TTkrTrackHit;
static int G__reconRootData_rootcint_573_5_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrTrackHit*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrTrackHit*) (soff+(sizeof(TkrTrackHit)*i)))->~G__TTkrTrackHit();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrTrackHit*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrTrackHit*) (soff))->~G__TTkrTrackHit();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_573_6_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrackHit* dest = (TkrTrackHit*) G__getstructoffset();
   *dest = *(TkrTrackHit*) libp->para[0].ref;
   const TkrTrackHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrTrack */
static int G__reconRootData_rootcint_577_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrTrack* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrack[n];
     } else {
       p = new((void*) gvp) TkrTrack[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrTrack;
     } else {
       p = new((void*) gvp) TkrTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrTrack*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrTrack*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrTrack*) G__getstructoffset())->CompareInRange(*(TkrTrack*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrTrack*) G__getstructoffset())->CompareInRange(*(TkrTrack*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrTrack*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrTrack*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getChiSquareFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getChiSquareSmooth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNDegreesOfFreedom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getScatter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getKalThetaMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getKalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getKalEnergyError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumGaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumXGaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumYGaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumXFirstGaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumYFirstGaps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrTrack*) G__getstructoffset())->getInitialPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrTrack*) G__getstructoffset())->getInitialDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getInitialEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumSegmentPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->chiSquareSegment((Double32_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->chiSquareSegment());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumXHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumYHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->getNumFitHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrTrack*) G__getstructoffset())->getTkrCalRadlen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrack*) G__getstructoffset())->Iterator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrTrack*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setInitialPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setInitialDirection(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setInitialEnergy((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setChiSquareFilter((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setChiSquareSmooth((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNDegreesOfFreedom((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setChiSqSegment((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setQuality((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setScatter((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setKalThetaMS((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setKalEnergy((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setKalEnergyError((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumXGaps((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumYGaps((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumXFirstGaps((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumYFirstGaps((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumSegmentPoints((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumXHits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setNumYHits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setTkrCalRadLen((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->setStatusBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->clearStatusBits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->clearEnergyStatusBits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrack*) G__getstructoffset())->getHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_7_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_8_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_9_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_1_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_2_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_3_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_4_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_5_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_577_6_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrTrack G__TTkrTrack;
static int G__reconRootData_rootcint_577_7_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrTrack*) (soff+(sizeof(TkrTrack)*i)))->~G__TTkrTrack();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrTrack*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrTrack*) (soff))->~G__TTkrTrack();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrVertex */
static int G__reconRootData_rootcint_579_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrVertex* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrVertex[n];
     } else {
       p = new((void*) gvp) TkrVertex[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrVertex;
     } else {
       p = new((void*) gvp) TkrVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrVertex*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrVertex*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrVertex*) G__getstructoffset())->CompareInRange(*(TkrVertex*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrVertex*) G__getstructoffset())->CompareInRange(*(TkrVertex*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrVertex*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrVertex*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrVertex*) G__getstructoffset())->getStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getChiSquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrVertex*) G__getstructoffset())->getPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TkrVertex*) G__getstructoffset())->getDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TkrTrackParams& obj = ((const TkrVertex*) G__getstructoffset())->getVertexParams();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getAddedRadLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getTkr1ArcLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getTkr2ArcLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrVertex*) G__getstructoffset())->getDOCA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const commonRootData::TkrId* pobj;
         const commonRootData::TkrId xobj = ((const TkrVertex*) G__getstructoffset())->getTkrId();
         pobj = new commonRootData::TkrId(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setPosition(*((const TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setDirection(*((const TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setEnergy((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setChiSquare((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setQuality((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setAddedRadLen((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setTkr1ArcLen((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setTkr2ArcLen((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setDOCA((Double32_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setTkrID(*(commonRootData::TkrId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setParams(*(TkrTrackParams*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->setStatusBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->clearStatusBits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrVertex*) G__getstructoffset())->getNumTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrVertex*) G__getstructoffset())->getTrack((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->addTrack((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrVertex*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_2_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_3_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_4_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_579_5_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrVertex G__TTkrVertex;
static int G__reconRootData_rootcint_579_6_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrVertex*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrVertex*) (soff+(sizeof(TkrVertex)*i)))->~G__TTkrVertex();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrVertex*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrVertex*) (soff))->~G__TTkrVertex();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrDiagnostics */
static int G__reconRootData_rootcint_581_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrDiagnostics* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrDiagnostics[n];
     } else {
       p = new((void*) gvp) TkrDiagnostics[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrDiagnostics;
     } else {
       p = new((void*) gvp) TkrDiagnostics;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrDiagnostics* p = NULL;
   long gvp = G__getgvp();
   //m: 8
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new TkrDiagnostics(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) TkrDiagnostics(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TkrDiagnostics*) G__getstructoffset())->CompareInRange(*(TkrDiagnostics*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TkrDiagnostics*) G__getstructoffset())->CompareInRange(*(TkrDiagnostics*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrDiagnostics*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrDiagnostics*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->initializeInfo(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getNumClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getNumVecPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getNumVecLinks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getnLinksNonZeroLayers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getAveNumLinksLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TkrDiagnostics*) G__getstructoffset())->getNumLinkCombinations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getNumTrackElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TkrDiagnostics*) G__getstructoffset())->getNumTkrTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrDiagnostics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrDiagnostics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrDiagnostics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrDiagnostics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrDiagnostics*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrDiagnostics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrDiagnostics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrDiagnostics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrDiagnostics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_581_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrDiagnostics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_581_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TkrDiagnostics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TkrDiagnostics(*(TkrDiagnostics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrDiagnostics G__TTkrDiagnostics;
static int G__reconRootData_rootcint_581_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrDiagnostics*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrDiagnostics*) (soff+(sizeof(TkrDiagnostics)*i)))->~G__TTkrDiagnostics();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrDiagnostics*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrDiagnostics*) (soff))->~G__TTkrDiagnostics();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_581_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrDiagnostics* dest = (TkrDiagnostics*) G__getstructoffset();
   *dest = *(TkrDiagnostics*) libp->para[0].ref;
   const TkrDiagnostics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrRecon */
static int G__reconRootData_rootcint_582_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrRecon* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrRecon[n];
     } else {
       p = new((void*) gvp) TkrRecon[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new TkrRecon;
     } else {
       p = new((void*) gvp) TkrRecon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrRecon::CleanUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TkrRecon*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TkrRecon*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TkrRecon*) G__getstructoffset())->CompareInRange(*(TkrRecon*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TkrRecon*) G__getstructoffset())->CompareInRange(*(TkrRecon*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TkrRecon*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TkrRecon*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getClusterCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->addCluster((TkrCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getTrackCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->addTrack((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getVertexCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->addVertex((TkrVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrRecon*) G__getstructoffset())->nCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrRecon*) G__getstructoffset())->nTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TkrRecon*) G__getstructoffset())->nVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getCluster((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getVertex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TkrRecon*) G__getstructoffset())->getDiagnostics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->addDiagnostics((TkrDiagnostics*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TkrRecon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrRecon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TkrRecon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TkrRecon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TkrRecon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TkrRecon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrRecon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrRecon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TkrRecon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_582_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TkrRecon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_582_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TkrRecon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TkrRecon(*(TkrRecon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrRecon G__TTkrRecon;
static int G__reconRootData_rootcint_582_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (TkrRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TkrRecon*) (soff+(sizeof(TkrRecon)*i)))->~G__TTkrRecon();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (TkrRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((TkrRecon*) (soff))->~G__TTkrRecon();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_582_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TkrRecon* dest = (TkrRecon*) G__getstructoffset();
   *dest = *(TkrRecon*) libp->para[0].ref;
   const TkrRecon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reconRootData */

/* reconRootData::TaggerCluster */
static int G__reconRootData_rootcint_585_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reconRootData::TaggerCluster* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new reconRootData::TaggerCluster[n];
     } else {
       p = new((void*) gvp) reconRootData::TaggerCluster[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new reconRootData::TaggerCluster;
     } else {
       p = new((void*) gvp) reconRootData::TaggerCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((reconRootData::TaggerCluster*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((reconRootData::TaggerCluster*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const reconRootData::TaggerCluster*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const reconRootData::TaggerCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->initialize((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->initXyz((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getPulseHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getModuleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getLayerId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const commonRootData::TaggerHit& obj = ((const reconRootData::TaggerCluster*) G__getstructoffset())->getHighestHit();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->setHighestHit(*(commonRootData::TaggerHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getTaggerHitCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->getTaggerHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((reconRootData::TaggerCluster*) G__getstructoffset())->addTaggerHit((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Bool_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->CompareInRange(*(reconRootData::TaggerCluster*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->CompareInRange(*(reconRootData::TaggerCluster*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) reconRootData::TaggerCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::TaggerCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) reconRootData::TaggerCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reconRootData::TaggerCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::TaggerCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::TaggerCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::TaggerCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) reconRootData::TaggerCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::TaggerCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_585_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) reconRootData::TaggerCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_585_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reconRootData::TaggerCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reconRootData::TaggerCluster(*(reconRootData::TaggerCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reconRootData::TaggerCluster G__TreconRootDatacLcLTaggerCluster;
static int G__reconRootData_rootcint_585_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (reconRootData::TaggerCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reconRootData::TaggerCluster*) (soff+(sizeof(reconRootData::TaggerCluster)*i)))->~G__TreconRootDatacLcLTaggerCluster();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (reconRootData::TaggerCluster*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((reconRootData::TaggerCluster*) (soff))->~G__TreconRootDatacLcLTaggerCluster();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_585_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reconRootData::TaggerCluster* dest = (reconRootData::TaggerCluster*) G__getstructoffset();
   *dest = *(reconRootData::TaggerCluster*) libp->para[0].ref;
   const reconRootData::TaggerCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reconRootData::AdfRecon */
static int G__reconRootData_rootcint_588_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reconRootData::AdfRecon* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new reconRootData::AdfRecon[n];
     } else {
       p = new((void*) gvp) reconRootData::AdfRecon[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new reconRootData::AdfRecon;
     } else {
       p = new((void*) gvp) reconRootData::AdfRecon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((reconRootData::AdfRecon*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((reconRootData::AdfRecon*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const reconRootData::AdfRecon*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const reconRootData::AdfRecon*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initEventNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initSpillNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initNmodule((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getSpillNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getNmodule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initNumHighestCluster((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getNumHighestCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initNumCluster((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getNumCluster((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initXyz((const Double_t*) G__int(libp->para[0]), (const Double_t*) G__int(libp->para[1])
, (const Double_t*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getZ((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->init((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getPhiIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getPhiOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initThetaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getDeltaPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initEnergy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getReconstructedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getCorrectedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->initError((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getErrorReconstructedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const reconRootData::AdfRecon*) G__getstructoffset())->getErrorCorrectedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getTaggerClusterCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getTaggerCluster((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->addTaggerCluster((reconRootData::TaggerCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_7_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getQdcHitCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_8_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getQdcHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_9_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((reconRootData::AdfRecon*) G__getstructoffset())->addQdcHit((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getScalerHitCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_1_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->getScalerHit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((reconRootData::AdfRecon*) G__getstructoffset())->addScalerHit((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->CompareInRange(*(reconRootData::AdfRecon*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->CompareInRange(*(reconRootData::AdfRecon*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) reconRootData::AdfRecon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::AdfRecon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_7_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) reconRootData::AdfRecon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_8_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      reconRootData::AdfRecon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_9_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reconRootData::AdfRecon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_1_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_2_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reconRootData::AdfRecon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_3_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::AdfRecon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_4_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) reconRootData::AdfRecon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_5_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) reconRootData::AdfRecon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_588_6_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) reconRootData::AdfRecon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_588_7_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reconRootData::AdfRecon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reconRootData::AdfRecon(*(reconRootData::AdfRecon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reconRootData::AdfRecon G__TreconRootDatacLcLAdfRecon;
static int G__reconRootData_rootcint_588_8_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (reconRootData::AdfRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reconRootData::AdfRecon*) (soff+(sizeof(reconRootData::AdfRecon)*i)))->~G__TreconRootDatacLcLAdfRecon();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (reconRootData::AdfRecon*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((reconRootData::AdfRecon*) (soff))->~G__TreconRootDatacLcLAdfRecon();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_588_9_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reconRootData::AdfRecon* dest = (reconRootData::AdfRecon*) G__getstructoffset();
   *dest = *(reconRootData::AdfRecon*) libp->para[0].ref;
   const reconRootData::AdfRecon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ReconEvent */
static int G__reconRootData_rootcint_589_1_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReconEvent* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new ReconEvent[n];
     } else {
       p = new((void*) gvp) ReconEvent[n];
     }
   } else {
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new ReconEvent;
     } else {
       p = new((void*) gvp) ReconEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_2_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->initialize((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (TkrRecon*) G__int(libp->para[2]), (CalRecon*) G__int(libp->para[3])
, (AcdRecon*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_3_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->initEventFlags((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_4_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->initAdf((reconRootData::AdfRecon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_5_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ReconEvent*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ReconEvent*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_6_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->Fake((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_7_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const ReconEvent*) G__getstructoffset())->CompareInRange(*(ReconEvent*) libp->para[0].ref, *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const ReconEvent*) G__getstructoffset())->CompareInRange(*(ReconEvent*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_8_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const ReconEvent*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const ReconEvent*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_9_0(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ReconEvent*) G__getstructoffset())->getEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ReconEvent*) G__getstructoffset())->getRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_1_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReconEvent*) G__getstructoffset())->getAcdRecon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_2_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReconEvent*) G__getstructoffset())->getCalRecon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_3_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReconEvent*) G__getstructoffset())->getTkrRecon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_4_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReconEvent*) G__getstructoffset())->getAdfRecon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_5_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const ReconEvent*) G__getstructoffset())->getEventFlags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_6_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ReconEvent*) G__getstructoffset())->goodEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_7_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ReconEvent*) G__getstructoffset())->badEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_8_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ReconEvent*) G__getstructoffset())->badEventSeq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_9_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ReconEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReconEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_1_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ReconEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_2_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ReconEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_3_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ReconEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_4_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_5_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_6_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReconEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_7_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReconEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_8_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ReconEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_9_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ReconEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__reconRootData_rootcint_589_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ReconEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__reconRootData_rootcint_589_1_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ReconEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ReconEvent(*(ReconEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ReconEvent G__TReconEvent;
static int G__reconRootData_rootcint_589_2_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (ReconEvent*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ReconEvent*) (soff+(sizeof(ReconEvent)*i)))->~G__TReconEvent();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (ReconEvent*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((ReconEvent*) (soff))->~G__TReconEvent();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__reconRootData_rootcint_589_3_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReconEvent* dest = (ReconEvent*) G__getstructoffset();
   *dest = *(ReconEvent*) libp->para[0].ref;
   const ReconEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AcdTkrIntersection */

/* TkrTrackParams */

/* AcdTkrPoca */

/* AcdHit */

/* AcdTkrLocalCoords */

/* AcdPocaData */

/* AcdTkrHitPoca */

/* AcdTkrGapPoca */

/* AcdTkrPoint */

/* AcdSplashVars */

/* AcdRecon */

/* CalParams */

/* CalClusterLayerData */

/* CalCluster */

/* CalCorToolResult */

/* CalEventEnergy */

/* CalRangeRecData */

/* CalXtalRecData */

/* CalMipTrack */

/* GcrXtal */

/* GcrTrack */

/* CalRecon */

/* TkrCluster */

/* TkrTrackHit */

/* TkrTrack */

/* TkrVertex */

/* TkrDiagnostics */

/* TkrRecon */

/* reconRootData */

/* reconRootData::TaggerCluster */

/* reconRootData::AdfRecon */

/* ReconEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncreconRootData_rootcint {
 public:
  G__Sizep2memfuncreconRootData_rootcint() {p=&G__Sizep2memfuncreconRootData_rootcint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncreconRootData_rootcint::*p)();
};

size_t G__get_sizep2memfuncreconRootData_rootcint()
{
  G__Sizep2memfuncreconRootData_rootcint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancereconRootData_rootcint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection))) {
     AcdTkrIntersection *G__Lderived;
     G__Lderived=(AcdTkrIntersection*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams))) {
     TkrTrackParams *G__Lderived;
     G__Lderived=(TkrTrackParams*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca))) {
     AcdTkrPoca *G__Lderived;
     G__Lderived=(AcdTkrPoca*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit))) {
     AcdHit *G__Lderived;
     G__Lderived=(AcdHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca))) {
     AcdTkrHitPoca *G__Lderived;
     G__Lderived=(AcdTkrHitPoca*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AcdTkrLocalCoords *G__Lpbase=(AcdTkrLocalCoords*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AcdPocaData *G__Lpbase=(AcdPocaData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca))) {
     AcdTkrGapPoca *G__Lderived;
     G__Lderived=(AcdTkrGapPoca*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AcdTkrLocalCoords *G__Lpbase=(AcdTkrLocalCoords*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AcdPocaData *G__Lpbase=(AcdPocaData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca),G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint))) {
     AcdTkrPoint *G__Lderived;
     G__Lderived=(AcdTkrPoint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars))) {
     AcdSplashVars *G__Lderived;
     G__Lderived=(AcdSplashVars*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon))) {
     AcdRecon *G__Lderived;
     G__Lderived=(AcdRecon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster))) {
     CalCluster *G__Lderived;
     G__Lderived=(CalCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult))) {
     CalCorToolResult *G__Lderived;
     G__Lderived=(CalCorToolResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy))) {
     CalEventEnergy *G__Lderived;
     G__Lderived=(CalEventEnergy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData))) {
     CalRangeRecData *G__Lderived;
     G__Lderived=(CalRangeRecData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData))) {
     CalXtalRecData *G__Lderived;
     G__Lderived=(CalXtalRecData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack))) {
     CalMipTrack *G__Lderived;
     G__Lderived=(CalMipTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal))) {
     GcrXtal *G__Lderived;
     G__Lderived=(GcrXtal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack))) {
     GcrTrack *G__Lderived;
     G__Lderived=(GcrTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon))) {
     CalRecon *G__Lderived;
     G__Lderived=(CalRecon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster))) {
     TkrCluster *G__Lderived;
     G__Lderived=(TkrCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit))) {
     TkrTrackHit *G__Lderived;
     G__Lderived=(TkrTrackHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack))) {
     TkrTrack *G__Lderived;
     G__Lderived=(TkrTrack*)0x1000;
     {
       TObjArray *G__Lpbase=(TObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex))) {
     TkrVertex *G__Lderived;
     G__Lderived=(TkrVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics))) {
     TkrDiagnostics *G__Lderived;
     G__Lderived=(TkrDiagnostics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon))) {
     TkrRecon *G__Lderived;
     G__Lderived=(TkrRecon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster))) {
     reconRootData::TaggerCluster *G__Lderived;
     G__Lderived=(reconRootData::TaggerCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon))) {
     reconRootData::AdfRecon *G__Lderived;
     G__Lderived=(reconRootData::AdfRecon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent))) {
     ReconEvent *G__Lderived;
     G__Lderived=(ReconEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent),G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablereconRootData_rootcint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Double32_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes in memory, written as a 4 bytes float",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<void*,Version_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<void*,short>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<void*,short,less<void*>>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DocaRegionTile",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DocaRegionRibbon",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PmtId",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLPmtId),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ParityError",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FlagBits",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FlagMasks",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AcdId>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlEAcdIdcOallocatorlEAcdIdgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlEAcdIdcOallocatorlEAcdIdgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double32_t>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CalClusterLayerData>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CalRangeRecData>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EventFlags",117,G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEventcLcLEventFlags),0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AcdTkrIntersection */
static void G__setup_memvarAcdTkrIntersection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection));
   { AcdTkrIntersection *p; p=(AcdTkrIntersection*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_tileId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trackIndex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_location=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_localX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_localY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_localXXCov=",0,"local X Error squared  (x for Top, x for +-y planes, y for +- x plane) ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_localYYCov=",0,"local Y Error squared  (y for Top, z for +-x and +-y planes)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_localXYCov=",0,"correlation term of local X-Y error   ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_arcLengthToIntersection=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_pathlengthInTile=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_tileHit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrTrackParams */
static void G__setup_memvarTkrTrackParams(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams));
   { TkrTrackParams *p; p=(TkrTrackParams*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamType),-1,-2,1,"Position=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamType),-1,-2,1,"Slope=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex),-1,-2,1,"xPosIdx=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex),-1,-2,1,"xSlpIdx=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex),-1,-2,1,"yPosIdx=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex),-1,-2,1,"ySlpIdx=4",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xPosition=",0,"x position parameter");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xSlope=",0,"x \"Slope\" (x slope or tan(theta x)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_yPosition=",0,"y position");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_ySlope=",0,"y \"Slope\" (y slope or tan(theta y)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xPos_xPos=",0,"Cov(1,1) = xPositionErr * xPositionErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xPos_xSlp=",0,"Cov(1,2) = Cov(2,1) = xPositionErr * xSlopeErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xPos_yPos=",0,"Cov(1,3) = Cov(3,1) = xPositionErr * yPositionErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xPos_ySlp=",0,"Cov(1,4) = Cov(4,1) = xPositionERr * ySlopeErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xSlp_xSlp=",0,"Cov(2,2) = xSlopeErr * xSlopeErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xSlp_yPos=",0,"Cov(2,3) = Cov(3,2) = xSlopeErr * yPositionErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_xSlp_ySlp=",0,"Cov(2,4) = Cov(4,2) = xSlopeErr * ySlopeErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_yPos_yPos=",0,"Cov(3,3) = yPositionErr * yPositionErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_yPos_ySlp=",0,"Cov(3,4) = Cov(4,3) = yPositionErr * ySlopeErr");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_ySlp_ySlp=",0,"Cov(4,4) = ySlopeErr * ySlopeErr");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTkrPoca */
static void G__setup_memvarAcdTkrPoca(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca));
   { AcdTkrPoca *p; p=(AcdTkrPoca*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"NONE_TILE=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"HIT_TILE=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_TILE=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"HIT_TOP=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"HIT_RIGHT=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"HIT_BOTTOM=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"HIT_LEFT=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_TOP=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_TOP_RIGHT=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_RIGHT=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_BOTTOM_RIGHT=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_BOTTOM=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_BOTTOM_LEFT=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_LEFT=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile),-1,-2,1,"MISS_TOP_LEFT=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),-1,-2,1,"NONE_RIBBON=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),-1,-2,1,"HIT_RIBBON=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),-1,-2,1,"MISS_RIBBON=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),-1,-2,1,"MISS_POSITIVE=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon),-1,-2,1,"MISS_NEGATIVE=4",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_id=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_tkIndex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_doca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_docaErr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_docaRegion=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_poca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_paramsAtPoca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdHit */
static void G__setup_memvarAcdHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   { AcdHit *p; p=(AcdHit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLPmtId),-1,-2,1,"A=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLPmtId),-1,-2,1,"B=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLPmtId),-1,-2,1,"nPmt=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError),-1,-2,1,"NOERROR=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError),-1,-2,1,"ERROR=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_ACCEPT_BIT=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_VETO_BIT=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_RANGE_BIT=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_RESERVED_BIT=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_ODD_PARITY_ERROR_BIT=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_HEADER_PARITY_ERROR_BIT=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_DEAD_BIT=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits),-1,-2,1,"PMT_HOT_BIT=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_VETO_MASK=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_ACCEPT_MASK=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_RANGE_MASK=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_RESERVED_MASK=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_ODD_PARITY_ERROR_MASK=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_HEADER_PARITY_ERROR_MASK=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_DEAD_MASK=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_HOT_MASK=128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks),-1,-2,1,"PMT_ANY_ERROR_MASK=240",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_acdId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_flags[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_pha[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_mipsPmt[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTkrLocalCoords */
static void G__setup_memvarAcdTkrLocalCoords(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords));
   { AcdTkrLocalCoords *p; p=(AcdTkrLocalCoords*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_activeX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_activeY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_pathLength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_cosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_XXCov=",0,"X Error squared  (x for Top, x for +-y planes, y for +- x plane) ");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_YYCov=",0,"Y Error squared  (y for Top, z for +-x and +-y planes)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_XYCov=",0,"correlation term of  X-Y error   ");
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"m_region=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdPocaData */
static void G__setup_memvarAcdPocaData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData));
   { AcdPocaData *p; p=(AcdPocaData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_arcLength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_doca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_docaErr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_poca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_pocaVector=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTkrHitPoca */
static void G__setup_memvarAcdTkrHitPoca(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca));
   { AcdTkrHitPoca *p; p=(AcdTkrHitPoca*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_id=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trackIndex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTkrGapPoca */
static void G__setup_memvarAcdTkrGapPoca(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca));
   { AcdTkrGapPoca *p; p=(AcdTkrGapPoca*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdGapId),-1,-1,4,"m_id=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trackIndex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTkrPoint */
static void G__setup_memvarAcdTkrPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint));
   { AcdTkrPoint *p; p=(AcdTkrPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_arcLength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_face=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_point=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_paramsAtPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdSplashVars */
static void G__setup_memvarAcdSplashVars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars));
   { AcdSplashVars *p; p=(AcdSplashVars*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_id=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trackIndex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_calEntryPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_calEntryVector=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_tileSolidAngle=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_weightedTrackAngle=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_weightedPathlength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdRecon */
static void G__setup_memvarAcdRecon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon));
   { AcdRecon *p; p=(AcdRecon*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_totEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_gammaDoca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_doca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_actDist=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_tileCount=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double32_t>"),-1,4,"m_rowDocaCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double32_t>"),-1,4,"m_rowActDistCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_minDocaId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR),G__defined_typename("vector<AcdId>"),-1,4,"m_idCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double32_t>"),-1,4,"m_energyCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_maxActDistId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_totRibbonEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_ribbonCount=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_ribbonActDist=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId),-1,-1,4,"m_ribbonActDistId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdTkrIntersectionCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cornerDoca=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdTkrPocaCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdHitCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdTkrHitPocaCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdTkrGapPocaCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdTkrPointCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_acdSplashVarCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalParams */
static void G__setup_memvarCalParams(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams));
   { CalParams *p; p=(CalParams*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_energy=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_eneError=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_clusterCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenxx=",0,"Cov(1,1) = dx * dx ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenxy=",0,"Cov(1,2) = Cov(2,1) = dx * dy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenxz=",0,"Cov(1,3) = Cov(3,1) = dx * dz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenyy=",0,"Cov(2,2) = dy * dy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenyz=",0,"Cov(2,3) = Cov (3,2)= dy * dz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_cenzz=",0,"Cov(3,3) = dz * dz");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_clusterAxis=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axisxx=",0,"Cov(1,1) = dx * dx ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axisxy=",0,"Cov(1,2) = Cov(2,1) = dx * dy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axisxz=",0,"Cov(1,3) = Cov(3,1) = dx * dz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axisyy=",0,"Cov(2,2) = dy * dy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axisyz=",0,"Cov(2,3) = Cov (3,2)= dy * dz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_axiszz=",0,"Cov(3,3) = dz * dz");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalClusterLayerData */
static void G__setup_memvarCalClusterLayerData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData));
   { CalClusterLayerData *p; p=(CalClusterLayerData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_energy=",0,"Energy deposition in crystals in this cluster and layer");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_position=",0,"Average position in this layer");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_rmsSpread=",0,"Quadratic position spread for this layer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalCluster */
static void G__setup_memvarCalCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster));
   { CalCluster *p; p=(CalCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData),-1,-1,4,"m_layers[8]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams),-1,-1,4,"m_params=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_rmsLong=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_rmsLongAsym=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_rmsTrans=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numTruncXtals=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalCorToolResult */
static void G__setup_memvarCalCorToolResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult));
   { CalCorToolResult *p; p=(CalCorToolResult*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TString),-1,-1,4,"m_correctionName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquare=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams),-1,-1,4,"m_params=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_freeAttributes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalEventEnergy */
static void G__setup_memvarCalEventEnergy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy));
   { CalEventEnergy *p; p=(CalEventEnergy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams),-1,-1,4,"m_params=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_toolsResults=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalRangeRecData */
static void G__setup_memvarCalRangeRecData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData));
   { CalRangeRecData *p; p=(CalRangeRecData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_eneP=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_eneM=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_pos=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"m_rangeP=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"m_rangeM=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalXtalRecData */
static void G__setup_memvarCalXtalRecData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData));
   { CalXtalRecData *p; p=(CalXtalRecData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalIdcLcLCalTrigMode),G__defined_typename("CalTrigMode"),-1,4,"m_mode=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalId),-1,-1,4,"m_xtalId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR),G__defined_typename("vector<CalRangeRecData>"),-1,4,"m_recData=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalMipTrack */
static void G__setup_memvarCalMipTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack));
   { CalMipTrack *p; p=(CalMipTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_point=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_dir=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_d2C=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_d2Edge=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_calEdge=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_arcLen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_ecor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_ecorRms=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chi2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_erm=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GcrXtal */
static void G__setup_memvarGcrXtal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal));
   { GcrXtal *p; p=(GcrXtal*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalId),-1,-1,4,"m_xtalId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_pathLength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_closestFaceDist=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_crossedFaces=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_entryPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_exitPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GcrTrack */
static void G__setup_memvarGcrTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack));
   { GcrTrack *p; p=(GcrTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_direction=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_dirError=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_calEntryPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_calExitPoint=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalRecon */
static void G__setup_memvarCalRecon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon));
   { CalRecon *p; p=(CalRecon*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_xtalRecCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_clusterCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_mipTrackCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_eventEnergyCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_gcrXtalCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject),-1,-1,4,"m_gcrTrack=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrCluster */
static void G__setup_memvarTkrCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster));
   { TkrCluster *p; p=(TkrCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"fieldUSED=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"fieldEND=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"fieldPLANEOFFSET=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"fieldLAYEROFFSET=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"shiftUSED=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"shiftEND=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"shiftPLANEOFFSET=29",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"shiftLAYEROFFSET=30",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"maskUSED=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"maskEND=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"maskPLANEOFFSET=536870912",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA),-1,-2,1,"maskLAYEROFFSET=1073741824",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId),-1,-1,4,"m_tkrId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_strip0=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_stripf=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nBad=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_position=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_rawToT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_ToT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_status=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrTrackHit */
static void G__setup_memvarTkrTrackHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit));
   { TkrTrackHit *p; p=(TkrTrackHit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"MEASURED=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"PREDICTED=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"FILTERED=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"REVFIT=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"SMOOTHED=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"QMATERIAL=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType),-1,-2,1,"UNKNOWN=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITONFIT=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASMEASURED=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASPREDICTED=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASFILTERED=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASSMOOTHED=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASMATERIAL=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"UPWARDS=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISSSD=256",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISDEADST=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISGAP=1024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISTWR=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"MEASURESX=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"MEASURESY=8192",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HASVALIDTKR=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISUNKNOWN=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits),-1,-2,1,"HITISDEADPLN=131072",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLSSDDirection),-1,-2,1,"SSDMEASURED=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLSSDDirection),-1,-2,1,"SSDNONMEASURED=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,"See StatusBits enumeration above for definitions");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster),-1,-1,4,"m_cluster=",0,"Pointer to the cluster associated with this hit");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId),-1,-1,4,"m_hitID=",0,"Complete TkrId identifying the details of this hit/plane");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_zPlane=",0,"Z location of plane");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_energy=",0,"Energy of track at this plane");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_radLen=",0,"Radiation Lengths encountered from the previous hit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_activeDist=",0,"The distance inside (positive) hit SSD (neg. if outside)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquareFilter=",0,"hit chi-square at filter stage of fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquareRevFit=",0,"hit chi-square at filter stage of fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquareSmooth=",0,"hit chi-square at smooth stage of fit");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_hitMeas=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_hitPred=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_hitFit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_hitRevFit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_hitSmooth=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_Qmaterial=",0,"holds the covariance matrix of the material effects ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrTrack */
static void G__setup_memvarTkrTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack));
   { TkrTrack *p; p=(TkrTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"FOUND=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"FILTERED=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"SMOOTHED=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"REVFILTR=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"CALENERGY=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"LATENERGY=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"USERENERGY=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"MCENERGY=128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"RADELOSS=256",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"MIPELOSS=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"ONEPASS=1024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"TWOPASS=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"PRCALSRCH=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"PRBLNSRCH=8192",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"TOP=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits),-1,-2,1,"BOTTOM=32768",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_initialEnergy=",0,"Initial energy at the start of the track");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_initialPosition=",0,"Initial position at the start of the track");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_initialDirection=",0,"Initial direction at the start of the track");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquareFilter=",0,"Chi-square/dof from Filter stage of fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquareSmooth=",0,"\"Smoothed\" track chi-square/dof");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nDegreesOfFreedom=",0,"Number of degrees of freedom for above");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_rmsResid=",0,"RMS residuals of track hits to fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_Quality=",0,"Track \"Quality\" derived from hit counts & chisq.");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_KalmanEnergy=",0,"Energy estimate from Kalman Filter Fitter");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_KalmanThetaMS=",0,"rms scattering deviation of track");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_Xgaps=",0,"Number of x-meas points on track NOT used in fit");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_Ygaps=",0,"Number of y-meas points on track Not used in fit");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_XistGaps=",0,"Number of x-meas points in first part of track not used");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_YistGaps=",0,"Number of y-meas points in first part of track not used");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numSegmentPoints=",0,"Effective number of 3D segments that contribute");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chisqSegment=",0,"Chi-square for this portion of the track");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nxHits=",0,"Number of x meas. points USED in fit");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nyHits=",0,"Number of y meas. points USED in fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_KalmanEnergyErr=",0,"Estimated Error on Kalman Energy");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_TkrCal_radlen=",0,"Integrated Tracker radiation lengths ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrVertex */
static void G__setup_memvarTkrVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex));
   { TkrVertex *p; p=(TkrVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"ONETKRVTX=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"TWOTKRVTX=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"MULTKRVTX=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"DOCAVTX=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"FIRSTHIT=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"STAGVTX=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits),-1,-2,1,"CROSSTKR=128",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_statusBits=",0,"Status bits to describe vertex");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_energy=",0,"energy associated with vertex");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_position=",0,"position of vertex");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3),-1,-1,4,"m_direction=",0,"direction of gamma causing pair conversion vertex");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_chiSquare=",0,"Spacial chi-square for combining tracks");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_quality=",0,"Vertex \"Quality\" derived from topology & chisq.");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_arcLen1=",0,"Signed distance from head of track 1 to VTX");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_arcLen2=",0,"Signed distance from head of track 1 to VTX");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_doca=",0,"Distance between tracks at VTX location");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_radlen=",0,"Integrated radiation lengths from end of track 1");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId),-1,-1,4,"m_vtxID=",0,"Complete TkrId identifying the details of this vertex");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),-1,-1,4,"m_params=",0,"Parameter structure for vertex (includes cov. matrix)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_tracks=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrDiagnostics */
static void G__setup_memvarTkrDiagnostics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics));
   { TkrDiagnostics *p; p=(TkrDiagnostics*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numClusters=",0,"Number of clusters this event");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numVecPoints=",0,"Resulting number of VecPoints this event");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numVecLinks=",0,"Number of links between VecPoints");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nLinksNonZeroLayers=",0,"Number of layers with links");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_aveNumLinksLayer=",0,"Average number of links per layer");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_numLinkCombinations=",0,"Keep track of expected number of combinations");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numTrackElements=",0,"Number of found TrackElements");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numTkrTracks=",0,"Number of tracks created ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrRecon */
static void G__setup_memvarTkrRecon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon));
   { TkrRecon *p; p=(TkrRecon*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_clusterCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_trackCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_vertexCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics),-1,-1,4,"m_diagnostics=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster),-1,-2,4,"keepCluster[16384]=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),-1,-2,4,"keepTrack[10000]=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex),-1,-2,4,"keepVertex[10000]=",0,"!");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"indCluster=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"indTrack=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"indVertex=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* reconRootData */
static void G__setup_memvarreconRootData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootData));
   {
   }
   G__tag_memvar_reset();
}


   /* reconRootData::TaggerCluster */
static void G__setup_memvarreconRootDatacLcLTaggerCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster));
   { reconRootData::TaggerCluster *p; p=(reconRootData::TaggerCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_baricenterPosition=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_totalPulseHeight=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_eta=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_x=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_y=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_z=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numTaggerHit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit),-1,-1,4,"m_highestHit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_taggerHitCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* reconRootData::AdfRecon */
static void G__setup_memvarreconRootDatacLcLAdfRecon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon));
   { reconRootData::AdfRecon *p; p=(reconRootData::AdfRecon*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_spillNumber=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numHighestCluster=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_numCluster[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numQdcHit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numScalerHit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nModule=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_x=",0,"[m_nModule]");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_y=",0,"[m_nModule]");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_z=",0,"[m_nModule]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_px=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_py=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_pz=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_eRec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_eCorr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_phiIn=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_phiOut=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_theta=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_dphi=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_errorErec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"m_errorEcorr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray),-1,-1,4,"m_taggerClusterCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_qdcHitCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray),-1,-1,4,"m_scalerHitCol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ReconEvent */
static void G__setup_memvarReconEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent));
   { ReconEvent *p; p=(ReconEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEventcLcLEventFlags),-1,-2,1,"GOOD=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEventcLcLEventFlags),-1,-2,1,"EVTSEQ=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_eventId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_runId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon),-1,-1,4,"m_acd=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon),-1,-1,4,"m_cal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon),-1,-1,4,"m_tkr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_eventFlags=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon),-1,-1,4,"m_adfRecon=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarreconRootData_rootcint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAcdTkrIntersection(void) {
   /* AcdTkrIntersection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection));
   G__memfunc_setup("AcdTkrIntersection",1840,G__reconRootData_rootcint_506_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrIntersection",1840,G__reconRootData_rootcint_506_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 0, 9, 1, 1, 0, 
"u 'AcdId' - 11 - tileId i - - 0 - trackIndex "
"u 'TVector3' - 11 - globalPosition D - 'Double_t' 10 - localPosition "
"u 'TMatrixT<double>' 'TMatrixD' 11 - localCovMatrix d - 'Double_t' 0 - arcLengthToIntersection "
"d - 'Double_t' 0 - pathLengthInTile b - 'UChar_t' 0 - tileHit "
"d - 'Double_t' 0 - cosTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrIntersection",1840,G__reconRootData_rootcint_506_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 0, 1, 1, 1, 0, "u 'AcdTkrIntersection' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_506_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_506_5_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_506_6_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdTkrIntersection' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_506_7_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_506_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 1, 1, 1, 1, 0, "u 'AcdTkrIntersection' - 11 - old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_506_9_0, 121, -1, -1, 0, 9, 1, 1, 0, 
"u 'AcdId' - 11 - tileId i - 'Int_t' 0 - trackIndex "
"u 'TVector3' - 11 - globalPostion D - 'Double_t' 10 - localPosition "
"u 'TMatrixT<double>' 'TMatrixD' 11 - localCovMatrix d - 'Double_t' 0 - arcLengthToIntersection "
"d - 'Double_t' 0 - pathLengthInTile b - 'UChar_t' 0 - tileHit "
"d - 'Double_t' 0 - cosTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_506_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AcdTkrIntersection' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTileId",891,G__reconRootData_rootcint_506_1_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackIndex",1325,G__reconRootData_rootcint_506_2_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGlobalPosition",1766,G__reconRootData_rootcint_506_3_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGlobalPosition",1766,G__reconRootData_rootcint_506_4_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalX",899,G__reconRootData_rootcint_506_5_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalY",900,G__reconRootData_rootcint_506_6_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalXXCov",1283,G__reconRootData_rootcint_506_7_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalYYCov",1285,G__reconRootData_rootcint_506_8_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalXYCov",1284,G__reconRootData_rootcint_506_9_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArcLengthToIntersection",2674,G__reconRootData_rootcint_506_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPathLengthInTile",1908,G__reconRootData_rootcint_506_1_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tileHit",723,G__reconRootData_rootcint_506_2_2, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCosTheta",1115,G__reconRootData_rootcint_506_3_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_506_4_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrIntersection::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_506_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrIntersection::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_506_6_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrIntersection::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_506_7_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrIntersection::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_506_8_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_506_9_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_506_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_506_1_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_506_2_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrIntersection::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_506_3_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrIntersection::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_506_4_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrIntersection::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_506_5_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrIntersection::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrIntersection", 1966, G__reconRootData_rootcint_506_6_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrTrackParams(void) {
   /* TkrTrackParams */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams));
   G__memfunc_setup("TkrTrackParams",1418,G__reconRootData_rootcint_508_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TkrTrackParams",1418,G__reconRootData_rootcint_508_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 0, 14, 1, 1, 0, 
"d - 'Double32_t' 0 - xPosition d - 'Double32_t' 0 - xSlope "
"d - 'Double32_t' 0 - yPosition d - 'Double32_t' 0 - ySlope "
"d - 'Double32_t' 0 - xPosxPos d - 'Double32_t' 0 - xPosxSlp "
"d - 'Double32_t' 0 - xPosyPos d - 'Double32_t' 0 - xPosySlp "
"d - 'Double32_t' 0 - xSlpxSlp d - 'Double32_t' 0 - xSlpyPos "
"d - 'Double32_t' 0 - xSlpySlp d - 'Double32_t' 0 - yPosyPos "
"d - 'Double32_t' 0 - yPosySlp d - 'Double32_t' 0 - ySlpySlp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TkrTrackParams",1418,G__reconRootData_rootcint_508_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 0, 1, 1, 1, 0, "u 'TkrTrackParams' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_508_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_508_5_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_508_6_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrTrackParams' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_508_7_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_508_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 1, 1, 1, 0, "u 'TkrTrackParams' - 11 - old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_508_9_0, 121, -1, -1, 0, 14, 1, 1, 0, 
"d - 'Double32_t' 0 - xPosition d - 'Double32_t' 0 - xSlope "
"d - 'Double32_t' 0 - yPosition d - 'Double32_t' 0 - ySlope "
"d - 'Double32_t' 0 - xPosxPos d - 'Double32_t' 0 - xPosxSlp "
"d - 'Double32_t' 0 - xPosyPos d - 'Double32_t' 0 - xPosySlp "
"d - 'Double32_t' 0 - xSlpxSlp d - 'Double32_t' 0 - xSlpyPos "
"d - 'Double32_t' 0 - xSlpySlp d - 'Double32_t' 0 - yPosyPos "
"d - 'Double32_t' 0 - yPosySlp d - 'Double32_t' 0 - ySlpySlp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_508_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TkrTrackParams' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosition",1293,G__reconRootData_rootcint_508_1_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxSlope",955,G__reconRootData_rootcint_508_2_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyPosition",1294,G__reconRootData_rootcint_508_3_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getySlope",956,G__reconRootData_rootcint_508_4_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosxPos",1172,G__reconRootData_rootcint_508_5_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosxSlp",1169,G__reconRootData_rootcint_508_6_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosyPos",1173,G__reconRootData_rootcint_508_7_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosySlp",1170,G__reconRootData_rootcint_508_8_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxSlpxSlp",1166,G__reconRootData_rootcint_508_9_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxSlpyPos",1170,G__reconRootData_rootcint_508_0_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxSlpySlp",1167,G__reconRootData_rootcint_508_1_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyPosyPos",1174,G__reconRootData_rootcint_508_2_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyPosySlp",1171,G__reconRootData_rootcint_508_3_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getySlpySlp",1168,G__reconRootData_rootcint_508_4_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__reconRootData_rootcint_508_5_2, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__reconRootData_rootcint_508_6_2, 100, -1, G__defined_typename("Double32_t"), 1, 1, 1, 1, 9, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__reconRootData_rootcint_508_7_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 0, 
"i - - 11 - i i - - 11 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__reconRootData_rootcint_508_8_2, 100, -1, G__defined_typename("Double32_t"), 1, 2, 1, 1, 9, 
"i - - 11 - i i - - 11 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_508_9_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrTrackParams::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_508_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackParams::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_508_1_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrTrackParams::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_508_2_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrTrackParams::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_508_3_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_508_4_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_508_5_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_508_6_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_508_7_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackParams::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_508_8_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrackParams::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_508_9_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackParams::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_508_0_4, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrackParams::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TkrTrackParams", 1544, G__reconRootData_rootcint_508_1_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTkrPoca(void) {
   /* AcdTkrPoca */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca));
   G__memfunc_setup("AcdTkrPoca",956,G__reconRootData_rootcint_511_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrPoca",956,G__reconRootData_rootcint_511_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - 'Int_t' 0 - tkIndex "
"f - 'Float_t' 0 - m_doca f - 'Float_t' 0 - m_docaErr "
"h - 'UInt_t' 0 - docaRegion u 'TVector3' - 11 - poca "
"u 'TkrTrackParams' - 11 - paramsAtPoca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrPoca",956,G__reconRootData_rootcint_511_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_511_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 1, 1, 1, 1, 0, "u 'AcdTkrPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__reconRootData_rootcint_511_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkrIndex",1129,G__reconRootData_rootcint_511_6_0, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoca",695,G__reconRootData_rootcint_511_7_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDocaErr",992,G__reconRootData_rootcint_511_8_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDocaRegion",1307,G__reconRootData_rootcint_511_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoca",707,G__reconRootData_rootcint_511_0_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamsAtPoca",1500,G__reconRootData_rootcint_511_1_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_511_2_1, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - 'Int_t' 0 - tkIndex "
"f - 'Float_t' 0 - doca f - 'Float_t' 0 - docaErr "
"h - 'UInt_t' 0 - docaRegion u 'TVector3' - 11 - poca "
"u 'TkrTrackParams' - 11 - paramsAtPoca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_511_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_511_4_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_511_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrPoca::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_511_6_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoca::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_511_7_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrPoca::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_511_8_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrPoca::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_511_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_511_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_511_1_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_511_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_511_3_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoca::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_511_4_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrPoca::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_511_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoca::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_511_6_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrPoca::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrPoca", 1082, G__reconRootData_rootcint_511_7_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdHit(void) {
   /* AcdHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit));
   G__memfunc_setup("AcdHit",557,G__reconRootData_rootcint_514_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdHit",557,G__reconRootData_rootcint_514_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - id r - 'UShort_t' 0 - flagsA "
"r - 'UShort_t' 0 - flagsB r - 'UShort_t' 0 - phaA "
"r - 'UShort_t' 0 - phaB f - 'Float_t' 0 - mipsA "
"f - 'Float_t' 0 - mipsB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_514_3_0, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - id r - 'UShort_t' 0 - flagsA "
"r - 'UShort_t' 0 - flagsB r - 'UShort_t' 0 - phaA "
"r - 'UShort_t' 0 - phaB f - 'Float_t' 0 - mipsA "
"f - 'Float_t' 0 - mipsB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__reconRootData_rootcint_514_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMips",729,G__reconRootData_rootcint_514_5_0, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMips",729,G__reconRootData_rootcint_514_6_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPha",601,G__reconRootData_rootcint_514_7_0, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlags",813,G__reconRootData_rootcint_514_8_0, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcceptMapBit",1485,G__reconRootData_rootcint_514_9_0, 103, -1, -1, 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitMapBit",1186,G__reconRootData_rootcint_514_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOddParityError",1754,G__reconRootData_rootcint_514_1_1, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError), G__defined_typename("AcdHit::ParityError"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHeaderParityError",2060,G__reconRootData_rootcint_514_2_1, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError), G__defined_typename("AcdHit::ParityError"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtDead",991,G__reconRootData_rootcint_514_3_1, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtHot",924,G__reconRootData_rootcint_514_4_1, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtError",1147,G__reconRootData_rootcint_514_5_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'AcdHit::PmtId' 'AcdHit::PmtId' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_514_6_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_514_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdHit::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_514_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdHit::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_514_0_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdHit::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_514_1_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdHit::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_514_2_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_514_3_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_514_4_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_514_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_514_6_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdHit::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_514_7_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdHit::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_514_8_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdHit::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_514_9_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdHit::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("AcdHit", 557, G__reconRootData_rootcint_514_0_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 0, 1, 1, 1, 0, "u 'AcdHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AcdHit", 683, G__reconRootData_rootcint_514_1_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_514_2_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 1, 1, 1, 1, 0, "u 'AcdHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTkrLocalCoords(void) {
   /* AcdTkrLocalCoords */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords));
   G__memfunc_setup("AcdTkrLocalCoords",1678,G__reconRootData_rootcint_519_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrLocalCoords",1678,G__reconRootData_rootcint_519_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords), -1, 0, 5, 1, 1, 0, 
"F - - 10 - position f - - 0 - pathLength "
"f - - 0 - cosTheta i - - 0 - region "
"u 'TMatrixT<double>' 'TMatrixD' 11 - covMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrLocalCoords",1678,G__reconRootData_rootcint_519_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords), -1, 0, 1, 1, 1, 0, "u 'AcdTkrLocalCoords' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_519_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords), -1, 1, 1, 1, 1, 0, "u 'AcdTkrLocalCoords' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActiveX",1012,G__reconRootData_rootcint_519_5_0, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActiveY",1013,G__reconRootData_rootcint_519_6_0, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalXXCov",1283,G__reconRootData_rootcint_519_7_0, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalYYCov",1285,G__reconRootData_rootcint_519_8_0, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocalXYCov",1284,G__reconRootData_rootcint_519_9_0, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPathLength",1327,G__reconRootData_rootcint_519_0_1, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCosTheta",1115,G__reconRootData_rootcint_519_1_1, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRegion",932,G__reconRootData_rootcint_519_2_1, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_519_3_1, 121, -1, -1, 0, 5, 1, 1, 0, 
"F - - 10 - position f - - 0 - pathLength "
"f - - 0 - cosTheta i - - 0 - region "
"u 'TMatrixT<double>' 'TMatrixD' 11 - CovMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__reconRootData_rootcint_519_4_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AcdTkrLocalCoords' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCovTerms",1151,G__reconRootData_rootcint_519_5_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - XX f - - 0 - YY "
"f - - 0 - XY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_519_6_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_519_7_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdTkrLocalCoords' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__reconRootData_rootcint_519_8_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__reconRootData_rootcint_519_9_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_519_0_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrLocalCoords::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_519_1_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrLocalCoords::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_519_2_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrLocalCoords::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_519_3_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrLocalCoords::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_519_4_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_519_5_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_519_6_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_519_7_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_519_8_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrLocalCoords::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_519_9_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrLocalCoords::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_519_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrLocalCoords::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_519_1_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrLocalCoords::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrLocalCoords", 1804, G__reconRootData_rootcint_519_2_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdPocaData(void) {
   /* AcdPocaData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData));
   G__memfunc_setup("AcdPocaData",1029,G__reconRootData_rootcint_520_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdPocaData",1029,G__reconRootData_rootcint_520_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData), -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - arcLength f - 'Float_t' 0 - doca "
"f - 'Float_t' 0 - docaErr u 'TVector3' - 11 - poca "
"u 'TVector3' - 11 - pocaVector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdPocaData",1029,G__reconRootData_rootcint_520_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData), -1, 0, 1, 1, 1, 0, "u 'AcdPocaData' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_520_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData), -1, 1, 1, 1, 1, 0, "u 'AcdPocaData' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArcLength",1208,G__reconRootData_rootcint_520_5_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoca",695,G__reconRootData_rootcint_520_6_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDocaErr",992,G__reconRootData_rootcint_520_7_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoca",707,G__reconRootData_rootcint_520_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPocaVector",1334,G__reconRootData_rootcint_520_9_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_520_0_1, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - arcLength f - 'Float_t' 0 - doca "
"f - 'Float_t' 0 - docaErr u 'TVector3' - 11 - poca "
"u 'TVector3' - 11 - pocaVector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__reconRootData_rootcint_520_1_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AcdPocaData' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArcLength",1220,G__reconRootData_rootcint_520_2_1, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoca",707,G__reconRootData_rootcint_520_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDocaErr",1004,G__reconRootData_rootcint_520_4_1, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPoca",719,G__reconRootData_rootcint_520_5_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPocaVector",1346,G__reconRootData_rootcint_520_6_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessPoca",1013,G__reconRootData_rootcint_520_7_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accessPocaVector",1640,G__reconRootData_rootcint_520_8_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_520_9_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_520_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdPocaData' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__reconRootData_rootcint_520_1_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__reconRootData_rootcint_520_2_2, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_520_3_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdPocaData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_520_4_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdPocaData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_520_5_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdPocaData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_520_6_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdPocaData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_520_7_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_520_8_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_520_9_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_520_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_520_1_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdPocaData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_520_2_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdPocaData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_520_3_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdPocaData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_520_4_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdPocaData::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdPocaData", 1155, G__reconRootData_rootcint_520_5_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTkrHitPoca(void) {
   /* AcdTkrHitPoca */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca));
   G__memfunc_setup("AcdTkrHitPoca",1249,G__reconRootData_rootcint_521_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrHitPoca",1249,G__reconRootData_rootcint_521_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 0, 4, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - - 0 - trackIndex "
"u 'AcdTkrLocalCoords' - 11 - local u 'AcdPocaData' - 11 - pocaData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrHitPoca",1249,G__reconRootData_rootcint_521_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrHitPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_521_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 1, 1, 1, 1, 0, "u 'AcdTkrHitPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__reconRootData_rootcint_521_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackIndex",1325,G__reconRootData_rootcint_521_6_0, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_521_7_0, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - - 0 - trackIndex "
"u 'AcdTkrLocalCoords' - 11 - local u 'AcdPocaData' - 11 - pocaData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_521_8_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_521_9_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_521_0_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_521_1_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdTkrHitPoca' - 11 - - u 'string' - 11 \"\" name", "for tests   ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_521_2_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrHitPoca::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_521_3_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrHitPoca::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_521_4_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrHitPoca::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_521_5_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrHitPoca::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_521_6_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_521_7_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_521_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_521_9_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_521_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrHitPoca::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_521_1_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrHitPoca::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_521_2_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrHitPoca::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_521_3_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrHitPoca::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrHitPoca", 1375, G__reconRootData_rootcint_521_4_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTkrGapPoca(void) {
   /* AcdTkrGapPoca */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca));
   G__memfunc_setup("AcdTkrGapPoca",1236,G__reconRootData_rootcint_524_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrGapPoca",1236,G__reconRootData_rootcint_524_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 0, 4, 1, 1, 0, 
"u 'AcdGapId' - 11 - gapId i - - 0 - trackIndex "
"u 'AcdTkrLocalCoords' - 11 - local u 'AcdPocaData' - 11 - pocaData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrGapPoca",1236,G__reconRootData_rootcint_524_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrGapPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_524_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 1, 1, 1, 1, 0, "u 'AcdTkrGapPoca' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGapId",773,G__reconRootData_rootcint_524_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdGapId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackIndex",1325,G__reconRootData_rootcint_524_6_0, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_524_7_0, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'AcdGapId' - 11 - acdId i - - 0 - trackIndex "
"u 'AcdTkrLocalCoords' - 11 - local u 'AcdPocaData' - 11 - pocaData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_524_8_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_524_9_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_524_0_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_524_1_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdTkrGapPoca' - 11 - - u 'string' - 11 \"\" name", "for tests   ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_524_2_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrGapPoca::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_524_3_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrGapPoca::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_524_4_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrGapPoca::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_524_5_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrGapPoca::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_524_6_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_524_7_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_524_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_524_9_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_524_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrGapPoca::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_524_1_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrGapPoca::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_524_2_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrGapPoca::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_524_3_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrGapPoca::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrGapPoca", 1362, G__reconRootData_rootcint_524_4_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTkrPoint(void) {
   /* AcdTkrPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint));
   G__memfunc_setup("AcdTkrPoint",1091,G__reconRootData_rootcint_525_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrPoint",1091,G__reconRootData_rootcint_525_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 0, 4, 1, 1, 0, 
"d - - 0 - arcLength i - - 0 - face "
"u 'TVector3' - 11 - point u 'TkrTrackParams' - 11 - paramsAtPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdTkrPoint",1091,G__reconRootData_rootcint_525_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 0, 1, 1, 1, 0, "u 'AcdTkrPoint' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_525_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 1, 1, 1, 1, 0, "u 'AcdTkrPoint' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArcLength",1208,G__reconRootData_rootcint_525_5_0, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFace",687,G__reconRootData_rootcint_525_6_0, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoint",842,G__reconRootData_rootcint_525_7_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamsAtPoint",1635,G__reconRootData_rootcint_525_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_525_9_0, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - arcLength i - - 0 - face "
"u 'TVector3' - 11 - point u 'TkrTrackParams' - 11 - paramsAtPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArcLength",1220,G__reconRootData_rootcint_525_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFace",699,G__reconRootData_rootcint_525_1_1, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPoint",854,G__reconRootData_rootcint_525_2_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParams",944,G__reconRootData_rootcint_525_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TkrTrackParams' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_525_4_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_525_5_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdTkrPoint' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_525_6_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_525_7_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_525_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdTkrPoint::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_525_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoint::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_525_0_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdTkrPoint::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_525_1_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdTkrPoint::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_525_2_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_525_3_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_525_4_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_525_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_525_6_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoint::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_525_7_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrPoint::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_525_8_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdTkrPoint::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_525_9_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdTkrPoint::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdTkrPoint", 1217, G__reconRootData_rootcint_525_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdSplashVars(void) {
   /* AcdSplashVars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars));
   G__memfunc_setup("AcdSplashVars",1295,G__reconRootData_rootcint_526_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdSplashVars",1295,G__reconRootData_rootcint_526_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - - 0 - trackIndex "
"u 'TVector3' - 11 - calEntryPoint u 'TVector3' - 11 - calEntryVector "
"f - 'Float_t' 11 - tileSolidAngle f - 'Float_t' 11 - weightedTrackAngle "
"f - 'Float_t' 11 - weightedPathlength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdSplashVars",1295,G__reconRootData_rootcint_526_3_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 0, 1, 1, 1, 0, "u 'AcdSplashVars' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__reconRootData_rootcint_526_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 1, 1, 1, 1, 0, "u 'AcdSplashVars' - 11 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__reconRootData_rootcint_526_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackIndex",1325,G__reconRootData_rootcint_526_6_0, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calEntryPoint",1356,G__reconRootData_rootcint_526_7_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calEntryVector",1461,G__reconRootData_rootcint_526_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tileSolidAngle",1424,G__reconRootData_rootcint_526_9_0, 102, -1, G__defined_typename("Float_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightedTrackAngle",1837,G__reconRootData_rootcint_526_0_1, 102, -1, G__defined_typename("Float_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("weightedPathlength",1888,G__reconRootData_rootcint_526_1_1, 102, -1, G__defined_typename("Float_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__reconRootData_rootcint_526_2_1, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'AcdId' - 11 - acdId i - - 0 - trackIndex "
"u 'TVector3' - 11 - calEntryPoint u 'TVector3' - 11 - calEntryVector "
"f - 'Float_t' 11 - tileSolidAngle f - 'Float_t' 11 - weightedTrackAngle "
"f - 'Float_t' 11 - weightedPathlength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_526_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_526_4_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_526_5_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_526_6_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdSplashVars' - 11 - - u 'string' - 11 \"\" name", "for tests   ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_526_7_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdSplashVars::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_526_8_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdSplashVars::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_526_9_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdSplashVars::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_526_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdSplashVars::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_526_1_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_526_2_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_526_3_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_526_4_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_526_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdSplashVars::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_526_6_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdSplashVars::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_526_7_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdSplashVars::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_526_8_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdSplashVars::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~AcdSplashVars", 1421, G__reconRootData_rootcint_526_9_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdRecon(void) {
   /* AcdRecon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon));
   G__memfunc_setup("AcdRecon",767,G__reconRootData_rootcint_527_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AcdRecon",767,G__reconRootData_rootcint_527_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon), -1, 0, 14, 1, 1, 0, 
"d - 'Double_t' 0 - e d - 'Double_t' 0 - ribbonE "
"i - 'Int_t' 0 - count i - 'Int_t' 0 - ribbonCount "
"d - 'Double_t' 0 - gDoca d - 'Double_t' 0 - doca "
"u 'AcdId' - 11 - minDocaId d - 'Double_t' 0 - actDist "
"u 'AcdId' - 11 - maxActDistId u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - rowDoca "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - rowActDist u 'vector<AcdId,allocator<AcdId> >' 'vector<AcdId>' 11 - idCol "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - energyCol d - 'Double_t' 0 - cornerDoca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_527_3_0, 121, -1, -1, 0, 16, 1, 1, 0, 
"d - 'Double_t' 0 - e d - 'Double_t' 0 - ribbonE "
"i - 'Int_t' 0 - count i - 'Int_t' 0 - ribbonCount "
"d - 'Double_t' 0 - gDoca d - 'Double_t' 0 - doca "
"u 'AcdId' - 11 - minDocaId d - 'Double_t' 0 - actDist "
"u 'AcdId' - 11 - maxActDistId d - 'Double_t' 0 - ribbonActDist "
"u 'AcdId' - 11 - ribbonActDistId u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - rowDoca "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - rowActDist u 'vector<AcdId,allocator<AcdId> >' 'vector<AcdId>' 11 - idCol "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - energyCol d - 'Double_t' 0 - cornerDoca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_527_4_0, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - e d - 'Double_t' 0 - ribbonE "
"i - 'Int_t' 0 - count i - 'Int_t' 0 - ribbonCount "
"d - 'Double_t' 0 - gDoca d - 'Double_t' 0 - doca "
"u 'AcdId' - 11 - minDocaId d - 'Double_t' 0 - actDist "
"u 'AcdId' - 11 - maxActDistId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_527_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_527_6_0, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_527_7_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'AcdRecon' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_527_8_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_527_9_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRibbonEnergy",1542,G__reconRootData_rootcint_527_0_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTileCount",1239,G__reconRootData_rootcint_527_1_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRibbonCount",1445,G__reconRootData_rootcint_527_2_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGammaDoca",1178,G__reconRootData_rootcint_527_3_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoca",695,G__reconRootData_rootcint_527_4_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActiveDist",1328,G__reconRootData_rootcint_527_5_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRibbonActiveDist",1932,G__reconRootData_rootcint_527_6_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinDocaId",1160,G__reconRootData_rootcint_527_7_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxActDistId",1471,G__reconRootData_rootcint_527_8_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRibbonActDistId",1781,G__reconRootData_rootcint_527_9_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRowDocaCol",1293,G__reconRootData_rootcint_527_0_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRowDoca",1007,G__reconRootData_rootcint_527_1_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRowDoca",984,G__reconRootData_rootcint_527_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRowActDistCol",1602,G__reconRootData_rootcint_527_3_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRowActDist",1316,G__reconRootData_rootcint_527_4_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRowActDist",1293,G__reconRootData_rootcint_527_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyCol",1224,G__reconRootData_rootcint_527_6_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_527_7_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEnergy",915,G__reconRootData_rootcint_527_8_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIdCol",779,G__reconRootData_rootcint_527_9_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR), G__defined_typename("vector<AcdId>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__reconRootData_rootcint_527_0_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addId",470,G__reconRootData_rootcint_527_1_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AcdId' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_527_2_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'AcdId' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasHit",609,G__reconRootData_rootcint_527_3_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - acdId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nId",283,G__reconRootData_rootcint_527_4_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdTkrIntersection",2137,G__reconRootData_rootcint_527_5_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 0, 1, 1, 1, 0, "u 'AcdTkrIntersection' - 1 - inter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdIntersections",1760,G__reconRootData_rootcint_527_6_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdTkrIntersection",2160,G__reconRootData_rootcint_527_7_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCornerDoca",1312,G__reconRootData_rootcint_527_8_3, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdTkrPoca",1253,G__reconRootData_rootcint_527_9_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrPoca' - 1 - poca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdTkrPoca",1066,G__reconRootData_rootcint_527_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdTkrPoca",1276,G__reconRootData_rootcint_527_1_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdHit",854,G__reconRootData_rootcint_527_2_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 0, 1, 1, 1, 0, "u 'AcdHit' - 1 - poca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdHit",667,G__reconRootData_rootcint_527_3_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdHit",877,G__reconRootData_rootcint_527_4_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdTkrHitPoca",1546,G__reconRootData_rootcint_527_5_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrHitPoca' - 1 - poca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdTkrHitPoca",1359,G__reconRootData_rootcint_527_6_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdTkrHitPoca",1569,G__reconRootData_rootcint_527_7_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdTkrGapPoca",1533,G__reconRootData_rootcint_527_8_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 0, 1, 1, 1, 0, "u 'AcdTkrGapPoca' - 1 - poca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdTkrGapPoca",1346,G__reconRootData_rootcint_527_9_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdTkrGapPoca",1556,G__reconRootData_rootcint_527_0_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdTkrPoint",1388,G__reconRootData_rootcint_527_1_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 0, 1, 1, 1, 0, "u 'AcdTkrPoint' - 1 - poca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdTkrPoint",1201,G__reconRootData_rootcint_527_2_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdTkrPoint",1411,G__reconRootData_rootcint_527_3_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addAcdSplashVar",1477,G__reconRootData_rootcint_527_4_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 0, 1, 1, 1, 0, "u 'AcdSplashVars' - 1 - splashVars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nAcdSplash",993,G__reconRootData_rootcint_527_5_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdSplashVars",1615,G__reconRootData_rootcint_527_6_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkAcdRecon",1277,G__reconRootData_rootcint_527_7_5, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_527_8_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&AcdRecon::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_527_9_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdRecon::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_527_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&AcdRecon::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_527_1_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&AcdRecon::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_527_2_6, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_527_3_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_527_4_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_527_5_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_527_6_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdRecon::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_527_7_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdRecon::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_527_8_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&AcdRecon::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_527_9_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&AcdRecon::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("AcdRecon", 767, G__reconRootData_rootcint_527_0_7, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon), -1, 0, 1, 1, 1, 0, "u 'AcdRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AcdRecon", 893, G__reconRootData_rootcint_527_1_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_527_2_7, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon), -1, 1, 1, 1, 1, 0, "u 'AcdRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalParams(void) {
   /* CalParams */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams));
   G__memfunc_setup("CalParams",884,G__reconRootData_rootcint_532_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalParams",884,G__reconRootData_rootcint_532_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 0, 16, 1, 1, 0, 
"d - 'Double_t' 0 - energy d - 'Double_t' 0 - eneError "
"u 'TVector3' - 0 - centroid d - 'Double_t' 0 - cntdxx "
"d - 'Double_t' 0 - cntdxy d - 'Double_t' 0 - cntdxz "
"d - 'Double_t' 0 - cntdyy d - 'Double_t' 0 - cntdyz "
"d - 'Double_t' 0 - cntdzz u 'TVector3' - 0 - axis "
"d - 'Double_t' 0 - axsdxx d - 'Double_t' 0 - axsdxy "
"d - 'Double_t' 0 - axsdxz d - 'Double_t' 0 - axsdyy "
"d - 'Double_t' 0 - axsdyz d - 'Double_t' 0 - axsdzz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_532_3_0, 121, -1, -1, 0, 16, 1, 1, 0, 
"d - 'Double_t' 0 - energy d - 'Double_t' 0 - eneError "
"u 'TVector3' - 0 - centroid d - 'Double_t' 0 - cntdxx "
"d - 'Double_t' 0 - cntdxy d - 'Double_t' 0 - cntdxz "
"d - 'Double_t' 0 - cntdyy d - 'Double_t' 0 - cntdyz "
"d - 'Double_t' 0 - cntdzz u 'TVector3' - 0 - axis "
"d - 'Double_t' 0 - axsdxx d - 'Double_t' 0 - axsdxy "
"d - 'Double_t' 0 - axsdxz d - 'Double_t' 0 - axsdyy "
"d - 'Double_t' 0 - axsdyz d - 'Double_t' 0 - axsdzz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_532_4_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyErr",1235,G__reconRootData_rootcint_532_5_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentroid",1144,G__reconRootData_rootcint_532_6_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosxPos",1172,G__reconRootData_rootcint_532_7_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPosyPos",1173,G__reconRootData_rootcint_532_8_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxPoszPos",1174,G__reconRootData_rootcint_532_9_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyPosyPos",1174,G__reconRootData_rootcint_532_0_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyPoszPos",1175,G__reconRootData_rootcint_532_1_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getzPoszPos",1176,G__reconRootData_rootcint_532_2_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAxis",725,G__reconRootData_rootcint_532_3_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxDirxDir",1134,G__reconRootData_rootcint_532_4_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxDiryDir",1135,G__reconRootData_rootcint_532_5_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getxDirzDir",1136,G__reconRootData_rootcint_532_6_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyDiryDir",1136,G__reconRootData_rootcint_532_7_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getyDirzDir",1137,G__reconRootData_rootcint_532_8_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getzDirzDir",1138,G__reconRootData_rootcint_532_9_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_532_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_532_1_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_532_2_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalParams' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_532_3_2, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_532_4_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalParams::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_532_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalParams::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_532_6_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalParams::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_532_7_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalParams::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_532_8_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_532_9_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_532_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_532_1_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_532_2_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalParams::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_532_3_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalParams::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_532_4_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalParams::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_532_5_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalParams::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalParams", 884, G__reconRootData_rootcint_532_6_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 0, 1, 1, 1, 0, "u 'CalParams' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalParams", 1010, G__reconRootData_rootcint_532_7_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_532_8_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 1, 1, 1, 1, 0, "u 'CalParams' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalClusterLayerData(void) {
   /* CalClusterLayerData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData));
   G__memfunc_setup("CalClusterLayerData",1897,G__reconRootData_rootcint_533_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalClusterLayerData",1897,G__reconRootData_rootcint_533_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - energy u 'TVector3' - 0 - position "
"u 'TVector3' - 0 - rmsSpread", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_533_3_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - energy u 'TVector3' - 0 - position "
"u 'TVector3' - 0 - rmsSpread", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_533_4_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_533_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsSpread",1233,G__reconRootData_rootcint_533_6_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_533_7_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_533_8_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_533_9_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalClusterLayerData' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_533_0_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_533_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalClusterLayerData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_533_2_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalClusterLayerData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_533_3_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalClusterLayerData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_533_4_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalClusterLayerData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_533_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_533_6_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_533_7_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_533_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_533_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalClusterLayerData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_533_0_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalClusterLayerData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_533_1_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalClusterLayerData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_533_2_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalClusterLayerData::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalClusterLayerData", 1897, G__reconRootData_rootcint_533_3_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData), -1, 0, 1, 1, 1, 0, "u 'CalClusterLayerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalClusterLayerData", 2023, G__reconRootData_rootcint_533_4_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_533_5_2, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData), -1, 1, 1, 1, 1, 0, "u 'CalClusterLayerData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalCluster(void) {
   /* CalCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster));
   G__memfunc_setup("CalCluster",1010,G__reconRootData_rootcint_534_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalCluster",1010,G__reconRootData_rootcint_534_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster), -1, 0, 7, 1, 1, 0, 
"u 'vector<CalClusterLayerData,allocator<CalClusterLayerData> >' 'vector<CalClusterLayerData>' 11 - - u 'CalParams' - 11 - - "
"d - 'Double_t' 0 - rmsLong d - 'Double_t' 0 - rmsLongAsym "
"d - 'Double_t' 0 - rmsTrans i - 'Int_t' 0 - numTruncXtals "
"h - 'UInt_t' 0 - statusBits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_534_3_0, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<CalClusterLayerData,allocator<CalClusterLayerData> >' 'vector<CalClusterLayerData>' 11 - - u 'CalParams' - 11 - - "
"d - 'Double_t' 0 - rmsLong d - 'Double_t' 0 - rmsLongAsym "
"d - 'Double_t' 0 - rmsTrans i - 'Int_t' 0 - numTruncXtals "
"h - 'UInt_t' 0 - statusBits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayer",829,G__reconRootData_rootcint_534_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParams",932,G__reconRootData_rootcint_534_5_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsLong",1026,G__reconRootData_rootcint_534_6_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsLongAsym",1436,G__reconRootData_rootcint_534_7_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRmsTrans",1146,G__reconRootData_rootcint_534_8_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumTruncXtals",1672,G__reconRootData_rootcint_534_9_0, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_534_0_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_534_1_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_534_2_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_534_3_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalCluster' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_534_4_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_534_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalCluster::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_534_6_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCluster::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_534_7_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalCluster::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_534_8_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalCluster::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_534_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_534_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_534_1_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_534_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_534_3_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCluster::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_534_4_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalCluster::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_534_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCluster::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_534_6_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalCluster::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalCluster", 1010, G__reconRootData_rootcint_534_7_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster), -1, 0, 1, 1, 1, 0, "u 'CalCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalCluster", 1136, G__reconRootData_rootcint_534_8_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_534_9_2, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster), -1, 1, 1, 1, 1, 0, "u 'CalCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalCorToolResult(void) {
   /* CalCorToolResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult));
   G__memfunc_setup("CalCorToolResult",1617,G__reconRootData_rootcint_539_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalCorToolResult",1617,G__reconRootData_rootcint_539_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 11 - correctionName h - 'UInt_t' 0 - statusBits "
"d - 'Double_t' 0 - chiSquare u 'CalParams' - 11 - params "
"u 'TObjArray' - 11 - freeAttributes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_539_3_0, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'TString' - 11 - correctionName h - 'UInt_t' 0 - statusBits "
"d - 'Double_t' 0 - chiSquare u 'CalParams' - 11 - params "
"u 'TObjArray' - 11 - freeAttributes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrectionName",1753,G__reconRootData_rootcint_539_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_539_5_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquare",1221,G__reconRootData_rootcint_539_6_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParams",932,G__reconRootData_rootcint_539_7_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFreeAttributes",1769,G__reconRootData_rootcint_539_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_539_9_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_539_0_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_539_1_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalCorToolResult' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_539_2_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult), -1, 1, 1, 1, 4, 0, "u 'CalCorToolResult' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_539_4_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalCorToolResult::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_539_5_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCorToolResult::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_539_6_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalCorToolResult::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_539_7_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalCorToolResult::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_539_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_539_9_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_539_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_539_1_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_539_2_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCorToolResult::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_539_3_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalCorToolResult::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_539_4_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalCorToolResult::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_539_5_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalCorToolResult::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~CalCorToolResult", 1743, G__reconRootData_rootcint_539_6_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalEventEnergy(void) {
   /* CalEventEnergy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy));
   G__memfunc_setup("CalEventEnergy",1404,G__reconRootData_rootcint_540_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalEventEnergy",1404,G__reconRootData_rootcint_540_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy), -1, 0, 3, 1, 1, 0, 
"u 'CalParams' - 11 - params h - 'UInt_t' 0 - statusBits "
"u 'TObjArray' - 11 - toolsResults", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_540_3_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'CalParams' - 11 - params h - 'UInt_t' 0 - statusBits "
"u 'TObjArray' - 11 - toolsResults", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParams",932,G__reconRootData_rootcint_540_4_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_540_5_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getToolsResults",1603,G__reconRootData_rootcint_540_6_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_540_7_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_540_8_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_540_9_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalEventEnergy' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_540_0_1, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_540_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalEventEnergy::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_540_2_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalEventEnergy::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_540_3_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalEventEnergy::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_540_4_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalEventEnergy::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_540_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_540_6_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_540_7_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_540_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_540_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalEventEnergy::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_540_0_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalEventEnergy::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_540_1_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalEventEnergy::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_540_2_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalEventEnergy::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~CalEventEnergy", 1530, G__reconRootData_rootcint_540_3_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalRangeRecData(void) {
   /* CalRangeRecData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData));
   G__memfunc_setup("CalRangeRecData",1425,G__reconRootData_rootcint_546_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalRangeRecData",1425,G__reconRootData_rootcint_546_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData), -1, 0, 4, 1, 1, 0, 
"c - 'Char_t' 0 - rangeP d - 'Double_t' 0 - eneP "
"c - 'Char_t' 0 - rangeM d - 'Double_t' 0 - eneM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_546_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_546_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_546_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalRangeRecData' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_546_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_546_7_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_546_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_546_9_0, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'CalXtalId::XtalFace' 'CalXtalId::XtalFace' 0 - face", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRange",813,G__reconRootData_rootcint_546_0_1, 99, -1, G__defined_typename("Char_t"), 0, 1, 1, 1, 8, "u 'CalXtalId::XtalFace' 'CalXtalId::XtalFace' 0 - face", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_546_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalRangeRecData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_546_2_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRangeRecData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_546_3_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalRangeRecData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_546_4_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalRangeRecData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_546_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_546_6_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_546_7_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_546_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_546_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRangeRecData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_546_0_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalRangeRecData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_546_1_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRangeRecData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_546_2_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalRangeRecData::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalRangeRecData", 1425, G__reconRootData_rootcint_546_3_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData), -1, 0, 1, 1, 1, 0, "u 'CalRangeRecData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalRangeRecData", 1551, G__reconRootData_rootcint_546_4_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_546_5_2, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData), -1, 1, 1, 1, 1, 0, "u 'CalRangeRecData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalXtalRecData(void) {
   /* CalXtalRecData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData));
   G__memfunc_setup("CalXtalRecData",1341,G__reconRootData_rootcint_547_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_547_2_0, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'CalXtalId::CalTrigMode' 'CalXtalId::CalTrigMode' 0 - m u 'CalXtalId' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_547_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_547_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_547_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalXtalRecData' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_547_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMode",709,G__reconRootData_rootcint_547_7_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalIdcLcLCalTrigMode), G__defined_typename("CalXtalId::CalTrigMode"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPackedId",1077,G__reconRootData_rootcint_547_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalId), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRangeRecData",1450,G__reconRootData_rootcint_547_9_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CalRangeRecData' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRange",813,G__reconRootData_rootcint_547_0_1, 99, -1, G__defined_typename("Char_t"), 0, 2, 1, 1, 8, 
"r - 'UShort_t' 0 - readoutIndex u 'CalXtalId::XtalFace' 'CalXtalId::XtalFace' 0 - face", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_547_1_1, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"r - 'UShort_t' 0 - readoutIndex u 'CalXtalId::XtalFace' 'CalXtalId::XtalFace' 0 - face", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_547_2_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_547_3_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeRecData",1473,G__reconRootData_rootcint_547_4_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData), -1, 0, 1, 1, 1, 9, "r - 'UShort_t' 0 - readoutIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergySelectedRange",2240,G__reconRootData_rootcint_547_5_1, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'CalXtalId::AdcRange' 'CalXtalId::AdcRange' 0 - range u 'CalXtalId::XtalFace' 'CalXtalId::XtalFace' 0 - face", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_547_6_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalXtalRecData::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_547_7_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalXtalRecData::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_547_8_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalXtalRecData::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_547_9_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalXtalRecData::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_547_0_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_547_1_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_547_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_547_3_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_547_4_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalXtalRecData::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_547_5_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalXtalRecData::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_547_6_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalXtalRecData::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_547_7_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalXtalRecData::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalXtalRecData", 1341, G__reconRootData_rootcint_547_8_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData), -1, 0, 1, 1, 1, 0, "u 'CalXtalRecData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalXtalRecData", 1467, G__reconRootData_rootcint_547_9_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_547_0_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData), -1, 1, 1, 1, 1, 0, "u 'CalXtalRecData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalMipTrack(void) {
   /* CalMipTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack));
   G__memfunc_setup("CalMipTrack",1067,G__reconRootData_rootcint_552_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalMipTrack",1067,G__reconRootData_rootcint_552_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack), -1, 0, 10, 1, 1, 0, 
"u 'TVector3' - 0 - point u 'TVector3' - 0 - dir "
"d - 'Double_t' 0 - d2C d - 'Double_t' 0 - d2Edge "
"i - 'Int_t' 0 - calEdge d - 'Double_t' 0 - arcLen "
"d - 'Double_t' 0 - ecor d - 'Double_t' 0 - ecorRms "
"d - 'Double_t' 0 - chi2 d - 'Double_t' 0 - erm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPoint",854,G__reconRootData_rootcint_552_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDir",619,G__reconRootData_rootcint_552_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD2C",517,G__reconRootData_rootcint_552_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d2C", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setD2Edge",823,G__reconRootData_rootcint_552_6_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d2Edge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalEdge",977,G__reconRootData_rootcint_552_7_0, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - calEdge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArcLen",897,G__reconRootData_rootcint_552_8_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - arcLen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcor",725,G__reconRootData_rootcint_552_9_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ecor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEcorRms",1031,G__reconRootData_rootcint_552_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ecorRms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__reconRootData_rootcint_552_1_1, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErm",624,G__reconRootData_rootcint_552_2_1, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - erm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoint",842,G__reconRootData_rootcint_552_3_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDir",607,G__reconRootData_rootcint_552_4_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getD2C",505,G__reconRootData_rootcint_552_5_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getD2Edge",811,G__reconRootData_rootcint_552_6_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalEdge",965,G__reconRootData_rootcint_552_7_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArcLen",885,G__reconRootData_rootcint_552_8_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEcor",713,G__reconRootData_rootcint_552_9_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEcorRms",1019,G__reconRootData_rootcint_552_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__reconRootData_rootcint_552_1_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErm",612,G__reconRootData_rootcint_552_2_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__reconRootData_rootcint_552_3_2, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_552_4_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_552_5_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'CalMipTrack' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_552_6_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalMipTrack::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_552_7_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalMipTrack::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_552_8_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalMipTrack::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_552_9_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalMipTrack::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_552_0_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_552_1_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_552_2_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_552_3_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_552_4_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalMipTrack::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_552_5_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalMipTrack::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_552_6_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalMipTrack::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_552_7_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalMipTrack::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalMipTrack", 1067, G__reconRootData_rootcint_552_8_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack), -1, 0, 1, 1, 1, 0, "u 'CalMipTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalMipTrack", 1193, G__reconRootData_rootcint_552_9_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_552_0_4, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack), -1, 1, 1, 1, 1, 0, "u 'CalMipTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGcrXtal(void) {
   /* GcrXtal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal));
   G__memfunc_setup("GcrXtal",693,G__reconRootData_rootcint_553_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GcrXtal",693,G__reconRootData_rootcint_553_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal), -1, 0, 6, 1, 1, 0, 
"u 'CalXtalId' - 0 - xtalId d - 'Double_t' 0 - pathLength "
"d - 'Double_t' 0 - closestFaceDist i - 'Int_t' 0 - crossedFaces "
"u 'TVector3' - 0 - entryPoint u 'TVector3' - 0 - exitPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXtalId",914,G__reconRootData_rootcint_553_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CalXtalId' - 0 - xtalId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPathLength",1339,G__reconRootData_rootcint_553_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pathLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClosestFaceDist",1836,G__reconRootData_rootcint_553_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - closestFaceDist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCrossedFaces",1537,G__reconRootData_rootcint_553_6_0, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - crossedFaces", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEntryPoint",1384,G__reconRootData_rootcint_553_7_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - entryPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setExitPoint",1264,G__reconRootData_rootcint_553_8_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - exitPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXtalId",902,G__reconRootData_rootcint_553_9_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalId), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPathLength",1327,G__reconRootData_rootcint_553_0_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClosestFaceDist",1824,G__reconRootData_rootcint_553_1_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCrossedFaces",1525,G__reconRootData_rootcint_553_2_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEntryPoint",1372,G__reconRootData_rootcint_553_3_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getExitPoint",1252,G__reconRootData_rootcint_553_4_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__reconRootData_rootcint_553_5_1, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_553_6_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&GcrXtal::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_553_7_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrXtal::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_553_8_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&GcrXtal::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_553_9_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&GcrXtal::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_553_0_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_553_1_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_553_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_553_3_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_553_4_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrXtal::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_553_5_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&GcrXtal::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_553_6_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrXtal::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_553_7_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&GcrXtal::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("GcrXtal", 693, G__reconRootData_rootcint_553_8_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal), -1, 0, 1, 1, 1, 0, "u 'GcrXtal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GcrXtal", 819, G__reconRootData_rootcint_553_9_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_553_0_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal), -1, 1, 1, 1, 1, 0, "u 'GcrXtal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGcrTrack(void) {
   /* GcrTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack));
   G__memfunc_setup("GcrTrack",785,G__reconRootData_rootcint_554_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GcrTrack",785,G__reconRootData_rootcint_554_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack), -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 0 - direction u 'TVector3' - 0 - dirError "
"u 'TVector3' - 0 - calEntryPoint u 'TVector3' - 0 - calExitPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDirection",1261,G__reconRootData_rootcint_554_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDirError",1141,G__reconRootData_rootcint_554_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - dirError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalEntryPoint",1656,G__reconRootData_rootcint_554_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - calEntryPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCalExitPoint",1536,G__reconRootData_rootcint_554_6_0, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - calExitPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,G__reconRootData_rootcint_554_7_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirError",1129,G__reconRootData_rootcint_554_8_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalEntryPoint",1644,G__reconRootData_rootcint_554_9_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalExitPoint",1524,G__reconRootData_rootcint_554_0_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_554_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&GcrTrack::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_554_2_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrTrack::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_554_3_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&GcrTrack::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_554_4_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&GcrTrack::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_554_5_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_554_6_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_554_7_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_554_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_554_9_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrTrack::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_554_0_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&GcrTrack::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_554_1_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&GcrTrack::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_554_2_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&GcrTrack::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("GcrTrack", 785, G__reconRootData_rootcint_554_3_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack), -1, 0, 1, 1, 1, 0, "u 'GcrTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GcrTrack", 911, G__reconRootData_rootcint_554_4_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_554_5_2, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack), -1, 1, 1, 1, 1, 0, "u 'GcrTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalRecon(void) {
   /* CalRecon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon));
   G__memfunc_setup("CalRecon",775,G__reconRootData_rootcint_555_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_555_2_0, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_555_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_555_4_0, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_555_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'CalRecon' - 1 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_555_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCalEventEnergyCol",2010,G__reconRootData_rootcint_555_7_0, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalClusterCol",1616,G__reconRootData_rootcint_555_8_0, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalXtalRecCol",1569,G__reconRootData_rootcint_555_9_0, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalMipTrackCol",1673,G__reconRootData_rootcint_555_0_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGcrXtalCol",1299,G__reconRootData_rootcint_555_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGcrTrack",1105,G__reconRootData_rootcint_555_2_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCalEventEnergy",1701,G__reconRootData_rootcint_555_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CalEventEnergy' - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCalCluster",1307,G__reconRootData_rootcint_555_4_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CalCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addXtalRecData",1366,G__reconRootData_rootcint_555_5_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CalXtalRecData' - 0 - xtal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCalMipTrack",1364,G__reconRootData_rootcint_555_6_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'CalMipTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addGcrXtal",990,G__reconRootData_rootcint_555_7_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GcrXtal' - 0 - gcrXtal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addGcrTrack",1082,G__reconRootData_rootcint_555_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GcrTrack' - 0 - gcrTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_555_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CalRecon::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_555_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRecon::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_555_1_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CalRecon::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_555_2_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CalRecon::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_555_3_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_555_4_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_555_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_555_6_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_555_7_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRecon::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_555_8_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalRecon::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_555_9_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CalRecon::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_555_0_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CalRecon::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CalRecon", 775, G__reconRootData_rootcint_555_1_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon), -1, 0, 1, 1, 1, 0, "u 'CalRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalRecon", 901, G__reconRootData_rootcint_555_2_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_555_3_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon), -1, 1, 1, 1, 1, 0, "u 'CalRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrCluster(void) {
   /* TkrCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster));
   G__memfunc_setup("TkrCluster",1043,G__reconRootData_rootcint_571_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TkrCluster",1043,G__reconRootData_rootcint_571_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 0, 8, 1, 1, 0, 
"u 'commonRootData::TkrId' - 0 - tkrId h - 'UInt_t' 0 - istrip0 "
"h - 'UInt_t' 0 - istripf u 'TVector3' - 11 - position "
"h - 'UInt_t' 0 - rawToT f - 'Float_t' 0 - ToT "
"h - 'UInt_t' 0 - status h - 'UInt_t' 0 - nBad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_571_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_571_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_571_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrCluster' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_571_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTkrId",798,G__reconRootData_rootcint_571_7_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstStrip",1370,G__reconRootData_rootcint_571_8_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastStrip",1254,G__reconRootData_rootcint_571_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getToT",599,G__reconRootData_rootcint_571_0_1, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBad",661,G__reconRootData_rootcint_571_1_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrip",850,G__reconRootData_rootcint_571_2_1, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__reconRootData_rootcint_571_3_1, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_571_4_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatusWord",1376,G__reconRootData_rootcint_571_5_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlane",816,G__reconRootData_rootcint_571_6_1, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayer",829,G__reconRootData_rootcint_571_7_1, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hitFlagged",1007,G__reconRootData_rootcint_571_8_1, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRawToT",897,G__reconRootData_rootcint_571_9_1, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMips",729,G__reconRootData_rootcint_571_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnd",599,G__reconRootData_rootcint_571_1_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlaneOffset",1431,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayerOffset",1444,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_571_4_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrCluster::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_571_5_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrCluster::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_571_6_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrCluster::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_571_7_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrCluster::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_571_8_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_571_9_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_571_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_571_1_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_571_2_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrCluster::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_571_3_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrCluster::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_571_4_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrCluster::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_571_5_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrCluster::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TkrCluster", 1043, G__reconRootData_rootcint_571_6_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 0, 1, 1, 1, 0, "u 'TkrCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TkrCluster", 1169, G__reconRootData_rootcint_571_7_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_571_8_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 1, 1, 1, 1, 0, "u 'TkrCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrTrackHit(void) {
   /* TkrTrackHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit));
   G__memfunc_setup("TkrTrackHit",1099,G__reconRootData_rootcint_573_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TkrTrackHit",1099,G__reconRootData_rootcint_573_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit), -1, 0, 8, 1, 1, 0, 
"U 'TkrCluster' - 0 - cluster u 'commonRootData::TkrId' - 0 - tkrID "
"d - 'Double32_t' 10 - hitZ d - 'Double32_t' 10 - hitEnergy "
"d - 'Double32_t' 10 - hitRadLen d - 'Double32_t' 10 - hitActDist "
"d - 'Double32_t' 10 - hitChiFilter d - 'Double32_t' 10 - hitChiSmooth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_573_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_573_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_573_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrTrackHit' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_573_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initializeInfo",1470,G__reconRootData_rootcint_573_7_0, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TkrCluster' - 0 - cluster u 'commonRootData::TkrId' - 0 - tkrID "
"d - 'Double32_t' 10 - hitZ d - 'Double32_t' 10 - hitEnergy "
"d - 'Double32_t' 10 - hitRadLen d - 'Double32_t' 10 - hitActDist "
"d - 'Double32_t' 10 - hitChiFilter d - 'Double32_t' 10 - hitChiSmooth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initializeHits",1482,G__reconRootData_rootcint_573_8_0, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'TkrTrackParams' - 11 - meas u 'TkrTrackParams' - 11 - pred "
"u 'TkrTrackParams' - 11 - fit u 'TkrTrackParams' - 11 - smooth "
"u 'TkrTrackParams' - 11 - material", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_573_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validCluster",1266,G__reconRootData_rootcint_573_0_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hitUsedOnFit",1206,G__reconRootData_rootcint_573_1_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validMeasuredHit",1643,G__reconRootData_rootcint_573_2_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validPredictedHit",1737,G__reconRootData_rootcint_573_3_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validFilteredHit",1636,G__reconRootData_rootcint_573_4_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validSmoothedHit",1656,G__reconRootData_rootcint_573_5_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("validMaterial",1343,G__reconRootData_rootcint_573_6_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upwards",774,G__reconRootData_rootcint_573_7_1, 103, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterPtr",1368,G__reconRootData_rootcint_573_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZPlane",906,G__reconRootData_rootcint_573_9_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_573_0_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRadLen",886,G__reconRootData_rootcint_573_1_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActiveDist",1328,G__reconRootData_rootcint_573_2_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquareFilter",1835,G__reconRootData_rootcint_573_3_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquareRevFit",1813,G__reconRootData_rootcint_573_4_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquareSmooth",1855,G__reconRootData_rootcint_573_5_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkrId",798,G__reconRootData_rootcint_573_6_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamIndex",1321,G__reconRootData_rootcint_573_7_2, 105, -1, -1, 0, 2, 1, 1, 9, 
"i 'TkrTrackHit::SSDDirection' - 0 - meas i 'TkrTrackParams::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamIndex",1321,G__reconRootData_rootcint_573_8_2, 105, -1, -1, 0, 2, 1, 1, 0, 
"i 'TkrTrackHit::SSDDirection' - 0 - meas i 'TkrTrackParams::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoint",842,G__reconRootData_rootcint_573_9_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPoint",842,G__reconRootData_rootcint_573_0_3, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 1, 1, 1, 0, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,G__reconRootData_rootcint_573_1_3, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,G__reconRootData_rootcint_573_2_3, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 1, 1, 1, 0, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeasuredPosition",1995,G__reconRootData_rootcint_573_3_3, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeasuredSlope",1657,G__reconRootData_rootcint_573_4_3, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNonMeasuredPosition",2294,G__reconRootData_rootcint_573_5_3, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNonMeasuredSlope",1956,G__reconRootData_rootcint_573_6_3, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackParams",1433,G__reconRootData_rootcint_573_7_3, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 1, 1, 1, 9, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackParams",1433,G__reconRootData_rootcint_573_8_3, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 1, 1, 1, 0, "i 'TkrTrackHit::ParamType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterPtr",1380,G__reconRootData_rootcint_573_9_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TkrCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTkrID",778,G__reconRootData_rootcint_573_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'commonRootData::TkrId' - 1 - tkrID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__reconRootData_rootcint_573_1_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZPlane",918,G__reconRootData_rootcint_573_2_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRadLen",898,G__reconRootData_rootcint_573_3_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - rl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActiveDist",1340,G__reconRootData_rootcint_573_4_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareFilter",1847,G__reconRootData_rootcint_573_5_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareRevFit",1825,G__reconRootData_rootcint_573_6_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareSmooth",1867,G__reconRootData_rootcint_573_7_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatusBit",1263,G__reconRootData_rootcint_573_8_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - bitToSet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearStatusBit",1450,G__reconRootData_rootcint_573_9_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - bitToClear", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCoordinate",1352,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double32_t"), 0, 2, 1, 4, 9, 
"u 'TkrTrackParams' - 11 - params i - - 0 - coord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCoordinate",1352,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double32_t"), 0, 2, 1, 4, 0, 
"u 'TkrTrackParams' - 11 - params i - - 0 - coord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_573_2_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrTrackHit::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_573_3_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackHit::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_573_4_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrTrackHit::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_573_5_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrTrackHit::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_573_6_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_573_7_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_573_8_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_573_9_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_573_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackHit::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_573_1_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrackHit::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_573_2_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrackHit::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_573_3_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrackHit::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TkrTrackHit", 1099, G__reconRootData_rootcint_573_4_6, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit), -1, 0, 1, 1, 1, 0, "u 'TkrTrackHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TkrTrackHit", 1225, G__reconRootData_rootcint_573_5_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_573_6_6, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit), -1, 1, 1, 1, 1, 0, "u 'TkrTrackHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrTrack(void) {
   /* TkrTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack));
   G__memfunc_setup("TkrTrack",806,G__reconRootData_rootcint_577_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_577_2_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_577_3_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_577_4_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrTrack' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_577_5_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_577_6_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquareFilter",1835,G__reconRootData_rootcint_577_7_0, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquareSmooth",1855,G__reconRootData_rootcint_577_8_0, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNDegreesOfFreedom",1988,G__reconRootData_rootcint_577_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQuality",1065,G__reconRootData_rootcint_577_0_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScatter",1046,G__reconRootData_rootcint_577_1_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getKalThetaMS",1262,G__reconRootData_rootcint_577_2_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getKalEnergy",1218,G__reconRootData_rootcint_577_3_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getKalEnergyError",1740,G__reconRootData_rootcint_577_4_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumGaps",1019,G__reconRootData_rootcint_577_5_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumXGaps",1107,G__reconRootData_rootcint_577_6_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumYGaps",1108,G__reconRootData_rootcint_577_7_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumXFirstGaps",1627,G__reconRootData_rootcint_577_8_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumYFirstGaps",1628,G__reconRootData_rootcint_577_9_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInitialPosition",1887,G__reconRootData_rootcint_577_0_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInitialDirection",1963,G__reconRootData_rootcint_577_1_2, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInitialEnergy",1652,G__reconRootData_rootcint_577_2_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumSegmentPoints",1984,G__reconRootData_rootcint_577_3_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chiSquareSegment",1656,G__reconRootData_rootcint_577_4_2, 100, -1, G__defined_typename("Double32_t"), 0, 1, 1, 1, 8, "d - 'Double32_t' 0 0. penaltyGap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumXHits",1120,G__reconRootData_rootcint_577_5_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumYHits",1121,G__reconRootData_rootcint_577_6_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumFitHits",1323,G__reconRootData_rootcint_577_7_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkrCalRadlen",1495,G__reconRootData_rootcint_577_8_2, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iterator",842,G__reconRootData_rootcint_577_9_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TIterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__reconRootData_rootcint_577_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialPosition",1899,G__reconRootData_rootcint_577_1_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialDirection",1975,G__reconRootData_rootcint_577_2_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialEnergy",1664,G__reconRootData_rootcint_577_3_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareFilter",1847,G__reconRootData_rootcint_577_4_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquareSmooth",1867,G__reconRootData_rootcint_577_5_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNDegreesOfFreedom",2000,G__reconRootData_rootcint_577_6_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSqSegment",1527,G__reconRootData_rootcint_577_7_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__reconRootData_rootcint_577_8_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScatter",1058,G__reconRootData_rootcint_577_9_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKalThetaMS",1274,G__reconRootData_rootcint_577_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKalEnergy",1230,G__reconRootData_rootcint_577_1_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKalEnergyError",1752,G__reconRootData_rootcint_577_2_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumXGaps",1119,G__reconRootData_rootcint_577_3_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumYGaps",1120,G__reconRootData_rootcint_577_4_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumXFirstGaps",1639,G__reconRootData_rootcint_577_5_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumYFirstGaps",1640,G__reconRootData_rootcint_577_6_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumSegmentPoints",1996,G__reconRootData_rootcint_577_7_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumXHits",1132,G__reconRootData_rootcint_577_8_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumYHits",1133,G__reconRootData_rootcint_577_9_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTkrCalRadLen",1475,G__reconRootData_rootcint_577_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatusBit",1263,G__reconRootData_rootcint_577_1_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearStatusBits",1565,G__reconRootData_rootcint_577_2_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearEnergyStatusBits",2183,G__reconRootData_rootcint_577_3_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__reconRootData_rootcint_577_4_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - iHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_577_5_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrTrack::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_577_6_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrack::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_577_7_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrTrack::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_577_8_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrTrack::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_577_9_5, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_577_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_577_1_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_577_2_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_577_3_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrack::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_577_4_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrack::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_577_5_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrTrack::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_577_6_6, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrTrack::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TkrTrack", 932, G__reconRootData_rootcint_577_7_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrVertex(void) {
   /* TkrVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex));
   G__memfunc_setup("TkrVertex",943,G__reconRootData_rootcint_579_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_579_2_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_579_3_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_579_4_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrVertex' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_579_5_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getStatusBits",1366,G__reconRootData_rootcint_579_6_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChiSquare",1221,G__reconRootData_rootcint_579_7_0, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQuality",1065,G__reconRootData_rootcint_579_8_0, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_579_9_0, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirection",1249,G__reconRootData_rootcint_579_0_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__reconRootData_rootcint_579_1_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexParams",1570,G__reconRootData_rootcint_579_2_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddedRadLen",1352,G__reconRootData_rootcint_579_3_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkr1ArcLen",1239,G__reconRootData_rootcint_579_4_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkr2ArcLen",1240,G__reconRootData_rootcint_579_5_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDOCA",599,G__reconRootData_rootcint_579_6_1, 100, -1, G__defined_typename("Double32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkrId",798,G__reconRootData_rootcint_579_7_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__reconRootData_rootcint_579_8_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDirection",1261,G__reconRootData_rootcint_579_9_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__reconRootData_rootcint_579_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquare",1233,G__reconRootData_rootcint_579_1_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__reconRootData_rootcint_579_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddedRadLen",1364,G__reconRootData_rootcint_579_3_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTkr1ArcLen",1251,G__reconRootData_rootcint_579_4_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTkr2ArcLen",1252,G__reconRootData_rootcint_579_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDOCA",611,G__reconRootData_rootcint_579_6_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTkrID",778,G__reconRootData_rootcint_579_7_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'commonRootData::TkrId' - 1 - tkrID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParams",944,G__reconRootData_rootcint_579_8_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TkrTrackParams' - 1 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatusBit",1263,G__reconRootData_rootcint_579_9_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearStatusBits",1565,G__reconRootData_rootcint_579_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumTracks",1240,G__reconRootData_rootcint_579_1_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__reconRootData_rootcint_579_2_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__reconRootData_rootcint_579_3_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_579_4_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrVertex::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_579_5_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrVertex::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_579_6_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrVertex::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_579_7_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrVertex::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_579_8_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_579_9_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_579_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_579_1_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_579_2_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrVertex::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_579_3_4, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrVertex::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_579_4_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrVertex::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_579_5_4, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrVertex::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TkrVertex", 1069, G__reconRootData_rootcint_579_6_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrDiagnostics(void) {
   /* TkrDiagnostics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics));
   G__memfunc_setup("TkrDiagnostics",1449,G__reconRootData_rootcint_581_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TkrDiagnostics",1449,G__reconRootData_rootcint_581_2_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics), -1, 0, 8, 1, 1, 0, 
"i - - 0 - numClusters i - - 0 - numVecPoints "
"i - - 0 - numVecLinks i - - 0 - nLinksNonZeroLayers "
"i - - 0 - aveNumLinksLayer d - - 0 - numLinkCombinations "
"i - - 0 - numTrackElements i - - 0 - numTkrTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_581_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_581_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ievent h - 'UInt_t' 0 - rank "
"f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_581_5_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TkrDiagnostics' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_581_6_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initializeInfo",1470,G__reconRootData_rootcint_581_7_0, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - numClusters i - - 0 - numVecPoints "
"i - - 0 - numVecLinks i - - 0 - nLinksNonZeroLayers "
"i - - 0 - aveNumLinksLayer d - - 0 - numLinkCombinations "
"i - - 0 - numTrackElements i - - 0 - numTkrTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumClusters",1477,G__reconRootData_rootcint_581_8_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumVecPoints",1547,G__reconRootData_rootcint_581_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumVecLinks",1423,G__reconRootData_rootcint_581_0_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnLinksNonZeroLayers",2282,G__reconRootData_rootcint_581_1_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAveNumLinksLayer",1930,G__reconRootData_rootcint_581_2_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumLinkCombinations",2276,G__reconRootData_rootcint_581_3_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumTrackElements",1954,G__reconRootData_rootcint_581_4_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumTkrTracks",1545,G__reconRootData_rootcint_581_5_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_581_6_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrDiagnostics::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_581_7_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrDiagnostics::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_581_8_1, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrDiagnostics::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_581_9_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrDiagnostics::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_581_0_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_581_1_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_581_2_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_581_3_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_581_4_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrDiagnostics::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_581_5_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrDiagnostics::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_581_6_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrDiagnostics::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_581_7_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrDiagnostics::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TkrDiagnostics", 1449, G__reconRootData_rootcint_581_8_2, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics), -1, 0, 1, 1, 1, 0, "u 'TkrDiagnostics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TkrDiagnostics", 1575, G__reconRootData_rootcint_581_9_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_581_0_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics), -1, 1, 1, 1, 1, 0, "u 'TkrDiagnostics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrRecon(void) {
   /* TkrRecon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon));
   G__memfunc_setup("TkrRecon",808,G__reconRootData_rootcint_582_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_582_2_0, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanUp",680,G__reconRootData_rootcint_582_3_0, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrRecon::CleanUp), 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_582_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_582_5_0, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_582_6_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TkrRecon' - 1 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_582_7_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getClusterCol",1344,G__reconRootData_rootcint_582_8_0, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCluster",1035,G__reconRootData_rootcint_582_9_0, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TkrCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackCol",1107,G__reconRootData_rootcint_582_0_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__reconRootData_rootcint_582_1_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexCol",1244,G__reconRootData_rootcint_582_2_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addVertex",935,G__reconRootData_rootcint_582_3_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TkrVertex' - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nCluster",848,G__reconRootData_rootcint_582_4_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTrack",611,G__reconRootData_rootcint_582_5_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nVertex",748,G__reconRootData_rootcint_582_6_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__reconRootData_rootcint_582_7_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__reconRootData_rootcint_582_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__reconRootData_rootcint_582_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiagnostics",1464,G__reconRootData_rootcint_582_0_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDiagnostics",1441,G__reconRootData_rootcint_582_1_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TkrDiagnostics' - 0 - diagnostics", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_582_2_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TkrRecon::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_582_3_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrRecon::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_582_4_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TkrRecon::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_582_5_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TkrRecon::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_582_6_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_582_7_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_582_8_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_582_9_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_582_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrRecon::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_582_1_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrRecon::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_582_2_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TkrRecon::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_582_3_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TkrRecon::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TkrRecon", 808, G__reconRootData_rootcint_582_4_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon), -1, 0, 1, 1, 1, 0, "u 'TkrRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TkrRecon", 934, G__reconRootData_rootcint_582_5_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_582_6_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon), -1, 1, 1, 1, 1, 0, "u 'TkrRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreconRootData(void) {
   /* reconRootData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootData));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreconRootDatacLcLTaggerCluster(void) {
   /* reconRootData::TaggerCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster));
   G__memfunc_setup("TaggerCluster",1340,G__reconRootData_rootcint_585_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_585_2_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_585_3_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_585_4_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pos d - 'Double_t' 0 - pulseHeight "
"d - 'Double_t' 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initXyz",767,G__reconRootData_rootcint_585_5_0, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__reconRootData_rootcint_585_6_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosition",1173,G__reconRootData_rootcint_585_7_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseHeight",1442,G__reconRootData_rootcint_585_8_0, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModuleId",1107,G__reconRootData_rootcint_585_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayerId",1002,G__reconRootData_rootcint_585_0_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHighestHit",1329,G__reconRootData_rootcint_585_1_1, 117, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHighestHit",1341,G__reconRootData_rootcint_585_2_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'commonRootData::TaggerHit' - 11 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__reconRootData_rootcint_585_3_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__reconRootData_rootcint_585_4_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__reconRootData_rootcint_585_5_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__reconRootData_rootcint_585_6_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaggerHitCol",1501,G__reconRootData_rootcint_585_7_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaggerHit",1215,G__reconRootData_rootcint_585_8_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - ind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTaggerHit",1192,G__reconRootData_rootcint_585_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit), -1, 0, 6, 1, 1, 0, 
"h - 'UInt_t' 0 - moduleId h - 'UInt_t' 0 - layerId "
"h - 'UInt_t' 0 - stripId d - 'Double_t' 0 - pulseHgt "
"d - 'Double_t' 0 - sigma g - 'Bool_t' 0 - isPedSub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_585_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_585_1_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'reconRootData::TaggerCluster' - 11 - - u 'string' - 11 \"\" name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_585_2_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&reconRootData::TaggerCluster::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_585_3_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::TaggerCluster::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_585_4_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&reconRootData::TaggerCluster::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_585_5_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&reconRootData::TaggerCluster::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_585_6_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_585_7_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_585_8_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_585_9_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_585_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::TaggerCluster::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_585_1_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&reconRootData::TaggerCluster::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_585_2_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::TaggerCluster::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_585_3_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&reconRootData::TaggerCluster::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TaggerCluster", 1340, G__reconRootData_rootcint_585_4_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster), -1, 0, 1, 1, 1, 0, "u 'reconRootData::TaggerCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaggerCluster", 1466, G__reconRootData_rootcint_585_5_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_585_6_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster), -1, 1, 1, 1, 1, 0, "u 'reconRootData::TaggerCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreconRootDatacLcLAdfRecon(void) {
   /* reconRootData::AdfRecon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon));
   G__memfunc_setup("AdfRecon",770,G__reconRootData_rootcint_588_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_588_2_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_588_3_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initEventNumber",1567,G__reconRootData_rootcint_588_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - evtNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initSpillNumber",1569,G__reconRootData_rootcint_588_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - spillNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initNmodule",1160,G__reconRootData_rootcint_588_6_0, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventNumber",1451,G__reconRootData_rootcint_588_7_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpillNumber",1453,G__reconRootData_rootcint_588_8_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNmodule",1044,G__reconRootData_rootcint_588_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initNumHighestCluster",2194,G__reconRootData_rootcint_588_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumHighestCluster",2078,G__reconRootData_rootcint_588_1_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initNumCluster",1478,G__reconRootData_rootcint_588_2_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - l h - 'UInt_t' 0 - m "
"h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumCluster",1362,G__reconRootData_rootcint_588_3_1, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - l h - 'UInt_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initXyz",767,G__reconRootData_rootcint_588_4_1, 121, -1, -1, 0, 4, 1, 1, 0, 
"D - 'Double_t' 10 - x D - 'Double_t' 10 - y "
"D - 'Double_t' 10 - z h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__reconRootData_rootcint_588_5_1, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__reconRootData_rootcint_588_6_1, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__reconRootData_rootcint_588_7_1, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__reconRootData_rootcint_588_8_1, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPx",520,G__reconRootData_rootcint_588_9_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPy",521,G__reconRootData_rootcint_588_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPz",522,G__reconRootData_rootcint_588_1_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initPhi",725,G__reconRootData_rootcint_588_2_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - in d - 'Double_t' 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhiIn",792,G__reconRootData_rootcint_588_3_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhiOut",921,G__reconRootData_rootcint_588_4_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initThetaPhi",1227,G__reconRootData_rootcint_588_5_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTheta",822,G__reconRootData_rootcint_588_6_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaPhi",1099,G__reconRootData_rootcint_588_7_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEnergy",1054,G__reconRootData_rootcint_588_8_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - eRec d - 'Double_t' 0 - eCorr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReconstructedEnergy",2319,G__reconRootData_rootcint_588_9_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrectedEnergy",1861,G__reconRootData_rootcint_588_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initError",958,G__reconRootData_rootcint_588_1_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - eRecErr d - 'Double_t' 0 - eCorrErr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrorReconstructedEnergy",2841,G__reconRootData_rootcint_588_2_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrorCorrectedEnergy",2383,G__reconRootData_rootcint_588_3_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaggerClusterCol",1946,G__reconRootData_rootcint_588_4_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaggerCluster",1660,G__reconRootData_rootcint_588_5_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - ind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTaggerCluster",1637,G__reconRootData_rootcint_588_6_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'reconRootData::TaggerCluster' - 0 - clus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQdcHitCol",1179,G__reconRootData_rootcint_588_7_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQdcHit",893,G__reconRootData_rootcint_588_8_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLQdcHit), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - ind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addQdcHit",870,G__reconRootData_rootcint_588_9_3, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLQdcHit), -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - channel d - 'Double_t' 0 - pulseHgt "
"h - 'UInt_t' 0 - module d - 'Double_t' 0 - sigma "
"g - 'Bool_t' 0 - isPedSub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalerHitCol",1501,G__reconRootData_rootcint_588_0_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalerHit",1215,G__reconRootData_rootcint_588_1_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLScalerHit), -1, 0, 1, 1, 1, 9, "h - 'UInt_t' 0 - ind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addScalerHit",1192,G__reconRootData_rootcint_588_2_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLScalerHit), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - chan h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_588_3_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_588_4_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'reconRootData::AdfRecon' - 11 - - u 'string' - 11 \"\" name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_588_5_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&reconRootData::AdfRecon::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_588_6_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::AdfRecon::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_588_7_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&reconRootData::AdfRecon::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_588_8_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&reconRootData::AdfRecon::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_588_9_4, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_588_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_588_1_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_588_2_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_588_3_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::AdfRecon::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_588_4_5, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&reconRootData::AdfRecon::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_588_5_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&reconRootData::AdfRecon::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_588_6_5, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&reconRootData::AdfRecon::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("AdfRecon", 770, G__reconRootData_rootcint_588_7_5, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon), -1, 0, 1, 1, 1, 0, "u 'reconRootData::AdfRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AdfRecon", 896, G__reconRootData_rootcint_588_8_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_588_9_5, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon), -1, 1, 1, 1, 1, 0, "u 'reconRootData::AdfRecon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncReconEvent(void) {
   /* ReconEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent));
   G__memfunc_setup("ReconEvent",1017,G__reconRootData_rootcint_589_1_0, 105, G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__reconRootData_rootcint_589_2_0, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - eventId h - 'UInt_t' 0 - runId "
"U 'TkrRecon' - 0 - tkr U 'CalRecon' - 0 - cal "
"U 'AcdRecon' - 0 - acd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEventFlags",1443,G__reconRootData_rootcint_589_3_0, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - flags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initAdf",703,G__reconRootData_rootcint_589_4_0, 121, -1, -1, 0, 1, 1, 1, 0, "U 'reconRootData::AdfRecon' - 0 - adf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__reconRootData_rootcint_589_5_0, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Fake",375,G__reconRootData_rootcint_589_6_0, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ievent f - 'Float_t' 0 - randNum", "for tests", (void*) NULL, 0);
   G__memfunc_setup("CompareInRange",1387,G__reconRootData_rootcint_589_7_0, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'ReconEvent' - 11 - - u 'string' - 11 \"\" name", "for tests", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__reconRootData_rootcint_589_8_0, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 \"\" option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEventId",1007,G__reconRootData_rootcint_589_9_0, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunId",802,G__reconRootData_rootcint_589_0_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAcdRecon",1087,G__reconRootData_rootcint_589_1_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCalRecon",1095,G__reconRootData_rootcint_589_2_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTkrRecon",1128,G__reconRootData_rootcint_589_3_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdfRecon",1090,G__reconRootData_rootcint_589_4_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventFlags",1327,G__reconRootData_rootcint_589_5_1, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goodEvent",939,G__reconRootData_rootcint_589_6_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("badEvent",809,G__reconRootData_rootcint_589_7_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("badEventSeq",1106,G__reconRootData_rootcint_589_8_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__reconRootData_rootcint_589_9_1, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&ReconEvent::Class), 0);
   G__memfunc_setup("Class_Name",982,G__reconRootData_rootcint_589_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ReconEvent::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__reconRootData_rootcint_589_1_2, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&ReconEvent::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__reconRootData_rootcint_589_2_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&ReconEvent::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__reconRootData_rootcint_589_3_2, 85, G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__reconRootData_rootcint_589_4_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__reconRootData_rootcint_589_5_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__reconRootData_rootcint_589_6_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__reconRootData_rootcint_589_7_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ReconEvent::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__reconRootData_rootcint_589_8_2, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&ReconEvent::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__reconRootData_rootcint_589_9_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&ReconEvent::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__reconRootData_rootcint_589_0_3, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&ReconEvent::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("ReconEvent", 1017, G__reconRootData_rootcint_589_1_3, (int) ('i'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent), -1, 0, 1, 1, 1, 0, "u 'ReconEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReconEvent", 1143, G__reconRootData_rootcint_589_2_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__reconRootData_rootcint_589_3_3, (int) ('u'), G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent), -1, 1, 1, 1, 1, 0, "u 'ReconEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncreconRootData_rootcint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalreconRootData_rootcint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcreconRootData_rootcint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__reconRootData_rootcintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdId = { "AcdId" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR = { "map<void*,short,less<void*>,allocator<pair<void* const,short> > >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrIntersection = { "AcdTkrIntersection" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackParams = { "TkrTrackParams" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackParamscLcLParamType = { "TkrTrackParams::ParamType" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex = { "TkrTrackParams::ParamIndex" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrPoca = { "AcdTkrPoca" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile = { "AcdTkrPoca::DocaRegionTile" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon = { "AcdTkrPoca::DocaRegionRibbon" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdHit = { "AcdHit" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdHitcLcLPmtId = { "AcdHit::PmtId" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdHitcLcLParityError = { "AcdHit::ParityError" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdHitcLcLFlagBits = { "AcdHit::FlagBits" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks = { "AcdHit::FlagMasks" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrLocalCoords = { "AcdTkrLocalCoords" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdPocaData = { "AcdPocaData" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrHitPoca = { "AcdTkrHitPoca" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdGapId = { "AcdGapId" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrGapPoca = { "AcdTkrGapPoca" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdTkrPoint = { "AcdTkrPoint" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdSplashVars = { "AcdSplashVars" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_AcdRecon = { "AcdRecon" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR = { "vector<AcdId,allocator<AcdId> >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reverse_iteratorlEvectorlEAcdIdcOallocatorlEAcdIdgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AcdId,allocator<AcdId> >::iterator>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalParams = { "CalParams" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalClusterLayerData = { "CalClusterLayerData" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalCluster = { "CalCluster" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR = { "vector<CalClusterLayerData,allocator<CalClusterLayerData> >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CalClusterLayerData,allocator<CalClusterLayerData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalCorToolResult = { "CalCorToolResult" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalEventEnergy = { "CalEventEnergy" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalXtalId = { "CalXtalId" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalXtalIdcLcLXtalFace = { "CalXtalId::XtalFace" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalXtalIdcLcLAdcRange = { "CalXtalId::AdcRange" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalXtalIdcLcLCalTrigMode = { "CalXtalId::CalTrigMode" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalRangeRecData = { "CalRangeRecData" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalXtalRecData = { "CalXtalRecData" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR = { "vector<CalRangeRecData,allocator<CalRangeRecData> >" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CalRangeRecData,allocator<CalRangeRecData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalMipTrack = { "CalMipTrack" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_GcrXtal = { "GcrXtal" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_GcrTrack = { "GcrTrack" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_CalRecon = { "CalRecon" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_commonRootData = { "commonRootData" , 110 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_commonRootDatacLcLTkrId = { "commonRootData::TkrId" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrCluster = { "TkrCluster" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrClustercLcLdA = { "TkrCluster::$" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackHit = { "TkrTrackHit" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType = { "TkrTrackHit::ParamType" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits = { "TkrTrackHit::StatusBits" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackHitcLcLSSDDirection = { "TkrTrackHit::SSDDirection" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrack = { "TkrTrack" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits = { "TkrTrack::StatusBits" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrVertex = { "TkrVertex" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits = { "TkrVertex::StatusBits" , 101 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrDiagnostics = { "TkrDiagnostics" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_TkrRecon = { "TkrRecon" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit = { "commonRootData::TaggerHit" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reconRootData = { "reconRootData" , 110 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster = { "reconRootData::TaggerCluster" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_commonRootDatacLcLQdcHit = { "commonRootData::QdcHit" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_commonRootDatacLcLScalerHit = { "commonRootData::ScalerHit" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon = { "reconRootData::AdfRecon" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_ReconEvent = { "ReconEvent" , 99 , -1 };
G__linked_taginfo G__reconRootData_rootcintLN_ReconEventcLcLEventFlags = { "ReconEvent::EventFlags" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablereconRootData_rootcint() {
  G__reconRootData_rootcintLN_TClass.tagnum = -1 ;
  G__reconRootData_rootcintLN_TBuffer.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMemberInspector.tagnum = -1 ;
  G__reconRootData_rootcintLN_TObject.tagnum = -1 ;
  G__reconRootData_rootcintLN_string.tagnum = -1 ;
  G__reconRootData_rootcintLN_TObjArray.tagnum = -1 ;
  G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TCollection.tagnum = -1 ;
  G__reconRootData_rootcintLN_TIterator.tagnum = -1 ;
  G__reconRootData_rootcintLN_TString.tagnum = -1 ;
  G__reconRootData_rootcintLN_TSeqCollection.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdId.tagnum = -1 ;
  G__reconRootData_rootcintLN_TClonesArray.tagnum = -1 ;
  G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TVector3.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrIntersection.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackParams.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackParamscLcLParamType.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrPoca.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdHit.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdHitcLcLPmtId.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdHitcLcLParityError.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdHitcLcLFlagBits.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrLocalCoords.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdPocaData.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrHitPoca.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdGapId.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrGapPoca.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdTkrPoint.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdSplashVars.tagnum = -1 ;
  G__reconRootData_rootcintLN_AcdRecon.tagnum = -1 ;
  G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_reverse_iteratorlEvectorlEAcdIdcOallocatorlEAcdIdgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalParams.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalClusterLayerData.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalCluster.tagnum = -1 ;
  G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalCorToolResult.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalEventEnergy.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalXtalId.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalXtalIdcLcLXtalFace.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalXtalIdcLcLAdcRange.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalXtalIdcLcLCalTrigMode.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalRangeRecData.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalXtalRecData.tagnum = -1 ;
  G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalMipTrack.tagnum = -1 ;
  G__reconRootData_rootcintLN_GcrXtal.tagnum = -1 ;
  G__reconRootData_rootcintLN_GcrTrack.tagnum = -1 ;
  G__reconRootData_rootcintLN_CalRecon.tagnum = -1 ;
  G__reconRootData_rootcintLN_commonRootData.tagnum = -1 ;
  G__reconRootData_rootcintLN_commonRootDatacLcLTkrId.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrCluster.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrClustercLcLdA.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackHit.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackHitcLcLSSDDirection.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrack.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrVertex.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrDiagnostics.tagnum = -1 ;
  G__reconRootData_rootcintLN_TkrRecon.tagnum = -1 ;
  G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit.tagnum = -1 ;
  G__reconRootData_rootcintLN_reconRootData.tagnum = -1 ;
  G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster.tagnum = -1 ;
  G__reconRootData_rootcintLN_commonRootDatacLcLQdcHit.tagnum = -1 ;
  G__reconRootData_rootcintLN_commonRootDatacLcLScalerHit.tagnum = -1 ;
  G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon.tagnum = -1 ;
  G__reconRootData_rootcintLN_ReconEvent.tagnum = -1 ;
  G__reconRootData_rootcintLN_ReconEventcLcLEventFlags.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablereconRootData_rootcint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClass);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TBuffer);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMemberInspector);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObject);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_string);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TObjArray);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TCollection);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TIterator);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TString);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TSeqCollection);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdId);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TClonesArray);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TVector3);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrIntersection),sizeof(AcdTkrIntersection),-1,327424,(char*)NULL,G__setup_memvarAcdTkrIntersection,G__setup_memfuncAcdTkrIntersection);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParams),sizeof(TkrTrackParams),-1,327424,(char*)NULL,G__setup_memvarTkrTrackParams,G__setup_memfuncTkrTrackParams);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamType);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackParamscLcLParamIndex);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoca),sizeof(AcdTkrPoca),-1,326400,(char*)NULL,G__setup_memvarAcdTkrPoca,G__setup_memfuncAcdTkrPoca);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionTile);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPocacLcLDocaRegionRibbon);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHit),sizeof(AcdHit),-1,324864,(char*)NULL,G__setup_memvarAcdHit,G__setup_memfuncAcdHit);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLPmtId);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLParityError);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagBits);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdHitcLcLFlagMasks);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrLocalCoords),sizeof(AcdTkrLocalCoords),-1,298752,(char*)NULL,G__setup_memvarAcdTkrLocalCoords,G__setup_memfuncAcdTkrLocalCoords);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdPocaData),sizeof(AcdPocaData),-1,298752,(char*)NULL,G__setup_memvarAcdPocaData,G__setup_memfuncAcdPocaData);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrHitPoca),sizeof(AcdTkrHitPoca),-1,326400,(char*)NULL,G__setup_memvarAcdTkrHitPoca,G__setup_memfuncAcdTkrHitPoca);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdGapId);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrGapPoca),sizeof(AcdTkrGapPoca),-1,326400,(char*)NULL,G__setup_memvarAcdTkrGapPoca,G__setup_memfuncAcdTkrGapPoca);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdTkrPoint),sizeof(AcdTkrPoint),-1,327424,(char*)NULL,G__setup_memvarAcdTkrPoint,G__setup_memfuncAcdTkrPoint);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdSplashVars),sizeof(AcdSplashVars),-1,326400,(char*)NULL,G__setup_memvarAcdSplashVars,G__setup_memfuncAcdSplashVars);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_AcdRecon),sizeof(AcdRecon),-1,324864,"Acd Reconstruction data",G__setup_memvarAcdRecon,G__setup_memfuncAcdRecon);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlEAcdIdcOallocatorlEAcdIdgRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlEAcdIdcOallocatorlEAcdIdgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalParams),sizeof(CalParams),-1,296192,(char*)NULL,G__setup_memvarCalParams,G__setup_memfuncCalParams);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalClusterLayerData),sizeof(CalClusterLayerData),-1,296192,(char*)NULL,G__setup_memvarCalClusterLayerData,G__setup_memfuncCalClusterLayerData);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCluster),sizeof(CalCluster),-1,324864,(char*)NULL,G__setup_memvarCalCluster,G__setup_memfuncCalCluster);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalClusterLayerDatacOallocatorlECalClusterLayerDatagRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalCorToolResult),sizeof(CalCorToolResult),-1,326912,(char*)NULL,G__setup_memvarCalCorToolResult,G__setup_memfuncCalCorToolResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalEventEnergy),sizeof(CalEventEnergy),-1,324864,(char*)NULL,G__setup_memvarCalEventEnergy,G__setup_memfuncCalEventEnergy);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalId);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalIdcLcLXtalFace);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalIdcLcLAdcRange);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalIdcLcLCalTrigMode);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRangeRecData),sizeof(CalRangeRecData),-1,324864,"Reconstructed CAL xtals",G__setup_memvarCalRangeRecData,G__setup_memfuncCalRangeRecData);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalXtalRecData),sizeof(CalXtalRecData),-1,292096,(char*)NULL,G__setup_memvarCalXtalRecData,G__setup_memfuncCalXtalRecData);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_vectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgR);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_reverse_iteratorlEvectorlECalRangeRecDatacOallocatorlECalRangeRecDatagRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalMipTrack),sizeof(CalMipTrack),-1,324864,(char*)NULL,G__setup_memvarCalMipTrack,G__setup_memfuncCalMipTrack);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrXtal),sizeof(GcrXtal),-1,324864,(char*)NULL,G__setup_memvarGcrXtal,G__setup_memfuncGcrXtal);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_GcrTrack),sizeof(GcrTrack),-1,324864,(char*)NULL,G__setup_memvarGcrTrack,G__setup_memfuncGcrTrack);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_CalRecon),sizeof(CalRecon),-1,292096,(char*)NULL,G__setup_memvarCalRecon,G__setup_memfuncCalRecon);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootData);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTkrId);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrCluster),sizeof(TkrCluster),-1,324864,(char*)NULL,G__setup_memvarTkrCluster,G__setup_memfuncTkrCluster);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrClustercLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHit),sizeof(TkrTrackHit),-1,324864,(char*)NULL,G__setup_memvarTkrTrackHit,G__setup_memfuncTkrTrackHit);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLParamType);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLStatusBits);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackHitcLcLSSDDirection);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrack),sizeof(TkrTrack),-1,292096,(char*)NULL,G__setup_memvarTkrTrack,G__setup_memfuncTkrTrack);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrTrackcLcLStatusBits);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertex),sizeof(TkrVertex),-1,292096,(char*)NULL,G__setup_memvarTkrVertex,G__setup_memfuncTkrVertex);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrVertexcLcLStatusBits);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrDiagnostics),sizeof(TkrDiagnostics),-1,324864,(char*)NULL,G__setup_memvarTkrDiagnostics,G__setup_memfuncTkrDiagnostics);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_TkrRecon),sizeof(TkrRecon),-1,292096,(char*)NULL,G__setup_memvarTkrRecon,G__setup_memfuncTkrRecon);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLTaggerHit);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootData),0,-1,0,(char*)NULL,G__setup_memvarreconRootData,G__setup_memfuncreconRootData);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLTaggerCluster),sizeof(reconRootData::TaggerCluster),-1,292096,"ReconAncillary data beamtest 2006",G__setup_memvarreconRootDatacLcLTaggerCluster,G__setup_memfuncreconRootDatacLcLTaggerCluster);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLQdcHit);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_commonRootDatacLcLScalerHit);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_reconRootDatacLcLAdfRecon),sizeof(reconRootData::AdfRecon),-1,292096,"ReconAncillary data beamtest 2006",G__setup_memvarreconRootDatacLcLAdfRecon,G__setup_memfuncreconRootDatacLcLAdfRecon);
   G__tagtable_setup(G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEvent),sizeof(ReconEvent),-1,292096,(char*)NULL,G__setup_memvarReconEvent,G__setup_memfuncReconEvent);
   G__get_linked_tagnum(&G__reconRootData_rootcintLN_ReconEventcLcLEventFlags);
}
extern "C" void G__cpp_setupreconRootData_rootcint(void) {
  G__check_setup_version(30051515,"G__cpp_setupreconRootData_rootcint()");
  G__set_cpp_environmentreconRootData_rootcint();
  G__cpp_setup_tagtablereconRootData_rootcint();

  G__cpp_setup_inheritancereconRootData_rootcint();

  G__cpp_setup_typetablereconRootData_rootcint();

  G__cpp_setup_memvarreconRootData_rootcint();

  G__cpp_setup_memfuncreconRootData_rootcint();
  G__cpp_setup_globalreconRootData_rootcint();
  G__cpp_setup_funcreconRootData_rootcint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncreconRootData_rootcint();
  return;
}
class G__cpp_setup_initreconRootData_rootcint {
  public:
    G__cpp_setup_initreconRootData_rootcint() { G__add_setup_func("reconRootData_rootcint",(G__incsetup)(&G__cpp_setupreconRootData_rootcint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initreconRootData_rootcint() { G__remove_setup_func("reconRootData_rootcint"); }
};
G__cpp_setup_initreconRootData_rootcint G__cpp_setup_initializerreconRootData_rootcint;

